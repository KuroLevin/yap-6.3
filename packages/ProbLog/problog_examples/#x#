% YAP 6.3.5-fadf853e (compiled  2018-02-07T13:57:15@vsc-GL502VM)
% database loaded from /home/vsc/.local/lib/Yap/startup.yss
 % reconsulting alarm...
  % reconsulting ../problog...
   % reconsulting library(lists)...
   % reconsulted /home/vsc/.local/share/Yap/lists.yap in module lists, 4 msec 0 bytes
   % reconsulting library(terms)...
   % reconsulted /home/vsc/.local/share/Yap/terms.yap in module terms, 1 msec 0 bytes
   % reconsulting library(random)...
   % reconsulted /home/vsc/.local/share/Yap/random.yap in module random, 2 msec 0 bytes
   % reconsulting library(system)...
   % reconsulted /home/vsc/.local/share/Yap/system.yap in module operating_system_support, 6 msec 0 bytes
   % reconsulting library(ordsets)...
   % reconsulted /home/vsc/.local/share/Yap/ordsets.yap in module ordsets, 3 msec 0 bytes
   % reconsulting library(lineutils)...
    % reconsulting library(readutil)...
    % reconsulted /home/vsc/.local/share/Yap/readutil.yap in module readutil, 0 msec 0 bytes
   % reconsulted /home/vsc/.local/share/Yap/lineutils.yap in module lineutils, 5 msec 0 bytes
   % reconsulting problog/variables...
    % reconsulting library(timeout)...
     % reconsulting library(hacks)...
     % reconsulted /home/vsc/.local/share/Yap/hacks.yap in module yap_hacks, 1 msec 0 bytes
    % reconsulted /home/vsc/.local/share/Yap/timeout.yap in module timeout, 2 msec 0 bytes
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/variables.yap in module variables, 4 msec 0 bytes
   % reconsulting problog/extlists...
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/extlists.yap in module extlists, 1 msec 0 bytes
   % reconsulting problog/gflags...
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/gflags.yap in module gflags, 5 msec 0 bytes
   % reconsulting problog/flags...
    % reconsulting os...
    % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/os.yap in module os, 1 msec 0 bytes
    % reconsulting logger...
    % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/logger.yap in module logger, 2 msec 0 bytes
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/flags.yap in module flags, 7 msec 0 bytes
   % reconsulting problog/print...
    % reconsulting version_control...
    % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/version_control.yap in module version_control, 1 msec 0 bytes
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/print.yap in module print, 5 msec 0 bytes
   % reconsulting problog/ptree...
    % reconsulting library(tries)...
    % reconsulted /home/vsc/.local/share/Yap/tries.yap in module tries, 1 msec 0 bytes
    % reconsulting utils...
    % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/utils.yap in module utils, 0 msec 0 bytes
    % reconsulting nestedtries...
    % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/nestedtries.yap in module nestedtries, 2 msec 0 bytes
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/ptree.yap in module ptree, 21 msec 0 bytes
   % reconsulting problog/tabling...
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/tabling.yap in module tabling, 4 msec 0 bytes
   % reconsulting problog/sampling...
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/sampling.yap in module sampling, 2 msec 0 bytes
   % reconsulting problog/intervals...
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/intervals.yap in module intervals, 3 msec 0 bytes
   % reconsulting problog/mc_DNF_sampling...
    % reconsulting hash_table...
    % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/hash_table.yap in module hash_table, 1 msec 0 bytes
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/mc_DNF_sampling.yap in module mc_DNF_sampling, 6 msec 0 bytes
   % reconsulting problog/timer...
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/timer.yap in module timer, 1 msec 0 bytes
   % reconsulting problog/ad_converter...
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/ad_converter.yap in module ad_converter, 3 msec 0 bytes
   % reconsulting problog/variable_elimination...
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/variable_elimination.yap in module variable_elimination, 3 msec 0 bytes
/home/vsc/github/yap-6.3/packages/ProbLog/problog.yap:2617:0  warning: singleton variable P in problog:problog_low/4.

  % including /home/vsc/github/yap-6.3/packages/ProbLog/problog_lbdd.yap...
   % reconsulting library(trie_sp)...
    % reconsulting bdd...
     % reconsulting library(maplist)...
      % reconsulting library(maputils)...
      % reconsulted /home/vsc/.local/share/Yap/maputils.yap in module maputils, 2 msec 0 bytes
      % reconsulting library(charsio)...
Unknown exception: error(resource_error(database_space,[]),[[e|p(prolog,fail,0,/home/vsc/github/yap-6.3/pl,0)],[p|p(prolog,$enter_command,3,/home/vsc/github/yap-6.3/pl,850)],[c|c(/home/vsc/github/yap-6.3/C/grow.c,1483,Yap_locked_growheap)],[i|]])
/home/vsc/.local/share/Yap/charsio.yap:224:0  warning: syntax error bracket or operator expected.
nd_of_file) <<<< at line 224 


      % reconsulted /home/vsc/.local/share/Yap/charsio.yap in module charsio, 2 msec 0 bytes
      % reconsulting library(occurs)...
       % reconsulting library(arg)...
       % reconsulted /home/vsc/.local/share/Yap/arg.yap in module arg, 1 msec 0 bytes
      % reconsulted /home/vsc/.local/share/Yap/occurs.yap in module occurs, 2 msec 0 bytes
     % reconsulted /home/vsc/.local/share/Yap/maplist.yap in module maplist, 14 msec 0 bytes
     % reconsulting library(rbtrees)...
     % reconsulted /home/vsc/.local/share/Yap/rbtrees.yap in module rbtrees, 12 msec 0 bytes
     % reconsulting library(simpbool)...
     % reconsulted /home/vsc/.local/share/Yap/simpbool.yap in module simplify_boolean, 1 msec 0 bytes
    % reconsulted /home/vsc/.local/share/Yap/bdd.yap in module bdd, 33 msec 0 bytes
   % reconsulted /home/vsc/.local/share/Yap/trie_sp.yap in module trie_sp, 35 msec 0 bytes
   % reconsulting library(bhash)...
   % reconsulted /home/vsc/.local/share/Yap/bhash.yap in module b_hash, 3 msec 0 bytes
  % /home/vsc/github/yap-6.3/packages/ProbLog/problog_lbdd.yap included in module problog, 39 msec 0 bytes
  % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog.yap in module problog, 164 msec 0 bytes
  % reconsulting ../problog_lfi...
   % reconsulting problog/completion...
    % reconsulting grounder...
     % reconsulting termhandling...
     % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/termhandling.yap in module termhandling, 3 msec 0 bytes
    % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/grounder.yap in module grounder, 4 msec 0 bytes
    % reconsulting print_learning...
    % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/print_learning.yap in module print_learning, 2 msec 0 bytes
    % reconsulting utils_learning...
    % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/utils_learning.yap in module utils_learning, 3 msec 0 bytes
   % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog/completion.yap in module completion, 18 msec 0 bytes
  % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap in module problog_lfi, 31 msec 0 bytes
 % reconsulted /home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/alarm.pl in module user, 218 msec 0 bytes
1d 78 0 CALL:  prolog:$call(do_learning(100), 78, start_low_level_trace,do_learning(100), user )
2d 111 0 FAIL RETRY:  prolog:$call(do_learning(100), 78, start_low_level_trace,do_learning(100), user )
3d 78 0 CALL:  prolog:$execute0(do_learning(100), user )
+s 0x5602aec08ae0
 @0x7efdd88a3078 0
4d 78 0 CALL:  user:do_learning(100 )
5d 78 0 CALL:  prolog:$undefp([user|do_learning(100)], error )
6d 78 0 CALL:  prolog:yap_flag(unknown, error, fail )
7d 78 0 CALL:  prolog:$stop_creeping(_1048462 )
8d 78 0 TRY_OR 
9d 124 0 CALL:  prolog:$undefp_search(user:do_learning(100), _131400:_131401 )
10d 133 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_131403,_131404,_131405,_131406), user )
11d 133 0 FAIL RETRY:  prolog:$undefp_search(user:do_learning(100), _131400:_131401 )
12d 124 0 CALL:  prolog:expand_goal(user:do_learning(100), _131400:_131401 )
13d 124 0 CALL:  prolog:$expand_meta_call(user:do_learning(100), [], _131400:_131401 )
14d 124 0 CALL:  prolog:source_module(_131402 )
15d 124 0 CALL:  prolog:$yap_strip_module(user:user:do_learning(100), _1048442, _131406 )
16d 124 0 CALL:  prolog:$expand_goals(do_learning(100), _1048441, _1048443, user, user, user, []- (user:do_learning(100)) )
17d 148 0 FAIL RETRY:  prolog:$expand_goals(do_learning(100), _1048441, _1048443, user, user, user, []- (user:do_learning(100)) )
18d 148 0 FAIL RETRY:  prolog:$expand_goals(do_learning(100), _1048441, _1048443, user, user, user, []- (user:do_learning(100)) )
19d 148 0 FAIL RETRY:  prolog:$expand_goals(do_learning(100), _1048441, _1048443, user, user, user, []- (user:do_learning(100)) )
20d 124 0 CALL:  prolog:$yap_strip_module(user:do_learning(100), _131413, _131414 )
21d 124 0 CALL:  prolog:$expand_goal(do_learning(100), _1048441, _1048443, user, user, user, []- (user:do_learning(100)) )
22d 124 0 CALL:  prolog:$yap_strip_module(user:do_learning(100), _131418, _131419 )
23d 124 0 CALL:  prolog:$user_expansion(user:do_learning(100), _131424:_131425 )
24d 158 0 CALL:  prolog:_user_expand_goal(user:do_learning(100), _131427:_131428 )
27d 158 0 FAIL RETRY:  prolog:$user_expansion(user:do_learning(100), _131424:_131425 )
28d 124 0 CALL:  prolog:$import_expansion(user:do_learning(100), _131427:_131428 )
29d 157 0 CALL:  prolog:$imported_predicate(do_learning(100), user, _131428, _131427 )
30d 173 0 CALL:  prolog:$is_system_predicate(do_learning(100), prolog )
31d 173 0 FAIL RETRY:  prolog:$imported_predicate(do_learning(100), user, _131428, _131427 )
32d 157 0 CALL:  prolog:$undefined(do_learning(100), user )
33d 157 0 CALL:  prolog:$get_undefined_predicates(do_learning(100), user, _131428, _131427 )
34d 180 0 CALL:  prolog:recorded('$import', '$import'(_131430,user,_131432,do_learning(100),_131434,_131435), _1048385 )
35d 180 0 CALL:  prolog:$continue_imported(_131427, problog_lfi, _131428, do_learning(100) )
36d 191 0 CALL:  prolog:$pred_exists(do_learning(100), problog_lfi )
37d 180 0 CALL:  prolog:\=(problog_lfi, user )
38d 124 0 CALL:  prolog:$meta_expansion(problog_lfi:do_learning(100), user, [], _1048430 )
39d 156 0 CALL:  prolog:$yap_strip_module(problog_lfi:do_learning(100), _131448, _1048409 )
40d 156 0 CALL:  prolog:functor(do_learning(100), _131451, _131452 )
41d 156 0 CALL:  prolog:$meta_predicate(do_learning, problog_lfi, 1, _1048410 )
42d 156 0 FAIL RETRY:  prolog:$meta_expansion(problog_lfi:do_learning(100), user, [], _1048430 )
43d 124 0 CALL:  prolog:$yap_strip_module(problog_lfi:do_learning(100), _131448, _131449 )
44d 124 0 CALL:  prolog:$yap_strip_module(problog_lfi:do_learning(100), _131450, _131451 )
45d 124 0 CALL:  prolog:$end_goal_expansion(do_learning(100), _1048441, _1048443, user, user, problog_lfi, user:do_learning(100) )
46d 124 0 CALL:  prolog:$match_mod(do_learning(100), user, user, problog_lfi, _1048441 )
47d 124 0 CALL:  prolog:$is_system_predicate(do_learning(100), problog_lfi )
48d 124 0 TRY_OR 
49d 162 0 CALL:  prolog:==(problog_lfi, user )
51d 124 0 CALL:  prolog:$c_built_in(problog_lfi:do_learning(100), problog_lfi, user:do_learning(100), _1048432 )
52d 155 0 CALL:  prolog:get_value('$c_arith', true )
53d 124 0 CALL:  prolog:do_c_built_in(problog_lfi:do_learning(100), problog_lfi, user:do_learning(100), _1048432 )
54d 166 0 CALL:  prolog:$yap_strip_module(problog_lfi:do_learning(100), _131455, _131456 )
55d 166 0 FAIL RETRY:  prolog:do_c_built_in(problog_lfi:do_learning(100), problog_lfi, user:do_learning(100), _1048432 )
56d 166 0 CALL:  prolog:$compop(problog_lfi:do_learning(100), _1048394, _1048395, _1048397 )
57d 166 0 FAIL RETRY:  prolog:do_c_built_in(problog_lfi:do_learning(100), problog_lfi, user:do_learning(100), _1048432 )
58d 166 0 CALL:  prolog:$yap_strip_module(problog_lfi:problog_lfi:do_learning(100), _131458, _131459 )
59d 166 0 CALL:  prolog:$match_mod(do_learning(100), user, user, problog_lfi, _1048443 )
60d 166 0 CALL:  prolog:$is_system_predicate(do_learning(100), problog_lfi )
61d 166 0 TRY_OR 
62d 182 0 CALL:  prolog:==(problog_lfi, user )
64d 166 0 CALL:  prolog:$yap_strip_module(user:problog_lfi:do_learning(100), _131400, _131401 )
65d 166 0 TRY_OR 
66d 174 0 CALL:  prolog:\==(user, problog_lfi )
67d 166 0 CALL:  prolog:\=(do_learning(100), fail )
68d 78 0 CALL:  prolog:yap_flag(unknown, _1048461, error )
69d 78 0 TRY_OR 
70d 121 0 CALL:  prolog:==(false, true )
72d 78 0 CALL:  prolog:$execute0(do_learning(100), problog_lfi )
73d 78 0 CALL:  problog_lfi:do_learning(100 )
74d 78 0 CALL:  problog_lfi:do_learning(100, -1 )
75d 78 0 CALL:  prolog:>(100, 0 )
76d 78 0 CALL:  problog_lfi:init_learning
+s 0x5602af1f0450
 @0x7efdd88a3088 0
+s 0x5602aec28b10
 @0x7efdd88a3088 0
- 0x5602af1f0450
 @0x7efdd88a3088 78
77d 115 0 CALL:  problog_lfi:learning_initialized
78d 115 0 FAIL RETRY:  problog_lfi:init_learning
79d 78 0 CALL:  os:convert_filename_to_problog_path(simplecudd_lfi, _1048452 )
80d 78 0 CALL:  os:problog_path(_1048444 )
81d 140 0 CALL:  os:concat_path_with_filename('/usr/local/bin', simplecudd_lfi, _1048452 )
82d 140 0 CALL:  os:path_separator(_1048427 )
83d 157 0 CALL:  prolog:current_prolog_flag(windows, true )
84d 157 0 FAIL RETRY:  os:path_separator(_1048427 )
85d 140 0 CALL:  prolog:atomic_list_concat(['/usr/local/bin',/,simplecudd_lfi], _1048452 )
86d 140 0 CALL:  prolog:atomic_concat(['/usr/local/bin',/,simplecudd_lfi], _1048452 )
87d 140 0 CALL:  prolog:catch(os:file_exists('/usr/local/bin/simplecudd_lfi'), _131477, os:fail )
88d 140 0 CALL:  prolog:$catch(os:file_exists('/usr/local/bin/simplecudd_lfi'), _131477, os:fail )
89d 150 0 CALL:  prolog:$execute(os:file_exists('/usr/local/bin/simplecudd_lfi') )
90d 150 0 CALL:  prolog:file_exists('/usr/local/bin/simplecudd_lfi' )
91d 150 0 CALL:  prolog:absolute_file_name('/usr/local/bin/simplecudd_lfi', _131481, [expand(true),solutions(first),access(exist)] )
92d 150 0 CALL:  prolog:absolute_file_name('/usr/local/bin/simplecudd_lfi', [expand(true),solutions(first),access(exist)], _131481 )
93d 176 0 FAIL RETRY:  prolog:absolute_file_name('/usr/local/bin/simplecudd_lfi', [expand(true),solutions(first),access(exist)], _131481 )
94d 150 0 CALL:  prolog:$absolute_file_name('/usr/local/bin/simplecudd_lfi', [expand(true),solutions(first),access(exist)], _131481 )
95d 150 0 CALL:  prolog:gated_call('$enter_absf'('/usr/local/bin/simplecudd_lfi',[expand(true),solutions(first),access(exist)],_131497,_131498,_131499,_131500,_131501,_131502,_131503,_131504,_131505), '$find_in_path'('/usr/local/bin/simplecudd_lfi',_131497,_131481,_131498,_131504), _131512, '$absf_port'(_131512,'/usr/local/bin/simplecudd_lfi',_131481,_131498,_131499,_131500,_131501,_131502,_131503,_131504,_131505) )
96d 150 0 CALL:  prolog:$setup_call_catcher_cleanup('$enter_absf'('/usr/local/bin/simplecudd_lfi',[expand(true),solutions(first),access(exist)],_131497,_131498,_131499,_131500,_131501,_131502,_131503,_131504,_131505) )
97d 186 0 CALL:  prolog:abs_file_parameters([expand(true),solutions(first),access(exist)], _131497 )
98d 186 0 CALL:  prolog:current_prolog_flag(open_expands_filename, _131499 )
99d 186 0 CALL:  prolog:current_prolog_flag(fileerrors, _131500 )
100d 186 0 CALL:  prolog:current_prolog_flag(verbose_file_search, _131501 )
101d 186 0 CALL:  prolog:get_abs_file_parameter(verbose_file_search, opt(exist,true,[],error,txt,'','',first,false), _131503 )
102d 186 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), _131502 )
103d 186 0 CALL:  prolog:set_prolog_flag(verbose_file_search, false )
104d 186 0 CALL:  prolog:get_abs_file_parameter(file_errors, opt(exist,true,[],error,txt,'','',first,false), _131535 )
105d 186 0 CALL:  prolog:get_abs_file_parameter(solutions, opt(exist,true,[],error,txt,'','',first,false), _131504 )
106d 186 0 TRY_OR 
107d 204 0 CALL:  prolog:==(error, fail )
109d 186 0 CALL:  prolog:set_prolog_flag(fileerrors, true )
110d 186 0 CALL:  prolog:set_prolog_flag(file_name_variables, true )
111d 186 0 CALL:  prolog:$absf_trace('/usr/local/bin/simplecudd_lfi' )
112d 201 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
113d 201 0 FAIL RETRY:  prolog:$absf_trace('/usr/local/bin/simplecudd_lfi' )
114d 186 0 CALL:  prolog:$absf_trace_options([expand(true),solutions(first),access(exist)] )
115d 200 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
116d 200 0 FAIL RETRY:  prolog:$absf_trace_options([expand(true),solutions(first),access(exist)] )
117d 150 0 CALL:  prolog:$gated_call(true, '$find_in_path'('/usr/local/bin/simplecudd_lfi',opt(exist,true,[],error,txt,'','',first,false),_131481,t(no),first), _131512, '$absf_port'(_131512,'/usr/local/bin/simplecudd_lfi',_131481,t(no),false,true,false,true,false,first,true) )
118d 150 0 CALL:  prolog:$tag_cleanup(_131544, cleanup(true,_131512,'$absf_port'(_131512,'/usr/local/bin/simplecudd_lfi',_131481,t(no),false,true,false,true,false,first,true),_131542,true,_131544) )
119d 150 0 CALL:  prolog:$execute('$find_in_path'('/usr/local/bin/simplecudd_lfi',opt(exist,true,[],error,txt,'','',first,false),_131481,t(no),first) )
120d 150 0 CALL:  prolog:$find_in_path('/usr/local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _131481, t(no), first )
121d 175 0 FAIL RETRY:  prolog:$find_in_path('/usr/local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _131481, t(no), first )
122d 150 0 CALL:  prolog:get_abs_file_parameter(file_type, opt(exist,true,[],error,txt,'','',first,false), _1048404 )
123d 150 0 CALL:  prolog:get_abs_file_parameter(access, opt(exist,true,[],error,txt,'','',first,false), _1048405 )
124d 150 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), _1048399 )
125d 150 0 CALL:  prolog:$absf_trace('start with ~w', ['/usr/local/bin/simplecudd_lfi'] )
126d 191 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
127d 191 0 FAIL RETRY:  prolog:$absf_trace('start with ~w', ['/usr/local/bin/simplecudd_lfi'] )
128d 150 0 CALL:  prolog:$core_file_name('/usr/local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _1048395, [] )
129d 150 0 CALL:  prolog:$file_name('/usr/local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _1048384, _1048395, _1048385 )
130d 203 0 CALL:  prolog:=..('/usr/local/bin/simplecudd_lfi', [_131562,_131564] )
131d 203 0 FAIL RETRY:  prolog:$file_name('/usr/local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _1048384, _1048395, _1048385 )
132d 150 0 CALL:  prolog:$cat_file_name('/usr/local/bin/simplecudd_lfi', _1048384, _1048395, _1048385 )
133d 202 0 FAIL RETRY:  prolog:$cat_file_name('/usr/local/bin/simplecudd_lfi', _1048384, _1048395, _1048385 )
134d 202 0 CALL:  prolog:atom_codes('/usr/local/bin/simplecudd_lfi', _1048384 )
135d 150 0 CALL:  prolog:phrase([47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _1048395, _1048385 )
136d 150 0 CALL:  prolog:$phrase_list([117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131621, _1048385 )
137d 150 0 CALL:  prolog:$phrase_list([115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131623, _1048385 )
138d 150 0 CALL:  prolog:$phrase_list([114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131625, _1048385 )
139d 150 0 CALL:  prolog:$phrase_list([47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131627, _1048385 )
140d 150 0 CALL:  prolog:$phrase_list([108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131629, _1048385 )
141d 150 0 CALL:  prolog:$phrase_list([111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131631, _1048385 )
142d 150 0 CALL:  prolog:$phrase_list([99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131633, _1048385 )
143d 150 0 CALL:  prolog:$phrase_list([97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131635, _1048385 )
144d 150 0 CALL:  prolog:$phrase_list([108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131637, _1048385 )
145d 150 0 CALL:  prolog:$phrase_list([47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131639, _1048385 )
146d 150 0 CALL:  prolog:$phrase_list([98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131641, _1048385 )
147d 150 0 CALL:  prolog:$phrase_list([105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131643, _1048385 )
148d 150 0 CALL:  prolog:$phrase_list([110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131645, _1048385 )
149d 150 0 CALL:  prolog:$phrase_list([47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131647, _1048385 )
150d 150 0 CALL:  prolog:$phrase_list([115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131649, _1048385 )
151d 150 0 CALL:  prolog:$phrase_list([105,109,112,108,101,99,117,100,100,95,108,102,105], _131651, _1048385 )
152d 150 0 CALL:  prolog:$phrase_list([109,112,108,101,99,117,100,100,95,108,102,105], _131653, _1048385 )
153d 150 0 CALL:  prolog:$phrase_list([112,108,101,99,117,100,100,95,108,102,105], _131655, _1048385 )
154d 150 0 CALL:  prolog:$phrase_list([108,101,99,117,100,100,95,108,102,105], _131657, _1048385 )
155d 150 0 CALL:  prolog:$phrase_list([101,99,117,100,100,95,108,102,105], _131659, _1048385 )
156d 150 0 CALL:  prolog:$phrase_list([99,117,100,100,95,108,102,105], _131661, _1048385 )
157d 150 0 CALL:  prolog:$phrase_list([117,100,100,95,108,102,105], _131663, _1048385 )
158d 150 0 CALL:  prolog:$phrase_list([100,100,95,108,102,105], _131665, _1048385 )
159d 150 0 CALL:  prolog:$phrase_list([100,95,108,102,105], _131667, _1048385 )
160d 150 0 CALL:  prolog:$phrase_list([95,108,102,105], _131669, _1048385 )
161d 150 0 CALL:  prolog:$phrase_list([108,102,105], _131671, _1048385 )
162d 150 0 CALL:  prolog:$phrase_list([102,105], _131673, _1048385 )
163d 150 0 CALL:  prolog:$phrase_list([105], _131675, _1048385 )
164d 150 0 CALL:  prolog:$phrase_list([], _131677, _1048385 )
165d 150 0 CALL:  prolog:$suffix([47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _131677, _1048387 )
166d 200 0 CALL:  lists:append(_1048365, [46|_131679], [47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
167d 220 0 FAIL RETRY:  lists:append(_1048365, [46|_131679], [47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
168d 200 0 CALL:  lists:append(_131681, [46|_131679], [117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
169d 220 0 FAIL RETRY:  lists:append(_131681, [46|_131679], [117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
170d 200 0 CALL:  lists:append(_131683, [46|_131679], [115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
171d 220 0 FAIL RETRY:  lists:append(_131683, [46|_131679], [115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
172d 200 0 CALL:  lists:append(_131685, [46|_131679], [114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
173d 220 0 FAIL RETRY:  lists:append(_131685, [46|_131679], [114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
174d 200 0 CALL:  lists:append(_131687, [46|_131679], [47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
175d 220 0 FAIL RETRY:  lists:append(_131687, [46|_131679], [47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
176d 200 0 CALL:  lists:append(_131689, [46|_131679], [108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
177d 220 0 FAIL RETRY:  lists:append(_131689, [46|_131679], [108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
178d 200 0 CALL:  lists:append(_131691, [46|_131679], [111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
179d 220 0 FAIL RETRY:  lists:append(_131691, [46|_131679], [111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
180d 200 0 CALL:  lists:append(_131693, [46|_131679], [99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
181d 220 0 FAIL RETRY:  lists:append(_131693, [46|_131679], [99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
182d 200 0 CALL:  lists:append(_131695, [46|_131679], [97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
183d 220 0 FAIL RETRY:  lists:append(_131695, [46|_131679], [97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
184d 200 0 CALL:  lists:append(_131697, [46|_131679], [108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
185d 220 0 FAIL RETRY:  lists:append(_131697, [46|_131679], [108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
186d 200 0 CALL:  lists:append(_131699, [46|_131679], [47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
187d 220 0 FAIL RETRY:  lists:append(_131699, [46|_131679], [47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
188d 200 0 CALL:  lists:append(_131701, [46|_131679], [98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
189d 220 0 FAIL RETRY:  lists:append(_131701, [46|_131679], [98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
190d 200 0 CALL:  lists:append(_131703, [46|_131679], [105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
191d 220 0 FAIL RETRY:  lists:append(_131703, [46|_131679], [105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
192d 200 0 CALL:  lists:append(_131705, [46|_131679], [110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
193d 220 0 FAIL RETRY:  lists:append(_131705, [46|_131679], [110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
194d 200 0 CALL:  lists:append(_131707, [46|_131679], [47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
195d 220 0 FAIL RETRY:  lists:append(_131707, [46|_131679], [47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
196d 200 0 CALL:  lists:append(_131709, [46|_131679], [115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
197d 220 0 FAIL RETRY:  lists:append(_131709, [46|_131679], [115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
198d 200 0 CALL:  lists:append(_131711, [46|_131679], [105,109,112,108,101,99,117,100,100,95,108,102,105] )
199d 220 0 FAIL RETRY:  lists:append(_131711, [46|_131679], [105,109,112,108,101,99,117,100,100,95,108,102,105] )
200d 200 0 CALL:  lists:append(_131713, [46|_131679], [109,112,108,101,99,117,100,100,95,108,102,105] )
201d 220 0 FAIL RETRY:  lists:append(_131713, [46|_131679], [109,112,108,101,99,117,100,100,95,108,102,105] )
202d 200 0 CALL:  lists:append(_131715, [46|_131679], [112,108,101,99,117,100,100,95,108,102,105] )
203d 220 0 FAIL RETRY:  lists:append(_131715, [46|_131679], [112,108,101,99,117,100,100,95,108,102,105] )
204d 200 0 CALL:  lists:append(_131717, [46|_131679], [108,101,99,117,100,100,95,108,102,105] )
205d 220 0 FAIL RETRY:  lists:append(_131717, [46|_131679], [108,101,99,117,100,100,95,108,102,105] )
206d 200 0 CALL:  lists:append(_131719, [46|_131679], [101,99,117,100,100,95,108,102,105] )
207d 220 0 FAIL RETRY:  lists:append(_131719, [46|_131679], [101,99,117,100,100,95,108,102,105] )
208d 200 0 CALL:  lists:append(_131721, [46|_131679], [99,117,100,100,95,108,102,105] )
209d 220 0 FAIL RETRY:  lists:append(_131721, [46|_131679], [99,117,100,100,95,108,102,105] )
210d 200 0 CALL:  lists:append(_131723, [46|_131679], [117,100,100,95,108,102,105] )
211d 220 0 FAIL RETRY:  lists:append(_131723, [46|_131679], [117,100,100,95,108,102,105] )
212d 200 0 CALL:  lists:append(_131725, [46|_131679], [100,100,95,108,102,105] )
213d 220 0 FAIL RETRY:  lists:append(_131725, [46|_131679], [100,100,95,108,102,105] )
214d 200 0 CALL:  lists:append(_131727, [46|_131679], [100,95,108,102,105] )
215d 220 0 FAIL RETRY:  lists:append(_131727, [46|_131679], [100,95,108,102,105] )
216d 200 0 CALL:  lists:append(_131729, [46|_131679], [95,108,102,105] )
217d 220 0 FAIL RETRY:  lists:append(_131729, [46|_131679], [95,108,102,105] )
218d 200 0 CALL:  lists:append(_131731, [46|_131679], [108,102,105] )
219d 220 0 FAIL RETRY:  lists:append(_131731, [46|_131679], [108,102,105] )
220d 200 0 CALL:  lists:append(_131733, [46|_131679], [102,105] )
221d 220 0 FAIL RETRY:  lists:append(_131733, [46|_131679], [102,105] )
222d 200 0 CALL:  lists:append(_131735, [46|_131679], [105] )
223d 220 0 FAIL RETRY:  lists:append(_131735, [46|_131679], [105] )
224d 200 0 CALL:  lists:append(_131737, [46|_131679], [] )
225d 220 0 FAIL RETRY:  lists:append(_131737, [46|_131679], [] )
226d 200 0 FAIL RETRY:  prolog:$suffix([47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _131677, _1048387 )
227d 200 0 TRY_OR 
228d 222 0 CALL:  prolog:get_abs_file_parameter(extensions, opt(exist,true,[],error,txt,'','',first,false), _1048361 )
229d 222 0 CALL:  prolog:\=([], [] )
231d 200 0 CALL:  prolog:get_abs_file_parameter(file_type, opt(exist,true,[],error,txt,'','',first,false), _131678 )
232d 200 0 TRY_OR 
233d 220 0 CALL:  prolog:==(txt, source )
235d 200 0 CALL:  user:prolog_file_type(_1048366, txt )
236d 200 0 FAIL RETRY:  prolog:$suffix([47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _131677, _1048387 )
237d 150 0 CALL:  prolog:$absf_trace(' try no suffix', [], _131677, _1048387 )
238d 200 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
239d 200 0 FAIL RETRY:  prolog:$absf_trace(' try no suffix', [], _131677, _1048387 )
240d 150 0 CALL:  prolog:$glob(opt(exist,true,[],error,txt,'','',first,false), _131677, [] )
241d 191 0 CALL:  prolog:get_abs_file_parameter(glob, opt(exist,true,[],error,txt,'','',first,false), _131678 )
242d 191 0 CALL:  prolog:\=('', '' )
243d 191 0 FAIL RETRY:  prolog:$glob(opt(exist,true,[],error,txt,'','',first,false), _131677, [] )
244d 150 0 CALL:  prolog:$absf_trace('  after name/library unfolding: ~w', ['/usr/local/bin/simplecudd_lfi'] )
245d 189 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
246d 189 0 FAIL RETRY:  prolog:$absf_trace('  after name/library unfolding: ~w', ['/usr/local/bin/simplecudd_lfi'] )
247d 150 0 CALL:  prolog:$variable_expansion([47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _1048396 )
248d 189 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), true )
249d 150 0 CALL:  prolog:$expand_file_name([47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _1048396 )
250d 150 0 CALL:  prolog:$absf_trace('   after environment variable expansion: ~s', [[47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105]] )
251d 188 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
252d 188 0 FAIL RETRY:  prolog:$absf_trace('   after environment variable expansion: ~s', [[47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105]] )
253d 150 0 CALL:  prolog:$prefix([47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _1048398, [] )
254d 188 0 CALL:  prolog:is_absolute_file_name([47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
255d 150 0 CALL:  prolog:phrase([47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _1048398, [] )
256d 150 0 CALL:  prolog:$phrase_list([117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131741, [] )
257d 150 0 CALL:  prolog:$phrase_list([115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131743, [] )
258d 150 0 CALL:  prolog:$phrase_list([114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131745, [] )
259d 150 0 CALL:  prolog:$phrase_list([47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131747, [] )
260d 150 0 CALL:  prolog:$phrase_list([108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131749, [] )
261d 150 0 CALL:  prolog:$phrase_list([111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131751, [] )
262d 150 0 CALL:  prolog:$phrase_list([99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131753, [] )
263d 150 0 CALL:  prolog:$phrase_list([97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131755, [] )
264d 150 0 CALL:  prolog:$phrase_list([108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131757, [] )
265d 150 0 CALL:  prolog:$phrase_list([47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131759, [] )
266d 150 0 CALL:  prolog:$phrase_list([98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131761, [] )
267d 150 0 CALL:  prolog:$phrase_list([105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131763, [] )
268d 150 0 CALL:  prolog:$phrase_list([110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131765, [] )
269d 150 0 CALL:  prolog:$phrase_list([47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131767, [] )
270d 150 0 CALL:  prolog:$phrase_list([115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131769, [] )
271d 150 0 CALL:  prolog:$phrase_list([105,109,112,108,101,99,117,100,100,95,108,102,105], _131771, [] )
272d 150 0 CALL:  prolog:$phrase_list([109,112,108,101,99,117,100,100,95,108,102,105], _131773, [] )
273d 150 0 CALL:  prolog:$phrase_list([112,108,101,99,117,100,100,95,108,102,105], _131775, [] )
274d 150 0 CALL:  prolog:$phrase_list([108,101,99,117,100,100,95,108,102,105], _131777, [] )
275d 150 0 CALL:  prolog:$phrase_list([101,99,117,100,100,95,108,102,105], _131779, [] )
276d 150 0 CALL:  prolog:$phrase_list([99,117,100,100,95,108,102,105], _131781, [] )
277d 150 0 CALL:  prolog:$phrase_list([117,100,100,95,108,102,105], _131783, [] )
278d 150 0 CALL:  prolog:$phrase_list([100,100,95,108,102,105], _131785, [] )
279d 150 0 CALL:  prolog:$phrase_list([100,95,108,102,105], _131787, [] )
280d 150 0 CALL:  prolog:$phrase_list([95,108,102,105], _131789, [] )
281d 150 0 CALL:  prolog:$phrase_list([108,102,105], _131791, [] )
282d 150 0 CALL:  prolog:$phrase_list([102,105], _131793, [] )
283d 150 0 CALL:  prolog:$phrase_list([105], _131795, [] )
284d 150 0 CALL:  prolog:$phrase_list([], _131797, [] )
285d 150 0 CALL:  prolog:$absf_trace('    after prefix expansion: ~s', [[47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105]] )
286d 186 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
287d 186 0 FAIL RETRY:  prolog:$absf_trace('    after prefix expansion: ~s', [[47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105]] )
288d 150 0 CALL:  prolog:atom_codes(_1048401, [47,117,115,114,47,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
289d 150 0 TRY_OR 
290d 150 0 CALL:  prolog:expand_file_name('/usr/local/bin/simplecudd_lfi', _1048400 )
291d 150 0 CALL:  prolog:$absf_trace('     after shell globbing: ~w', [['/usr/local/bin/simplecudd_lfi']] )
292d 184 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
293d 184 0 FAIL RETRY:  prolog:$absf_trace('     after shell globbing: ~w', [['/usr/local/bin/simplecudd_lfi']] )
294d 150 0 CALL:  lists:member(_1048402, ['/usr/local/bin/simplecudd_lfi'] )
295d 183 0 CALL:  prolog:real_path('/usr/local/bin/simplecudd_lfi', _131481 )
296d 183 0 CALL:  prolog:$absf_trace('      after canonical path name: ~a', ['/usr/local/bin/simplecudd_lfi'] )
297d 192 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
298d 192 0 FAIL RETRY:  prolog:$absf_trace('      after canonical path name: ~a', ['/usr/local/bin/simplecudd_lfi'] )
299d 183 0 CALL:  prolog:$check_file('/usr/local/bin/simplecudd_lfi', txt, exist )
300d 193 0 FAIL RETRY:  prolog:$check_file('/usr/local/bin/simplecudd_lfi', txt, exist )
301d 193 0 FAIL RETRY:  prolog:$check_file('/usr/local/bin/simplecudd_lfi', txt, exist )
302d 193 0 CALL:  prolog:$access_file('/usr/local/bin/simplecudd_lfi', exist )
303d 193 0 FAIL RETRY:  prolog:$check_file('/usr/local/bin/simplecudd_lfi', txt, exist )
304d 183 0 CALL:  prolog:$access_file('/usr/local/bin/simplecudd_lfi', exist )
305d 183 0 FAIL RETRY:  lists:member(_1048402, ['/usr/local/bin/simplecudd_lfi'] )
306d 150 0 CALL:  lists:member(_1048402, [] )
307d 200 0 CALL:  prolog:$absf_trace(' !------- failed.', [] )
308d 224 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
309d 224 0 FAIL RETRY:  prolog:$absf_trace(' !------- failed.', [] )
310d 200 0 CALL:  prolog:set_prolog_flag(fileerrors, true )
311d 200 0 CALL:  prolog:set_prolog_flag(verbose_file_search, false )
312d 200 0 CALL:  prolog:set_prolog_flag(file_name_variables, false )
313d 200 0 CALL:  prolog:arg(1, t(no), _131806 )
315d 150 0 FAIL RETRY:  prolog:$catch(os:file_exists('/usr/local/bin/simplecudd_lfi'), _131477, os:fail )
316d 140 0 CALL:  prolog:$get_exception(_131477 )
317d 140 0 FAIL RETRY:  os:problog_path(_1048444 )
318d 140 0 CALL:  os:concat_path_with_filename('/home/vsc/.local/bin', simplecudd_lfi, _1048452 )
319d 140 0 CALL:  os:path_separator(_1048427 )
320d 157 0 CALL:  prolog:current_prolog_flag(windows, true )
321d 157 0 FAIL RETRY:  os:path_separator(_1048427 )
322d 140 0 CALL:  prolog:atomic_list_concat(['/home/vsc/.local/bin',/,simplecudd_lfi], _1048452 )
323d 140 0 CALL:  prolog:atomic_concat(['/home/vsc/.local/bin',/,simplecudd_lfi], _1048452 )
324d 140 0 CALL:  prolog:catch(os:file_exists('/home/vsc/.local/bin/simplecudd_lfi'), _131477, os:fail )
325d 140 0 CALL:  prolog:$catch(os:file_exists('/home/vsc/.local/bin/simplecudd_lfi'), _131477, os:fail )
326d 150 0 CALL:  prolog:$execute(os:file_exists('/home/vsc/.local/bin/simplecudd_lfi') )
327d 150 0 CALL:  prolog:file_exists('/home/vsc/.local/bin/simplecudd_lfi' )
328d 150 0 CALL:  prolog:absolute_file_name('/home/vsc/.local/bin/simplecudd_lfi', _131481, [expand(true),solutions(first),access(exist)] )
329d 150 0 CALL:  prolog:absolute_file_name('/home/vsc/.local/bin/simplecudd_lfi', [expand(true),solutions(first),access(exist)], _131481 )
330d 176 0 FAIL RETRY:  prolog:absolute_file_name('/home/vsc/.local/bin/simplecudd_lfi', [expand(true),solutions(first),access(exist)], _131481 )
331d 150 0 CALL:  prolog:$absolute_file_name('/home/vsc/.local/bin/simplecudd_lfi', [expand(true),solutions(first),access(exist)], _131481 )
332d 150 0 CALL:  prolog:gated_call('$enter_absf'('/home/vsc/.local/bin/simplecudd_lfi',[expand(true),solutions(first),access(exist)],_131497,_131498,_131499,_131500,_131501,_131502,_131503,_131504,_131505), '$find_in_path'('/home/vsc/.local/bin/simplecudd_lfi',_131497,_131481,_131498,_131504), _131512, '$absf_port'(_131512,'/home/vsc/.local/bin/simplecudd_lfi',_131481,_131498,_131499,_131500,_131501,_131502,_131503,_131504,_131505) )
333d 150 0 CALL:  prolog:$setup_call_catcher_cleanup('$enter_absf'('/home/vsc/.local/bin/simplecudd_lfi',[expand(true),solutions(first),access(exist)],_131497,_131498,_131499,_131500,_131501,_131502,_131503,_131504,_131505) )
334d 186 0 CALL:  prolog:abs_file_parameters([expand(true),solutions(first),access(exist)], _131497 )
335d 186 0 CALL:  prolog:current_prolog_flag(open_expands_filename, _131499 )
336d 186 0 CALL:  prolog:current_prolog_flag(fileerrors, _131500 )
337d 186 0 CALL:  prolog:current_prolog_flag(verbose_file_search, _131501 )
338d 186 0 CALL:  prolog:get_abs_file_parameter(verbose_file_search, opt(exist,true,[],error,txt,'','',first,false), _131503 )
339d 186 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), _131502 )
340d 186 0 CALL:  prolog:set_prolog_flag(verbose_file_search, false )
341d 186 0 CALL:  prolog:get_abs_file_parameter(file_errors, opt(exist,true,[],error,txt,'','',first,false), _131535 )
342d 186 0 CALL:  prolog:get_abs_file_parameter(solutions, opt(exist,true,[],error,txt,'','',first,false), _131504 )
343d 186 0 TRY_OR 
344d 204 0 CALL:  prolog:==(error, fail )
346d 186 0 CALL:  prolog:set_prolog_flag(fileerrors, true )
347d 186 0 CALL:  prolog:set_prolog_flag(file_name_variables, true )
348d 186 0 CALL:  prolog:$absf_trace('/home/vsc/.local/bin/simplecudd_lfi' )
349d 201 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
350d 201 0 FAIL RETRY:  prolog:$absf_trace('/home/vsc/.local/bin/simplecudd_lfi' )
351d 186 0 CALL:  prolog:$absf_trace_options([expand(true),solutions(first),access(exist)] )
352d 200 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
353d 200 0 FAIL RETRY:  prolog:$absf_trace_options([expand(true),solutions(first),access(exist)] )
354d 150 0 CALL:  prolog:$gated_call(true, '$find_in_path'('/home/vsc/.local/bin/simplecudd_lfi',opt(exist,true,[],error,txt,'','',first,false),_131481,t(no),first), _131512, '$absf_port'(_131512,'/home/vsc/.local/bin/simplecudd_lfi',_131481,t(no),false,true,false,true,false,first,true) )
355d 150 0 CALL:  prolog:$tag_cleanup(_131544, cleanup(true,_131512,'$absf_port'(_131512,'/home/vsc/.local/bin/simplecudd_lfi',_131481,t(no),false,true,false,true,false,first,true),_131542,true,_131544) )
356d 150 0 CALL:  prolog:$execute('$find_in_path'('/home/vsc/.local/bin/simplecudd_lfi',opt(exist,true,[],error,txt,'','',first,false),_131481,t(no),first) )
357d 150 0 CALL:  prolog:$find_in_path('/home/vsc/.local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _131481, t(no), first )
358d 175 0 FAIL RETRY:  prolog:$find_in_path('/home/vsc/.local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _131481, t(no), first )
359d 150 0 CALL:  prolog:get_abs_file_parameter(file_type, opt(exist,true,[],error,txt,'','',first,false), _1048404 )
360d 150 0 CALL:  prolog:get_abs_file_parameter(access, opt(exist,true,[],error,txt,'','',first,false), _1048405 )
361d 150 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), _1048399 )
362d 150 0 CALL:  prolog:$absf_trace('start with ~w', ['/home/vsc/.local/bin/simplecudd_lfi'] )
363d 191 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
364d 191 0 FAIL RETRY:  prolog:$absf_trace('start with ~w', ['/home/vsc/.local/bin/simplecudd_lfi'] )
365d 150 0 CALL:  prolog:$core_file_name('/home/vsc/.local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _1048395, [] )
366d 150 0 CALL:  prolog:$file_name('/home/vsc/.local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _1048384, _1048395, _1048385 )
367d 203 0 CALL:  prolog:=..('/home/vsc/.local/bin/simplecudd_lfi', [_131562,_131564] )
368d 203 0 FAIL RETRY:  prolog:$file_name('/home/vsc/.local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _1048384, _1048395, _1048385 )
369d 150 0 CALL:  prolog:$cat_file_name('/home/vsc/.local/bin/simplecudd_lfi', _1048384, _1048395, _1048385 )
370d 202 0 FAIL RETRY:  prolog:$cat_file_name('/home/vsc/.local/bin/simplecudd_lfi', _1048384, _1048395, _1048385 )
371d 202 0 CALL:  prolog:atom_codes('/home/vsc/.local/bin/simplecudd_lfi', _1048384 )
372d 150 0 CALL:  prolog:phrase([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _1048395, _1048385 )
373d 150 0 CALL:  prolog:$phrase_list([104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131633, _1048385 )
374d 150 0 CALL:  prolog:$phrase_list([111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131635, _1048385 )
375d 150 0 CALL:  prolog:$phrase_list([109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131637, _1048385 )
376d 150 0 CALL:  prolog:$phrase_list([101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131639, _1048385 )
377d 150 0 CALL:  prolog:$phrase_list([47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131641, _1048385 )
378d 150 0 CALL:  prolog:$phrase_list([118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131643, _1048385 )
379d 150 0 CALL:  prolog:$phrase_list([115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131645, _1048385 )
380d 150 0 CALL:  prolog:$phrase_list([99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131647, _1048385 )
381d 150 0 CALL:  prolog:$phrase_list([47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131649, _1048385 )
382d 150 0 CALL:  prolog:$phrase_list([46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131651, _1048385 )
383d 150 0 CALL:  prolog:$phrase_list([108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131653, _1048385 )
384d 150 0 CALL:  prolog:$phrase_list([111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131655, _1048385 )
385d 150 0 CALL:  prolog:$phrase_list([99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131657, _1048385 )
386d 150 0 CALL:  prolog:$phrase_list([97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131659, _1048385 )
387d 150 0 CALL:  prolog:$phrase_list([108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131661, _1048385 )
388d 150 0 CALL:  prolog:$phrase_list([47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131663, _1048385 )
389d 150 0 CALL:  prolog:$phrase_list([98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131665, _1048385 )
390d 150 0 CALL:  prolog:$phrase_list([105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131667, _1048385 )
391d 150 0 CALL:  prolog:$phrase_list([110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131669, _1048385 )
392d 150 0 CALL:  prolog:$phrase_list([47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131671, _1048385 )
393d 150 0 CALL:  prolog:$phrase_list([115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131673, _1048385 )
394d 150 0 CALL:  prolog:$phrase_list([105,109,112,108,101,99,117,100,100,95,108,102,105], _131675, _1048385 )
395d 150 0 CALL:  prolog:$phrase_list([109,112,108,101,99,117,100,100,95,108,102,105], _131677, _1048385 )
396d 150 0 CALL:  prolog:$phrase_list([112,108,101,99,117,100,100,95,108,102,105], _131679, _1048385 )
397d 150 0 CALL:  prolog:$phrase_list([108,101,99,117,100,100,95,108,102,105], _131681, _1048385 )
398d 150 0 CALL:  prolog:$phrase_list([101,99,117,100,100,95,108,102,105], _131683, _1048385 )
399d 150 0 CALL:  prolog:$phrase_list([99,117,100,100,95,108,102,105], _131685, _1048385 )
400d 150 0 CALL:  prolog:$phrase_list([117,100,100,95,108,102,105], _131687, _1048385 )
401d 150 0 CALL:  prolog:$phrase_list([100,100,95,108,102,105], _131689, _1048385 )
402d 150 0 CALL:  prolog:$phrase_list([100,95,108,102,105], _131691, _1048385 )
403d 150 0 CALL:  prolog:$phrase_list([95,108,102,105], _131693, _1048385 )
404d 150 0 CALL:  prolog:$phrase_list([108,102,105], _131695, _1048385 )
405d 150 0 CALL:  prolog:$phrase_list([102,105], _131697, _1048385 )
406d 150 0 CALL:  prolog:$phrase_list([105], _131699, _1048385 )
407d 150 0 CALL:  prolog:$phrase_list([], _131701, _1048385 )
408d 150 0 CALL:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _131701, _1048387 )
409d 200 0 CALL:  lists:append(_1048365, [46|_131703], [47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
410d 220 0 FAIL RETRY:  lists:append(_1048365, [46|_131703], [47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
411d 200 0 CALL:  lists:append(_131705, [46|_131703], [104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
412d 220 0 FAIL RETRY:  lists:append(_131705, [46|_131703], [104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
413d 200 0 CALL:  lists:append(_131707, [46|_131703], [111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
414d 220 0 FAIL RETRY:  lists:append(_131707, [46|_131703], [111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
415d 200 0 CALL:  lists:append(_131709, [46|_131703], [109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
416d 220 0 FAIL RETRY:  lists:append(_131709, [46|_131703], [109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
417d 200 0 CALL:  lists:append(_131711, [46|_131703], [101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
418d 220 0 FAIL RETRY:  lists:append(_131711, [46|_131703], [101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
419d 200 0 CALL:  lists:append(_131713, [46|_131703], [47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
420d 220 0 FAIL RETRY:  lists:append(_131713, [46|_131703], [47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
421d 200 0 CALL:  lists:append(_131715, [46|_131703], [118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
422d 220 0 FAIL RETRY:  lists:append(_131715, [46|_131703], [118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
423d 200 0 CALL:  lists:append(_131717, [46|_131703], [115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
424d 220 0 FAIL RETRY:  lists:append(_131717, [46|_131703], [115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
425d 200 0 CALL:  lists:append(_131719, [46|_131703], [99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
426d 220 0 FAIL RETRY:  lists:append(_131719, [46|_131703], [99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
427d 200 0 CALL:  lists:append(_131721, [46|_131703], [47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
428d 220 0 FAIL RETRY:  lists:append(_131721, [46|_131703], [47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
429d 200 0 CALL:  lists:append(_131723, [46|_131703], [46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
430d 220 0 CALL:  prolog:$id([108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _1048366, [] )
431d 220 0 CALL:  prolog:C(_1048366, 108, _1048348 )
432d 220 0 TRY_OR 
433d 237 0 CALL:  prolog:>=(108, 97 )
434d 237 0 CALL:  prolog:=<(108, 122 )
435d 220 0 CALL:  prolog:$id([111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131725, [] )
436d 220 0 CALL:  prolog:C(_131725, 111, _1048348 )
437d 220 0 TRY_OR 
438d 237 0 CALL:  prolog:>=(111, 97 )
439d 237 0 CALL:  prolog:=<(111, 122 )
440d 220 0 CALL:  prolog:$id([99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131727, [] )
441d 220 0 CALL:  prolog:C(_131727, 99, _1048348 )
442d 220 0 TRY_OR 
443d 237 0 CALL:  prolog:>=(99, 97 )
444d 237 0 CALL:  prolog:=<(99, 122 )
445d 220 0 CALL:  prolog:$id([97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131729, [] )
446d 220 0 CALL:  prolog:C(_131729, 97, _1048348 )
447d 220 0 TRY_OR 
448d 237 0 CALL:  prolog:>=(97, 97 )
449d 237 0 CALL:  prolog:=<(97, 122 )
450d 220 0 CALL:  prolog:$id([108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131731, [] )
451d 220 0 CALL:  prolog:C(_131731, 108, _1048348 )
452d 220 0 TRY_OR 
453d 237 0 CALL:  prolog:>=(108, 97 )
454d 237 0 CALL:  prolog:=<(108, 122 )
455d 220 0 CALL:  prolog:$id([47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131733, [] )
456d 220 0 CALL:  prolog:C(_131733, 47, _1048348 )
457d 220 0 TRY_OR 
458d 237 0 CALL:  prolog:>=(47, 97 )
460d 237 0 CALL:  prolog:>=(47, 65 )
462d 237 0 CALL:  prolog:>=(47, 48 )
464d 220 0 CALL:  prolog:=:=(47, 95 )
465d 220 0 FAIL RETRY:  lists:append(_131723, [46|_131703], [46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
466d 200 0 CALL:  lists:append(_131725, [46|_131703], [108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
467d 220 0 FAIL RETRY:  lists:append(_131725, [46|_131703], [108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
468d 200 0 CALL:  lists:append(_131727, [46|_131703], [111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
469d 220 0 FAIL RETRY:  lists:append(_131727, [46|_131703], [111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
470d 200 0 CALL:  lists:append(_131729, [46|_131703], [99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
471d 220 0 FAIL RETRY:  lists:append(_131729, [46|_131703], [99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
472d 200 0 CALL:  lists:append(_131731, [46|_131703], [97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
473d 220 0 FAIL RETRY:  lists:append(_131731, [46|_131703], [97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
474d 200 0 CALL:  lists:append(_131733, [46|_131703], [108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
475d 220 0 FAIL RETRY:  lists:append(_131733, [46|_131703], [108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
476d 200 0 CALL:  lists:append(_131735, [46|_131703], [47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
477d 220 0 FAIL RETRY:  lists:append(_131735, [46|_131703], [47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
478d 200 0 CALL:  lists:append(_131737, [46|_131703], [98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
479d 220 0 FAIL RETRY:  lists:append(_131737, [46|_131703], [98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
480d 200 0 CALL:  lists:append(_131739, [46|_131703], [105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
481d 220 0 FAIL RETRY:  lists:append(_131739, [46|_131703], [105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
482d 200 0 CALL:  lists:append(_131741, [46|_131703], [110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
483d 220 0 FAIL RETRY:  lists:append(_131741, [46|_131703], [110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
484d 200 0 CALL:  lists:append(_131743, [46|_131703], [47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
485d 220 0 FAIL RETRY:  lists:append(_131743, [46|_131703], [47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
486d 200 0 CALL:  lists:append(_131745, [46|_131703], [115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
487d 220 0 FAIL RETRY:  lists:append(_131745, [46|_131703], [115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
488d 200 0 CALL:  lists:append(_131747, [46|_131703], [105,109,112,108,101,99,117,100,100,95,108,102,105] )
489d 220 0 FAIL RETRY:  lists:append(_131747, [46|_131703], [105,109,112,108,101,99,117,100,100,95,108,102,105] )
490d 200 0 CALL:  lists:append(_131749, [46|_131703], [109,112,108,101,99,117,100,100,95,108,102,105] )
491d 220 0 FAIL RETRY:  lists:append(_131749, [46|_131703], [109,112,108,101,99,117,100,100,95,108,102,105] )
492d 200 0 CALL:  lists:append(_131751, [46|_131703], [112,108,101,99,117,100,100,95,108,102,105] )
493d 220 0 FAIL RETRY:  lists:append(_131751, [46|_131703], [112,108,101,99,117,100,100,95,108,102,105] )
494d 200 0 CALL:  lists:append(_131753, [46|_131703], [108,101,99,117,100,100,95,108,102,105] )
495d 220 0 FAIL RETRY:  lists:append(_131753, [46|_131703], [108,101,99,117,100,100,95,108,102,105] )
496d 200 0 CALL:  lists:append(_131755, [46|_131703], [101,99,117,100,100,95,108,102,105] )
497d 220 0 FAIL RETRY:  lists:append(_131755, [46|_131703], [101,99,117,100,100,95,108,102,105] )
498d 200 0 CALL:  lists:append(_131757, [46|_131703], [99,117,100,100,95,108,102,105] )
499d 220 0 FAIL RETRY:  lists:append(_131757, [46|_131703], [99,117,100,100,95,108,102,105] )
500d 200 0 CALL:  lists:append(_131759, [46|_131703], [117,100,100,95,108,102,105] )
501d 220 0 FAIL RETRY:  lists:append(_131759, [46|_131703], [117,100,100,95,108,102,105] )
502d 200 0 CALL:  lists:append(_131761, [46|_131703], [100,100,95,108,102,105] )
503d 220 0 FAIL RETRY:  lists:append(_131761, [46|_131703], [100,100,95,108,102,105] )
504d 200 0 CALL:  lists:append(_131763, [46|_131703], [100,95,108,102,105] )
505d 220 0 FAIL RETRY:  lists:append(_131763, [46|_131703], [100,95,108,102,105] )
506d 200 0 CALL:  lists:append(_131765, [46|_131703], [95,108,102,105] )
507d 220 0 FAIL RETRY:  lists:append(_131765, [46|_131703], [95,108,102,105] )
508d 200 0 CALL:  lists:append(_131767, [46|_131703], [108,102,105] )
509d 220 0 FAIL RETRY:  lists:append(_131767, [46|_131703], [108,102,105] )
510d 200 0 CALL:  lists:append(_131769, [46|_131703], [102,105] )
511d 220 0 FAIL RETRY:  lists:append(_131769, [46|_131703], [102,105] )
512d 200 0 CALL:  lists:append(_131771, [46|_131703], [105] )
513d 220 0 FAIL RETRY:  lists:append(_131771, [46|_131703], [105] )
514d 200 0 CALL:  lists:append(_131773, [46|_131703], [] )
515d 220 0 FAIL RETRY:  lists:append(_131773, [46|_131703], [] )
516d 200 0 FAIL RETRY:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _131701, _1048387 )
517d 200 0 TRY_OR 
518d 222 0 CALL:  prolog:get_abs_file_parameter(extensions, opt(exist,true,[],error,txt,'','',first,false), _1048361 )
519d 222 0 CALL:  prolog:\=([], [] )
521d 200 0 CALL:  prolog:get_abs_file_parameter(file_type, opt(exist,true,[],error,txt,'','',first,false), _131702 )
522d 200 0 TRY_OR 
523d 220 0 CALL:  prolog:==(txt, source )
525d 200 0 CALL:  user:prolog_file_type(_1048366, txt )
526d 200 0 FAIL RETRY:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _131701, _1048387 )
527d 150 0 CALL:  prolog:$absf_trace(' try no suffix', [], _131701, _1048387 )
528d 200 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
529d 200 0 FAIL RETRY:  prolog:$absf_trace(' try no suffix', [], _131701, _1048387 )
530d 150 0 CALL:  prolog:$glob(opt(exist,true,[],error,txt,'','',first,false), _131701, [] )
531d 191 0 CALL:  prolog:get_abs_file_parameter(glob, opt(exist,true,[],error,txt,'','',first,false), _131702 )
532d 191 0 CALL:  prolog:\=('', '' )
533d 191 0 FAIL RETRY:  prolog:$glob(opt(exist,true,[],error,txt,'','',first,false), _131701, [] )
534d 150 0 CALL:  prolog:$absf_trace('  after name/library unfolding: ~w', ['/home/vsc/.local/bin/simplecudd_lfi'] )
535d 189 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
536d 189 0 FAIL RETRY:  prolog:$absf_trace('  after name/library unfolding: ~w', ['/home/vsc/.local/bin/simplecudd_lfi'] )
537d 150 0 CALL:  prolog:$variable_expansion([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _1048396 )
538d 189 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), true )
539d 150 0 CALL:  prolog:$expand_file_name([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _1048396 )
540d 150 0 CALL:  prolog:$absf_trace('   after environment variable expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105]] )
541d 188 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
542d 188 0 FAIL RETRY:  prolog:$absf_trace('   after environment variable expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105]] )
543d 150 0 CALL:  prolog:$prefix([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _1048398, [] )
544d 188 0 CALL:  prolog:is_absolute_file_name([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
545d 150 0 CALL:  prolog:phrase([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _1048398, [] )
546d 150 0 CALL:  prolog:$phrase_list([104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131777, [] )
547d 150 0 CALL:  prolog:$phrase_list([111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131779, [] )
548d 150 0 CALL:  prolog:$phrase_list([109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131781, [] )
549d 150 0 CALL:  prolog:$phrase_list([101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131783, [] )
550d 150 0 CALL:  prolog:$phrase_list([47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131785, [] )
551d 150 0 CALL:  prolog:$phrase_list([118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131787, [] )
552d 150 0 CALL:  prolog:$phrase_list([115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131789, [] )
553d 150 0 CALL:  prolog:$phrase_list([99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131791, [] )
554d 150 0 CALL:  prolog:$phrase_list([47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131793, [] )
555d 150 0 CALL:  prolog:$phrase_list([46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131795, [] )
556d 150 0 CALL:  prolog:$phrase_list([108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131797, [] )
557d 150 0 CALL:  prolog:$phrase_list([111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131799, [] )
558d 150 0 CALL:  prolog:$phrase_list([99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131801, [] )
559d 150 0 CALL:  prolog:$phrase_list([97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131803, [] )
560d 150 0 CALL:  prolog:$phrase_list([108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131805, [] )
561d 150 0 CALL:  prolog:$phrase_list([47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131807, [] )
562d 150 0 CALL:  prolog:$phrase_list([98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131809, [] )
563d 150 0 CALL:  prolog:$phrase_list([105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131811, [] )
564d 150 0 CALL:  prolog:$phrase_list([110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131813, [] )
565d 150 0 CALL:  prolog:$phrase_list([47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131815, [] )
566d 150 0 CALL:  prolog:$phrase_list([115,105,109,112,108,101,99,117,100,100,95,108,102,105], _131817, [] )
567d 150 0 CALL:  prolog:$phrase_list([105,109,112,108,101,99,117,100,100,95,108,102,105], _131819, [] )
568d 150 0 CALL:  prolog:$phrase_list([109,112,108,101,99,117,100,100,95,108,102,105], _131821, [] )
569d 150 0 CALL:  prolog:$phrase_list([112,108,101,99,117,100,100,95,108,102,105], _131823, [] )
570d 150 0 CALL:  prolog:$phrase_list([108,101,99,117,100,100,95,108,102,105], _131825, [] )
571d 150 0 CALL:  prolog:$phrase_list([101,99,117,100,100,95,108,102,105], _131827, [] )
572d 150 0 CALL:  prolog:$phrase_list([99,117,100,100,95,108,102,105], _131829, [] )
573d 150 0 CALL:  prolog:$phrase_list([117,100,100,95,108,102,105], _131831, [] )
574d 150 0 CALL:  prolog:$phrase_list([100,100,95,108,102,105], _131833, [] )
575d 150 0 CALL:  prolog:$phrase_list([100,95,108,102,105], _131835, [] )
576d 150 0 CALL:  prolog:$phrase_list([95,108,102,105], _131837, [] )
577d 150 0 CALL:  prolog:$phrase_list([108,102,105], _131839, [] )
578d 150 0 CALL:  prolog:$phrase_list([102,105], _131841, [] )
579d 150 0 CALL:  prolog:$phrase_list([105], _131843, [] )
580d 150 0 CALL:  prolog:$phrase_list([], _131845, [] )
581d 150 0 CALL:  prolog:$absf_trace('    after prefix expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105]] )
582d 186 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
583d 186 0 FAIL RETRY:  prolog:$absf_trace('    after prefix expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105]] )
584d 150 0 CALL:  prolog:atom_codes(_1048401, [47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
585d 150 0 TRY_OR 
586d 150 0 CALL:  prolog:expand_file_name('/home/vsc/.local/bin/simplecudd_lfi', _1048400 )
587d 150 0 CALL:  prolog:$absf_trace('     after shell globbing: ~w', [['/home/vsc/.local/bin/simplecudd_lfi']] )
588d 184 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
589d 184 0 FAIL RETRY:  prolog:$absf_trace('     after shell globbing: ~w', [['/home/vsc/.local/bin/simplecudd_lfi']] )
590d 150 0 CALL:  lists:member(_1048402, ['/home/vsc/.local/bin/simplecudd_lfi'] )
591d 183 0 CALL:  prolog:real_path('/home/vsc/.local/bin/simplecudd_lfi', _131481 )
592d 183 0 CALL:  prolog:$absf_trace('      after canonical path name: ~a', ['/home/vsc/.local/bin/simplecudd_lfi'] )
593d 192 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
594d 192 0 FAIL RETRY:  prolog:$absf_trace('      after canonical path name: ~a', ['/home/vsc/.local/bin/simplecudd_lfi'] )
595d 183 0 CALL:  prolog:$check_file('/home/vsc/.local/bin/simplecudd_lfi', txt, exist )
596d 193 0 FAIL RETRY:  prolog:$check_file('/home/vsc/.local/bin/simplecudd_lfi', txt, exist )
597d 193 0 FAIL RETRY:  prolog:$check_file('/home/vsc/.local/bin/simplecudd_lfi', txt, exist )
598d 193 0 CALL:  prolog:$access_file('/home/vsc/.local/bin/simplecudd_lfi', exist )
599d 193 0 CALL:  prolog:$absf_trace('       after testing ~a for ~a and ~a', ['/home/vsc/.local/bin/simplecudd_lfi',txt,exist] )
600d 202 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
601d 202 0 FAIL RETRY:  prolog:$absf_trace('       after testing ~a for ~a and ~a', ['/home/vsc/.local/bin/simplecudd_lfi',txt,exist] )
602d 193 0 TRY_OR 
603d 201 0 CALL:  prolog:==(first, first )
604d 150 0 CALL:  prolog:$cleanup_on_exit(150, cleanup(true,_131512,'$absf_port'(_131512,'/home/vsc/.local/bin/simplecudd_lfi','/home/vsc/.local/bin/simplecudd_lfi',t(no),false,true,false,true,false,first,true),_131542,false,150) )
605d 171 0 TRY_OR 
606d 189 0 CALL:  prolog:==(first, first )
607d 171 0 CALL:  prolog:set_prolog_flag(fileerrors, true )
608d 171 0 CALL:  prolog:set_prolog_flag(open_expands_filename, false )
609d 171 0 CALL:  prolog:set_prolog_flag(verbose_file_search, false )
610d 171 0 CALL:  prolog:$absf_trace(' |------- found  ~a', ['/home/vsc/.local/bin/simplecudd_lfi'] )
611d 180 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
612d 180 0 FAIL RETRY:  prolog:$absf_trace(' |------- found  ~a', ['/home/vsc/.local/bin/simplecudd_lfi'] )
613d 150 0 TRY_OR 
614d 164 0 CALL:  prolog:==(150, 150 )
615d 140 0 TRY_OR 
616d 148 0 CALL:  prolog:file_exists('/home/vsc/.local/bin/simplecudd_lfi' )
617d 148 0 CALL:  prolog:absolute_file_name('/home/vsc/.local/bin/simplecudd_lfi', _131862, [expand(true),solutions(first),access(exist)] )
618d 148 0 CALL:  prolog:absolute_file_name('/home/vsc/.local/bin/simplecudd_lfi', [expand(true),solutions(first),access(exist)], _131862 )
619d 168 0 FAIL RETRY:  prolog:absolute_file_name('/home/vsc/.local/bin/simplecudd_lfi', [expand(true),solutions(first),access(exist)], _131862 )
620d 148 0 CALL:  prolog:$absolute_file_name('/home/vsc/.local/bin/simplecudd_lfi', [expand(true),solutions(first),access(exist)], _131862 )
621d 148 0 CALL:  prolog:gated_call('$enter_absf'('/home/vsc/.local/bin/simplecudd_lfi',[expand(true),solutions(first),access(exist)],_131878,_131879,_131880,_131881,_131882,_131883,_131884,_131885,_131886), '$find_in_path'('/home/vsc/.local/bin/simplecudd_lfi',_131878,_131862,_131879,_131885), _131893, '$absf_port'(_131893,'/home/vsc/.local/bin/simplecudd_lfi',_131862,_131879,_131880,_131881,_131882,_131883,_131884,_131885,_131886) )
622d 148 0 CALL:  prolog:$setup_call_catcher_cleanup('$enter_absf'('/home/vsc/.local/bin/simplecudd_lfi',[expand(true),solutions(first),access(exist)],_131878,_131879,_131880,_131881,_131882,_131883,_131884,_131885,_131886) )
623d 178 0 CALL:  prolog:abs_file_parameters([expand(true),solutions(first),access(exist)], _131878 )
624d 178 0 CALL:  prolog:current_prolog_flag(open_expands_filename, _131880 )
625d 178 0 CALL:  prolog:current_prolog_flag(fileerrors, _131881 )
626d 178 0 CALL:  prolog:current_prolog_flag(verbose_file_search, _131882 )
627d 178 0 CALL:  prolog:get_abs_file_parameter(verbose_file_search, opt(exist,true,[],error,txt,'','',first,false), _131884 )
628d 178 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), _131883 )
629d 178 0 CALL:  prolog:set_prolog_flag(verbose_file_search, false )
630d 178 0 CALL:  prolog:get_abs_file_parameter(file_errors, opt(exist,true,[],error,txt,'','',first,false), _131916 )
631d 178 0 CALL:  prolog:get_abs_file_parameter(solutions, opt(exist,true,[],error,txt,'','',first,false), _131885 )
632d 178 0 TRY_OR 
633d 196 0 CALL:  prolog:==(error, fail )
635d 178 0 CALL:  prolog:set_prolog_flag(fileerrors, true )
636d 178 0 CALL:  prolog:set_prolog_flag(file_name_variables, true )
637d 178 0 CALL:  prolog:$absf_trace('/home/vsc/.local/bin/simplecudd_lfi' )
638d 193 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
639d 193 0 FAIL RETRY:  prolog:$absf_trace('/home/vsc/.local/bin/simplecudd_lfi' )
640d 178 0 CALL:  prolog:$absf_trace_options([expand(true),solutions(first),access(exist)] )
641d 192 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
642d 192 0 FAIL RETRY:  prolog:$absf_trace_options([expand(true),solutions(first),access(exist)] )
643d 148 0 CALL:  prolog:$gated_call(true, '$find_in_path'('/home/vsc/.local/bin/simplecudd_lfi',opt(exist,true,[],error,txt,'','',first,false),_131862,t(no),first), _131893, '$absf_port'(_131893,'/home/vsc/.local/bin/simplecudd_lfi',_131862,t(no),false,true,false,true,false,first,true) )
644d 148 0 CALL:  prolog:$tag_cleanup(_131925, cleanup(true,_131893,'$absf_port'(_131893,'/home/vsc/.local/bin/simplecudd_lfi',_131862,t(no),false,true,false,true,false,first,true),_131923,true,_131925) )
645d 148 0 CALL:  prolog:$execute('$find_in_path'('/home/vsc/.local/bin/simplecudd_lfi',opt(exist,true,[],error,txt,'','',first,false),_131862,t(no),first) )
646d 148 0 CALL:  prolog:$find_in_path('/home/vsc/.local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _131862, t(no), first )
647d 167 0 FAIL RETRY:  prolog:$find_in_path('/home/vsc/.local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _131862, t(no), first )
648d 148 0 CALL:  prolog:get_abs_file_parameter(file_type, opt(exist,true,[],error,txt,'','',first,false), _1048412 )
649d 148 0 CALL:  prolog:get_abs_file_parameter(access, opt(exist,true,[],error,txt,'','',first,false), _1048413 )
650d 148 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), _1048407 )
651d 148 0 CALL:  prolog:$absf_trace('start with ~w', ['/home/vsc/.local/bin/simplecudd_lfi'] )
652d 183 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
653d 183 0 FAIL RETRY:  prolog:$absf_trace('start with ~w', ['/home/vsc/.local/bin/simplecudd_lfi'] )
654d 148 0 CALL:  prolog:$core_file_name('/home/vsc/.local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _1048403, [] )
655d 148 0 CALL:  prolog:$file_name('/home/vsc/.local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _1048392, _1048403, _1048393 )
656d 195 0 CALL:  prolog:=..('/home/vsc/.local/bin/simplecudd_lfi', [_131943,_131945] )
657d 195 0 FAIL RETRY:  prolog:$file_name('/home/vsc/.local/bin/simplecudd_lfi', opt(exist,true,[],error,txt,'','',first,false), _1048392, _1048403, _1048393 )
658d 148 0 CALL:  prolog:$cat_file_name('/home/vsc/.local/bin/simplecudd_lfi', _1048392, _1048403, _1048393 )
659d 194 0 FAIL RETRY:  prolog:$cat_file_name('/home/vsc/.local/bin/simplecudd_lfi', _1048392, _1048403, _1048393 )
660d 194 0 CALL:  prolog:atom_codes('/home/vsc/.local/bin/simplecudd_lfi', _1048392 )
661d 148 0 CALL:  prolog:phrase([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _1048403, _1048393 )
662d 148 0 CALL:  prolog:$phrase_list([104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132014, _1048393 )
663d 148 0 CALL:  prolog:$phrase_list([111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132016, _1048393 )
664d 148 0 CALL:  prolog:$phrase_list([109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132018, _1048393 )
665d 148 0 CALL:  prolog:$phrase_list([101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132020, _1048393 )
666d 148 0 CALL:  prolog:$phrase_list([47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132022, _1048393 )
667d 148 0 CALL:  prolog:$phrase_list([118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132024, _1048393 )
668d 148 0 CALL:  prolog:$phrase_list([115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132026, _1048393 )
669d 148 0 CALL:  prolog:$phrase_list([99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132028, _1048393 )
670d 148 0 CALL:  prolog:$phrase_list([47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132030, _1048393 )
671d 148 0 CALL:  prolog:$phrase_list([46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132032, _1048393 )
672d 148 0 CALL:  prolog:$phrase_list([108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132034, _1048393 )
673d 148 0 CALL:  prolog:$phrase_list([111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132036, _1048393 )
674d 148 0 CALL:  prolog:$phrase_list([99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132038, _1048393 )
675d 148 0 CALL:  prolog:$phrase_list([97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132040, _1048393 )
676d 148 0 CALL:  prolog:$phrase_list([108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132042, _1048393 )
677d 148 0 CALL:  prolog:$phrase_list([47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132044, _1048393 )
678d 148 0 CALL:  prolog:$phrase_list([98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132046, _1048393 )
679d 148 0 CALL:  prolog:$phrase_list([105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132048, _1048393 )
680d 148 0 CALL:  prolog:$phrase_list([110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132050, _1048393 )
681d 148 0 CALL:  prolog:$phrase_list([47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132052, _1048393 )
682d 148 0 CALL:  prolog:$phrase_list([115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132054, _1048393 )
683d 148 0 CALL:  prolog:$phrase_list([105,109,112,108,101,99,117,100,100,95,108,102,105], _132056, _1048393 )
684d 148 0 CALL:  prolog:$phrase_list([109,112,108,101,99,117,100,100,95,108,102,105], _132058, _1048393 )
685d 148 0 CALL:  prolog:$phrase_list([112,108,101,99,117,100,100,95,108,102,105], _132060, _1048393 )
686d 148 0 CALL:  prolog:$phrase_list([108,101,99,117,100,100,95,108,102,105], _132062, _1048393 )
687d 148 0 CALL:  prolog:$phrase_list([101,99,117,100,100,95,108,102,105], _132064, _1048393 )
688d 148 0 CALL:  prolog:$phrase_list([99,117,100,100,95,108,102,105], _132066, _1048393 )
689d 148 0 CALL:  prolog:$phrase_list([117,100,100,95,108,102,105], _132068, _1048393 )
690d 148 0 CALL:  prolog:$phrase_list([100,100,95,108,102,105], _132070, _1048393 )
691d 148 0 CALL:  prolog:$phrase_list([100,95,108,102,105], _132072, _1048393 )
692d 148 0 CALL:  prolog:$phrase_list([95,108,102,105], _132074, _1048393 )
693d 148 0 CALL:  prolog:$phrase_list([108,102,105], _132076, _1048393 )
694d 148 0 CALL:  prolog:$phrase_list([102,105], _132078, _1048393 )
695d 148 0 CALL:  prolog:$phrase_list([105], _132080, _1048393 )
696d 148 0 CALL:  prolog:$phrase_list([], _132082, _1048393 )
697d 148 0 CALL:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _132082, _1048395 )
698d 192 0 CALL:  lists:append(_1048373, [46|_132084], [47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
699d 212 0 FAIL RETRY:  lists:append(_1048373, [46|_132084], [47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
700d 192 0 CALL:  lists:append(_132086, [46|_132084], [104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
701d 212 0 FAIL RETRY:  lists:append(_132086, [46|_132084], [104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
702d 192 0 CALL:  lists:append(_132088, [46|_132084], [111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
703d 212 0 FAIL RETRY:  lists:append(_132088, [46|_132084], [111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
704d 192 0 CALL:  lists:append(_132090, [46|_132084], [109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
705d 212 0 FAIL RETRY:  lists:append(_132090, [46|_132084], [109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
706d 192 0 CALL:  lists:append(_132092, [46|_132084], [101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
707d 212 0 FAIL RETRY:  lists:append(_132092, [46|_132084], [101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
708d 192 0 CALL:  lists:append(_132094, [46|_132084], [47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
709d 212 0 FAIL RETRY:  lists:append(_132094, [46|_132084], [47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
710d 192 0 CALL:  lists:append(_132096, [46|_132084], [118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
711d 212 0 FAIL RETRY:  lists:append(_132096, [46|_132084], [118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
712d 192 0 CALL:  lists:append(_132098, [46|_132084], [115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
713d 212 0 FAIL RETRY:  lists:append(_132098, [46|_132084], [115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
714d 192 0 CALL:  lists:append(_132100, [46|_132084], [99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
715d 212 0 FAIL RETRY:  lists:append(_132100, [46|_132084], [99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
716d 192 0 CALL:  lists:append(_132102, [46|_132084], [47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
717d 212 0 FAIL RETRY:  lists:append(_132102, [46|_132084], [47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
718d 192 0 CALL:  lists:append(_132104, [46|_132084], [46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
719d 212 0 CALL:  prolog:$id([108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _1048374, [] )
720d 212 0 CALL:  prolog:C(_1048374, 108, _1048356 )
721d 212 0 TRY_OR 
722d 229 0 CALL:  prolog:>=(108, 97 )
723d 229 0 CALL:  prolog:=<(108, 122 )
724d 212 0 CALL:  prolog:$id([111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132106, [] )
725d 212 0 CALL:  prolog:C(_132106, 111, _1048356 )
726d 212 0 TRY_OR 
727d 229 0 CALL:  prolog:>=(111, 97 )
728d 229 0 CALL:  prolog:=<(111, 122 )
729d 212 0 CALL:  prolog:$id([99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132108, [] )
730d 212 0 CALL:  prolog:C(_132108, 99, _1048356 )
731d 212 0 TRY_OR 
732d 229 0 CALL:  prolog:>=(99, 97 )
733d 229 0 CALL:  prolog:=<(99, 122 )
734d 212 0 CALL:  prolog:$id([97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132110, [] )
735d 212 0 CALL:  prolog:C(_132110, 97, _1048356 )
736d 212 0 TRY_OR 
737d 229 0 CALL:  prolog:>=(97, 97 )
738d 229 0 CALL:  prolog:=<(97, 122 )
739d 212 0 CALL:  prolog:$id([108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132112, [] )
740d 212 0 CALL:  prolog:C(_132112, 108, _1048356 )
741d 212 0 TRY_OR 
742d 229 0 CALL:  prolog:>=(108, 97 )
743d 229 0 CALL:  prolog:=<(108, 122 )
744d 212 0 CALL:  prolog:$id([47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132114, [] )
745d 212 0 CALL:  prolog:C(_132114, 47, _1048356 )
746d 212 0 TRY_OR 
747d 229 0 CALL:  prolog:>=(47, 97 )
749d 229 0 CALL:  prolog:>=(47, 65 )
751d 229 0 CALL:  prolog:>=(47, 48 )
753d 212 0 CALL:  prolog:=:=(47, 95 )
754d 212 0 FAIL RETRY:  lists:append(_132104, [46|_132084], [46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
755d 192 0 CALL:  lists:append(_132106, [46|_132084], [108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
756d 212 0 FAIL RETRY:  lists:append(_132106, [46|_132084], [108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
757d 192 0 CALL:  lists:append(_132108, [46|_132084], [111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
758d 212 0 FAIL RETRY:  lists:append(_132108, [46|_132084], [111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
759d 192 0 CALL:  lists:append(_132110, [46|_132084], [99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
760d 212 0 FAIL RETRY:  lists:append(_132110, [46|_132084], [99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
761d 192 0 CALL:  lists:append(_132112, [46|_132084], [97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
762d 212 0 FAIL RETRY:  lists:append(_132112, [46|_132084], [97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
763d 192 0 CALL:  lists:append(_132114, [46|_132084], [108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
764d 212 0 FAIL RETRY:  lists:append(_132114, [46|_132084], [108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
765d 192 0 CALL:  lists:append(_132116, [46|_132084], [47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
766d 212 0 FAIL RETRY:  lists:append(_132116, [46|_132084], [47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
767d 192 0 CALL:  lists:append(_132118, [46|_132084], [98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
768d 212 0 FAIL RETRY:  lists:append(_132118, [46|_132084], [98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
769d 192 0 CALL:  lists:append(_132120, [46|_132084], [105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
770d 212 0 FAIL RETRY:  lists:append(_132120, [46|_132084], [105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
771d 192 0 CALL:  lists:append(_132122, [46|_132084], [110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
772d 212 0 FAIL RETRY:  lists:append(_132122, [46|_132084], [110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
773d 192 0 CALL:  lists:append(_132124, [46|_132084], [47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
774d 212 0 FAIL RETRY:  lists:append(_132124, [46|_132084], [47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
775d 192 0 CALL:  lists:append(_132126, [46|_132084], [115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
776d 212 0 FAIL RETRY:  lists:append(_132126, [46|_132084], [115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
777d 192 0 CALL:  lists:append(_132128, [46|_132084], [105,109,112,108,101,99,117,100,100,95,108,102,105] )
778d 212 0 FAIL RETRY:  lists:append(_132128, [46|_132084], [105,109,112,108,101,99,117,100,100,95,108,102,105] )
779d 192 0 CALL:  lists:append(_132130, [46|_132084], [109,112,108,101,99,117,100,100,95,108,102,105] )
780d 212 0 FAIL RETRY:  lists:append(_132130, [46|_132084], [109,112,108,101,99,117,100,100,95,108,102,105] )
781d 192 0 CALL:  lists:append(_132132, [46|_132084], [112,108,101,99,117,100,100,95,108,102,105] )
782d 212 0 FAIL RETRY:  lists:append(_132132, [46|_132084], [112,108,101,99,117,100,100,95,108,102,105] )
783d 192 0 CALL:  lists:append(_132134, [46|_132084], [108,101,99,117,100,100,95,108,102,105] )
784d 212 0 FAIL RETRY:  lists:append(_132134, [46|_132084], [108,101,99,117,100,100,95,108,102,105] )
785d 192 0 CALL:  lists:append(_132136, [46|_132084], [101,99,117,100,100,95,108,102,105] )
786d 212 0 FAIL RETRY:  lists:append(_132136, [46|_132084], [101,99,117,100,100,95,108,102,105] )
787d 192 0 CALL:  lists:append(_132138, [46|_132084], [99,117,100,100,95,108,102,105] )
788d 212 0 FAIL RETRY:  lists:append(_132138, [46|_132084], [99,117,100,100,95,108,102,105] )
789d 192 0 CALL:  lists:append(_132140, [46|_132084], [117,100,100,95,108,102,105] )
790d 212 0 FAIL RETRY:  lists:append(_132140, [46|_132084], [117,100,100,95,108,102,105] )
791d 192 0 CALL:  lists:append(_132142, [46|_132084], [100,100,95,108,102,105] )
792d 212 0 FAIL RETRY:  lists:append(_132142, [46|_132084], [100,100,95,108,102,105] )
793d 192 0 CALL:  lists:append(_132144, [46|_132084], [100,95,108,102,105] )
794d 212 0 FAIL RETRY:  lists:append(_132144, [46|_132084], [100,95,108,102,105] )
795d 192 0 CALL:  lists:append(_132146, [46|_132084], [95,108,102,105] )
796d 212 0 FAIL RETRY:  lists:append(_132146, [46|_132084], [95,108,102,105] )
797d 192 0 CALL:  lists:append(_132148, [46|_132084], [108,102,105] )
798d 212 0 FAIL RETRY:  lists:append(_132148, [46|_132084], [108,102,105] )
799d 192 0 CALL:  lists:append(_132150, [46|_132084], [102,105] )
800d 212 0 FAIL RETRY:  lists:append(_132150, [46|_132084], [102,105] )
801d 192 0 CALL:  lists:append(_132152, [46|_132084], [105] )
802d 212 0 FAIL RETRY:  lists:append(_132152, [46|_132084], [105] )
803d 192 0 CALL:  lists:append(_132154, [46|_132084], [] )
804d 212 0 FAIL RETRY:  lists:append(_132154, [46|_132084], [] )
805d 192 0 FAIL RETRY:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _132082, _1048395 )
806d 192 0 TRY_OR 
807d 214 0 CALL:  prolog:get_abs_file_parameter(extensions, opt(exist,true,[],error,txt,'','',first,false), _1048369 )
808d 214 0 CALL:  prolog:\=([], [] )
810d 192 0 CALL:  prolog:get_abs_file_parameter(file_type, opt(exist,true,[],error,txt,'','',first,false), _132083 )
811d 192 0 TRY_OR 
812d 212 0 CALL:  prolog:==(txt, source )
814d 192 0 CALL:  user:prolog_file_type(_1048374, txt )
815d 192 0 FAIL RETRY:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _132082, _1048395 )
816d 148 0 CALL:  prolog:$absf_trace(' try no suffix', [], _132082, _1048395 )
817d 192 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
818d 192 0 FAIL RETRY:  prolog:$absf_trace(' try no suffix', [], _132082, _1048395 )
819d 148 0 CALL:  prolog:$glob(opt(exist,true,[],error,txt,'','',first,false), _132082, [] )
820d 183 0 CALL:  prolog:get_abs_file_parameter(glob, opt(exist,true,[],error,txt,'','',first,false), _132083 )
821d 183 0 CALL:  prolog:\=('', '' )
822d 183 0 FAIL RETRY:  prolog:$glob(opt(exist,true,[],error,txt,'','',first,false), _132082, [] )
823d 148 0 CALL:  prolog:$absf_trace('  after name/library unfolding: ~w', ['/home/vsc/.local/bin/simplecudd_lfi'] )
824d 181 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
825d 181 0 FAIL RETRY:  prolog:$absf_trace('  after name/library unfolding: ~w', ['/home/vsc/.local/bin/simplecudd_lfi'] )
826d 148 0 CALL:  prolog:$variable_expansion([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _1048404 )
827d 181 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), true )
828d 148 0 CALL:  prolog:$expand_file_name([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _1048404 )
829d 148 0 CALL:  prolog:$absf_trace('   after environment variable expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105]] )
830d 180 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
831d 180 0 FAIL RETRY:  prolog:$absf_trace('   after environment variable expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105]] )
832d 148 0 CALL:  prolog:$prefix([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], opt(exist,true,[],error,txt,'','',first,false), _1048406, [] )
833d 180 0 CALL:  prolog:is_absolute_file_name([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
834d 148 0 CALL:  prolog:phrase([47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _1048406, [] )
835d 148 0 CALL:  prolog:$phrase_list([104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132158, [] )
836d 148 0 CALL:  prolog:$phrase_list([111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132160, [] )
837d 148 0 CALL:  prolog:$phrase_list([109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132162, [] )
838d 148 0 CALL:  prolog:$phrase_list([101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132164, [] )
839d 148 0 CALL:  prolog:$phrase_list([47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132166, [] )
840d 148 0 CALL:  prolog:$phrase_list([118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132168, [] )
841d 148 0 CALL:  prolog:$phrase_list([115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132170, [] )
842d 148 0 CALL:  prolog:$phrase_list([99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132172, [] )
843d 148 0 CALL:  prolog:$phrase_list([47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132174, [] )
844d 148 0 CALL:  prolog:$phrase_list([46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132176, [] )
845d 148 0 CALL:  prolog:$phrase_list([108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132178, [] )
846d 148 0 CALL:  prolog:$phrase_list([111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132180, [] )
847d 148 0 CALL:  prolog:$phrase_list([99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132182, [] )
848d 148 0 CALL:  prolog:$phrase_list([97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132184, [] )
849d 148 0 CALL:  prolog:$phrase_list([108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132186, [] )
850d 148 0 CALL:  prolog:$phrase_list([47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132188, [] )
851d 148 0 CALL:  prolog:$phrase_list([98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132190, [] )
852d 148 0 CALL:  prolog:$phrase_list([105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132192, [] )
853d 148 0 CALL:  prolog:$phrase_list([110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132194, [] )
854d 148 0 CALL:  prolog:$phrase_list([47,115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132196, [] )
855d 148 0 CALL:  prolog:$phrase_list([115,105,109,112,108,101,99,117,100,100,95,108,102,105], _132198, [] )
856d 148 0 CALL:  prolog:$phrase_list([105,109,112,108,101,99,117,100,100,95,108,102,105], _132200, [] )
857d 148 0 CALL:  prolog:$phrase_list([109,112,108,101,99,117,100,100,95,108,102,105], _132202, [] )
858d 148 0 CALL:  prolog:$phrase_list([112,108,101,99,117,100,100,95,108,102,105], _132204, [] )
859d 148 0 CALL:  prolog:$phrase_list([108,101,99,117,100,100,95,108,102,105], _132206, [] )
860d 148 0 CALL:  prolog:$phrase_list([101,99,117,100,100,95,108,102,105], _132208, [] )
861d 148 0 CALL:  prolog:$phrase_list([99,117,100,100,95,108,102,105], _132210, [] )
862d 148 0 CALL:  prolog:$phrase_list([117,100,100,95,108,102,105], _132212, [] )
863d 148 0 CALL:  prolog:$phrase_list([100,100,95,108,102,105], _132214, [] )
864d 148 0 CALL:  prolog:$phrase_list([100,95,108,102,105], _132216, [] )
865d 148 0 CALL:  prolog:$phrase_list([95,108,102,105], _132218, [] )
866d 148 0 CALL:  prolog:$phrase_list([108,102,105], _132220, [] )
867d 148 0 CALL:  prolog:$phrase_list([102,105], _132222, [] )
868d 148 0 CALL:  prolog:$phrase_list([105], _132224, [] )
869d 148 0 CALL:  prolog:$phrase_list([], _132226, [] )
870d 148 0 CALL:  prolog:$absf_trace('    after prefix expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105]] )
871d 178 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
872d 178 0 FAIL RETRY:  prolog:$absf_trace('    after prefix expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105]] )
873d 148 0 CALL:  prolog:atom_codes(_1048409, [47,104,111,109,101,47,118,115,99,47,46,108,111,99,97,108,47,98,105,110,47,115,105,109,112,108,101,99,117,100,100,95,108,102,105] )
874d 148 0 TRY_OR 
875d 148 0 CALL:  prolog:expand_file_name('/home/vsc/.local/bin/simplecudd_lfi', _1048408 )
876d 148 0 CALL:  prolog:$absf_trace('     after shell globbing: ~w', [['/home/vsc/.local/bin/simplecudd_lfi']] )
877d 176 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
878d 176 0 FAIL RETRY:  prolog:$absf_trace('     after shell globbing: ~w', [['/home/vsc/.local/bin/simplecudd_lfi']] )
879d 148 0 CALL:  lists:member(_1048410, ['/home/vsc/.local/bin/simplecudd_lfi'] )
880d 175 0 CALL:  prolog:real_path('/home/vsc/.local/bin/simplecudd_lfi', _131862 )
881d 175 0 CALL:  prolog:$absf_trace('      after canonical path name: ~a', ['/home/vsc/.local/bin/simplecudd_lfi'] )
882d 184 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
883d 184 0 FAIL RETRY:  prolog:$absf_trace('      after canonical path name: ~a', ['/home/vsc/.local/bin/simplecudd_lfi'] )
884d 175 0 CALL:  prolog:$check_file('/home/vsc/.local/bin/simplecudd_lfi', txt, exist )
885d 185 0 FAIL RETRY:  prolog:$check_file('/home/vsc/.local/bin/simplecudd_lfi', txt, exist )
886d 185 0 FAIL RETRY:  prolog:$check_file('/home/vsc/.local/bin/simplecudd_lfi', txt, exist )
887d 185 0 CALL:  prolog:$access_file('/home/vsc/.local/bin/simplecudd_lfi', exist )
888d 185 0 CALL:  prolog:$absf_trace('       after testing ~a for ~a and ~a', ['/home/vsc/.local/bin/simplecudd_lfi',txt,exist] )
889d 194 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
890d 194 0 FAIL RETRY:  prolog:$absf_trace('       after testing ~a for ~a and ~a', ['/home/vsc/.local/bin/simplecudd_lfi',txt,exist] )
891d 185 0 TRY_OR 
892d 193 0 CALL:  prolog:==(first, first )
893d 148 0 CALL:  prolog:$cleanup_on_exit(148, cleanup(true,_131893,'$absf_port'(_131893,'/home/vsc/.local/bin/simplecudd_lfi','/home/vsc/.local/bin/simplecudd_lfi',t(no),false,true,false,true,false,first,true),_131923,false,148) )
894d 163 0 TRY_OR 
895d 181 0 CALL:  prolog:==(first, first )
896d 163 0 CALL:  prolog:set_prolog_flag(fileerrors, true )
897d 163 0 CALL:  prolog:set_prolog_flag(open_expands_filename, false )
898d 163 0 CALL:  prolog:set_prolog_flag(verbose_file_search, false )
899d 163 0 CALL:  prolog:$absf_trace(' |------- found  ~a', ['/home/vsc/.local/bin/simplecudd_lfi'] )
900d 172 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
901d 172 0 FAIL RETRY:  prolog:$absf_trace(' |------- found  ~a', ['/home/vsc/.local/bin/simplecudd_lfi'] )
902d 140 0 CALL:  problog_lfi:check_theory
903d 140 0 TRY_OR 
904d 169 0 CALL:  user:myclause(_1048417, _1048416 )
+s 0x5602af201e50
 @0x7efdd88a30b8 0
+s 0x5602af20a230
 @0x7efdd88a30b8 0
- 0x5602af201e50
 @0x7efdd88a30b8 169
905d 178 0 CALL:  problog:::(_1048415, person(mary) )
+s 0x5602af208fb0
 @0x7efdd88a30d8 0
+s 0x5602af1f2180
 @0x7efdd88a30d8 0
- 0x5602af208fb0
 @0x7efdd88a30d8 178
906d 187 0 CALL:  problog:probabilistic_fact(_1048415, person(mary), _132245 )
+s 0x5602af208fb0
 @0x7efdd88a30d8 0
+s 0x5602af2086b0
 @0x7efdd88a30d8 0
- 0x5602af208fb0
 @0x7efdd88a30d8 187
907d 197 0 CALL:  prolog:ground(person(mary) )
908d 187 0 CALL:  prolog:=..(person(mary), [_132246|_132247] )
909d 187 0 CALL:  prolog:atomic_concat(problog_, person, _1048368 )
910d 187 0 CALL:  lists:append([_132245,mary], [_132254], _1048367 )
911d 187 0 CALL:  lists:append([mary], [_132254], _132257 )
912d 187 0 CALL:  lists:append([], [_132254], _132259 )
913d 187 0 CALL:  prolog:=..(_1048370, [problog_person,_132245,mary,_132254] )
+s 0x5602af20a5c0
 @0x7efdd88a30d8 0
914d 187 0 CALL:  prolog:length([_132245,mary,_132254], _1048369 )
915d 187 0 CALL:  prolog:$skip_list([_132245,mary,_132254], _1048369, _132266, _132267 )
916d 187 0 CALL:  prolog:==([], [] )
917d 187 0 CALL:  prolog:current_predicate(problog:problog_person/3 )
918d 187 0 CALL:  prolog:$yap_strip_module(problog:problog_person/3, _1048364, _1048363 )
919d 187 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_person/3 )
920d 187 0 TRY_OR 
921d 228 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_person/3 )
922d 237 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_person/3 )
923d 228 0 TRY_OR 
925d 228 0 CALL:  error:may_bind_to_type(atom, problog_person )
926d 245 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_person )
927d 228 0 CALL:  error:may_bind_to_type(integer, 3 )
928d 237 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
929d 187 0 CALL:  prolog:$c_i_predicate(problog_person/3, problog )
930d 187 0 TRY_OR 
931d 222 0 CALL:  prolog:ground(problog_person/3 )
932d 187 0 CALL:  prolog:functor(_132274, problog_person, 3 )
933d 187 0 CALL:  prolog:current_predicate(problog_person, problog:problog_person(_132275,_132276,_132277) )
934d 187 0 CALL:  prolog:$yap_strip_module(problog:problog_person(_132275,_132276,_132277), _1048360, _1048359 )
935d 187 0 CALL:  prolog:functor(problog_person(_132275,_132276,_132277), problog_person, _1048358 )
936d 187 0 TRY_OR 
937d 224 0 CALL:  prolog:$current_predicate(problog_person, problog, problog_person(_132275,_132276,_132277), user )
939d 187 0 CALL:  prolog:$imported_predicate(problog_person(_132275,_132276,_132277), problog, _1048363, _1048364 )
940d 225 0 CALL:  prolog:$is_system_predicate(problog_person(_132275,_132276,_132277), prolog )
941d 225 0 FAIL RETRY:  prolog:$imported_predicate(problog_person(_132275,_132276,_132277), problog, _1048363, _1048364 )
942d 187 0 CALL:  prolog:$undefined(problog_person(_132275,_132276,_132277), problog )
943d 187 0 CALL:  prolog:$get_undefined_predicates(problog_person(_132275,_132276,_132277), problog, _1048363, _1048364 )
944d 232 0 CALL:  prolog:recorded('$import', '$import'(_132282,problog,_132284,problog_person(_132275,_132276,_132277),_132286,_132287), _1048333 )
945d 232 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_person(_132275,_132276,_132277), problog, _1048363, _1048364 )
946d 232 0 CALL:  prolog:$pred_exists(problog_person(_132275,_132276,_132277), user )
947d 232 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_person(_132275,_132276,_132277), problog, _1048363, _1048364 )
948d 232 0 CALL:  prolog:recorded('$dialect', swi, _1048328 )
949d 232 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_person(_132275,_132276,_132277), problog, _1048363, _1048364 )
950d 187 0 CALL:  prolog:$parent_module(problog, _1048346 )
951d 187 0 FAIL RETRY:  problog:::(_1048415, person(mary) )
952d 178 0 CALL:  problog:continuous_fact(_132246,_132247, person(mary), _132248 )
953d 178 0 CALL:  problog:get_internal_continuous_fact(_132248, _1048381, _1048388, _1048380, _1048385 )
954d 178 0 CALL:  problog:problog_continuous_predicate(_1048369, _1048370, _1048385 )
955d 178 0 FAIL RETRY:  user:myclause(_1048417, _1048416 )
956d 178 0 CALL:  problog:::(_1048415, person(john) )
957d 187 0 CALL:  problog:probabilistic_fact(_1048415, person(john), _132245 )
958d 197 0 CALL:  prolog:ground(person(john) )
959d 187 0 CALL:  prolog:=..(person(john), [_132246|_132247] )
960d 187 0 CALL:  prolog:atomic_concat(problog_, person, _1048368 )
961d 187 0 CALL:  lists:append([_132245,john], [_132254], _1048367 )
962d 187 0 CALL:  lists:append([john], [_132254], _132257 )
963d 187 0 CALL:  lists:append([], [_132254], _132259 )
964d 187 0 CALL:  prolog:=..(_1048370, [problog_person,_132245,john,_132254] )
965d 187 0 CALL:  prolog:length([_132245,john,_132254], _1048369 )
966d 187 0 CALL:  prolog:$skip_list([_132245,john,_132254], _1048369, _132266, _132267 )
967d 187 0 CALL:  prolog:==([], [] )
968d 187 0 CALL:  prolog:current_predicate(problog:problog_person/3 )
969d 187 0 CALL:  prolog:$yap_strip_module(problog:problog_person/3, _1048364, _1048363 )
970d 187 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_person/3 )
971d 187 0 TRY_OR 
972d 228 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_person/3 )
973d 237 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_person/3 )
974d 228 0 TRY_OR 
976d 228 0 CALL:  error:may_bind_to_type(atom, problog_person )
977d 245 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_person )
978d 228 0 CALL:  error:may_bind_to_type(integer, 3 )
979d 237 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
980d 187 0 CALL:  prolog:$c_i_predicate(problog_person/3, problog )
981d 187 0 TRY_OR 
982d 222 0 CALL:  prolog:ground(problog_person/3 )
983d 187 0 CALL:  prolog:functor(_132274, problog_person, 3 )
984d 187 0 CALL:  prolog:current_predicate(problog_person, problog:problog_person(_132275,_132276,_132277) )
985d 187 0 CALL:  prolog:$yap_strip_module(problog:problog_person(_132275,_132276,_132277), _1048360, _1048359 )
986d 187 0 CALL:  prolog:functor(problog_person(_132275,_132276,_132277), problog_person, _1048358 )
987d 187 0 TRY_OR 
988d 224 0 CALL:  prolog:$current_predicate(problog_person, problog, problog_person(_132275,_132276,_132277), user )
990d 187 0 CALL:  prolog:$imported_predicate(problog_person(_132275,_132276,_132277), problog, _1048363, _1048364 )
991d 225 0 CALL:  prolog:$is_system_predicate(problog_person(_132275,_132276,_132277), prolog )
992d 225 0 FAIL RETRY:  prolog:$imported_predicate(problog_person(_132275,_132276,_132277), problog, _1048363, _1048364 )
993d 187 0 CALL:  prolog:$undefined(problog_person(_132275,_132276,_132277), problog )
994d 187 0 CALL:  prolog:$get_undefined_predicates(problog_person(_132275,_132276,_132277), problog, _1048363, _1048364 )
995d 232 0 CALL:  prolog:recorded('$import', '$import'(_132282,problog,_132284,problog_person(_132275,_132276,_132277),_132286,_132287), _1048333 )
996d 232 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_person(_132275,_132276,_132277), problog, _1048363, _1048364 )
997d 232 0 CALL:  prolog:$pred_exists(problog_person(_132275,_132276,_132277), user )
998d 232 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_person(_132275,_132276,_132277), problog, _1048363, _1048364 )
999d 232 0 CALL:  prolog:recorded('$dialect', swi, _1048328 )
1000d 232 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_person(_132275,_132276,_132277), problog, _1048363, _1048364 )
1001d 187 0 CALL:  prolog:$parent_module(problog, _1048346 )
1002d 187 0 FAIL RETRY:  problog:::(_1048415, person(john) )
1003d 178 0 CALL:  problog:continuous_fact(_132246,_132247, person(john), _132248 )
1004d 178 0 CALL:  problog:get_internal_continuous_fact(_132248, _1048381, _1048388, _1048380, _1048385 )
1005d 178 0 CALL:  problog:problog_continuous_predicate(_1048369, _1048370, _1048385 )
1006d 178 0 FAIL RETRY:  user:myclause(_1048417, _1048416 )
1007d 178 0 CALL:  problog:::(_1048415, alarm )
1008d 187 0 CALL:  problog:probabilistic_fact(_1048415, alarm, _132243 )
1009d 197 0 CALL:  prolog:ground(alarm )
1010d 187 0 CALL:  prolog:=..(alarm, [_132244|_132245] )
1011d 187 0 CALL:  prolog:atomic_concat(problog_, alarm, _1048368 )
1012d 187 0 CALL:  lists:append([_132243], [_132250], _1048367 )
1013d 187 0 CALL:  lists:append([], [_132250], _132253 )
1014d 187 0 CALL:  prolog:=..(_1048370, [problog_alarm,_132243,_132250] )
+s 0x5602af20c600
 @0x7efdd88a30d8 0
1015d 187 0 CALL:  prolog:length([_132243,_132250], _1048369 )
1016d 187 0 CALL:  prolog:$skip_list([_132243,_132250], _1048369, _132259, _132260 )
1017d 187 0 CALL:  prolog:==([], [] )
1018d 187 0 CALL:  prolog:current_predicate(problog:problog_alarm/2 )
1019d 187 0 CALL:  prolog:$yap_strip_module(problog:problog_alarm/2, _1048364, _1048363 )
1020d 187 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_alarm/2 )
1021d 187 0 TRY_OR 
1022d 228 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_alarm/2 )
1023d 237 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_alarm/2 )
1024d 228 0 TRY_OR 
1026d 228 0 CALL:  error:may_bind_to_type(atom, problog_alarm )
1027d 245 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_alarm )
1028d 228 0 CALL:  error:may_bind_to_type(integer, 2 )
1029d 237 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
1030d 187 0 CALL:  prolog:$c_i_predicate(problog_alarm/2, problog )
1031d 187 0 TRY_OR 
1032d 222 0 CALL:  prolog:ground(problog_alarm/2 )
1033d 187 0 CALL:  prolog:functor(_132267, problog_alarm, 2 )
1034d 187 0 CALL:  prolog:current_predicate(problog_alarm, problog:problog_alarm(_132268,_132269) )
1035d 187 0 CALL:  prolog:$yap_strip_module(problog:problog_alarm(_132268,_132269), _1048360, _1048359 )
1036d 187 0 CALL:  prolog:functor(problog_alarm(_132268,_132269), problog_alarm, _1048358 )
1037d 187 0 TRY_OR 
1038d 224 0 CALL:  prolog:$current_predicate(problog_alarm, problog, problog_alarm(_132268,_132269), user )
1040d 187 0 CALL:  prolog:$imported_predicate(problog_alarm(_132268,_132269), problog, _1048363, _1048364 )
1041d 225 0 CALL:  prolog:$is_system_predicate(problog_alarm(_132268,_132269), prolog )
1042d 225 0 FAIL RETRY:  prolog:$imported_predicate(problog_alarm(_132268,_132269), problog, _1048363, _1048364 )
1043d 187 0 CALL:  prolog:$undefined(problog_alarm(_132268,_132269), problog )
1044d 187 0 CALL:  prolog:$get_undefined_predicates(problog_alarm(_132268,_132269), problog, _1048363, _1048364 )
1045d 232 0 CALL:  prolog:recorded('$import', '$import'(_132274,problog,_132276,problog_alarm(_132268,_132269),_132278,_132279), _1048333 )
1046d 232 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_132268,_132269), problog, _1048363, _1048364 )
1047d 232 0 CALL:  prolog:$pred_exists(problog_alarm(_132268,_132269), user )
1048d 232 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_132268,_132269), problog, _1048363, _1048364 )
1049d 232 0 CALL:  prolog:recorded('$dialect', swi, _1048328 )
1050d 232 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_132268,_132269), problog, _1048363, _1048364 )
1051d 187 0 CALL:  prolog:$parent_module(problog, _1048346 )
1052d 187 0 FAIL RETRY:  problog:::(_1048415, alarm )
1053d 178 0 CALL:  problog:continuous_fact(_132244,_132245, alarm, _132246 )
1054d 178 0 CALL:  problog:get_internal_continuous_fact(_132246, _1048381, _1048388, _1048380, _1048385 )
1055d 178 0 CALL:  problog:problog_continuous_predicate(_1048369, _1048370, _1048385 )
1056d 178 0 FAIL RETRY:  user:myclause(_1048417, _1048416 )
1057d 178 0 CALL:  problog:::(_1048415, alarm )
1058d 187 0 CALL:  problog:probabilistic_fact(_1048415, alarm, _132243 )
1059d 197 0 CALL:  prolog:ground(alarm )
1060d 187 0 CALL:  prolog:=..(alarm, [_132244|_132245] )
1061d 187 0 CALL:  prolog:atomic_concat(problog_, alarm, _1048368 )
1062d 187 0 CALL:  lists:append([_132243], [_132250], _1048367 )
1063d 187 0 CALL:  lists:append([], [_132250], _132253 )
1064d 187 0 CALL:  prolog:=..(_1048370, [problog_alarm,_132243,_132250] )
1065d 187 0 CALL:  prolog:length([_132243,_132250], _1048369 )
1066d 187 0 CALL:  prolog:$skip_list([_132243,_132250], _1048369, _132259, _132260 )
1067d 187 0 CALL:  prolog:==([], [] )
1068d 187 0 CALL:  prolog:current_predicate(problog:problog_alarm/2 )
1069d 187 0 CALL:  prolog:$yap_strip_module(problog:problog_alarm/2, _1048364, _1048363 )
1070d 187 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_alarm/2 )
1071d 187 0 TRY_OR 
1072d 228 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_alarm/2 )
1073d 237 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_alarm/2 )
1074d 228 0 TRY_OR 
1076d 228 0 CALL:  error:may_bind_to_type(atom, problog_alarm )
1077d 245 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_alarm )
1078d 228 0 CALL:  error:may_bind_to_type(integer, 2 )
1079d 237 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
1080d 187 0 CALL:  prolog:$c_i_predicate(problog_alarm/2, problog )
1081d 187 0 TRY_OR 
1082d 222 0 CALL:  prolog:ground(problog_alarm/2 )
1083d 187 0 CALL:  prolog:functor(_132267, problog_alarm, 2 )
1084d 187 0 CALL:  prolog:current_predicate(problog_alarm, problog:problog_alarm(_132268,_132269) )
1085d 187 0 CALL:  prolog:$yap_strip_module(problog:problog_alarm(_132268,_132269), _1048360, _1048359 )
1086d 187 0 CALL:  prolog:functor(problog_alarm(_132268,_132269), problog_alarm, _1048358 )
1087d 187 0 TRY_OR 
1088d 224 0 CALL:  prolog:$current_predicate(problog_alarm, problog, problog_alarm(_132268,_132269), user )
1090d 187 0 CALL:  prolog:$imported_predicate(problog_alarm(_132268,_132269), problog, _1048363, _1048364 )
1091d 225 0 CALL:  prolog:$is_system_predicate(problog_alarm(_132268,_132269), prolog )
1092d 225 0 FAIL RETRY:  prolog:$imported_predicate(problog_alarm(_132268,_132269), problog, _1048363, _1048364 )
1093d 187 0 CALL:  prolog:$undefined(problog_alarm(_132268,_132269), problog )
1094d 187 0 CALL:  prolog:$get_undefined_predicates(problog_alarm(_132268,_132269), problog, _1048363, _1048364 )
1095d 232 0 CALL:  prolog:recorded('$import', '$import'(_132274,problog,_132276,problog_alarm(_132268,_132269),_132278,_132279), _1048333 )
1096d 232 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_132268,_132269), problog, _1048363, _1048364 )
1097d 232 0 CALL:  prolog:$pred_exists(problog_alarm(_132268,_132269), user )
1098d 232 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_132268,_132269), problog, _1048363, _1048364 )
1099d 232 0 CALL:  prolog:recorded('$dialect', swi, _1048328 )
1100d 232 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_132268,_132269), problog, _1048363, _1048364 )
1101d 187 0 CALL:  prolog:$parent_module(problog, _1048346 )
1102d 187 0 FAIL RETRY:  problog:::(_1048415, alarm )
1103d 178 0 CALL:  problog:continuous_fact(_132244,_132245, alarm, _132246 )
1104d 178 0 CALL:  problog:get_internal_continuous_fact(_132246, _1048381, _1048388, _1048380, _1048385 )
1105d 178 0 CALL:  problog:problog_continuous_predicate(_1048369, _1048370, _1048385 )
1106d 178 0 FAIL RETRY:  user:myclause(_1048417, _1048416 )
1107d 169 0 CALL:  problog:::(_1048415, calls(_132244) )
1108d 178 0 CALL:  problog:probabilistic_fact(_1048415, calls(_132244), _132255 )
1109d 188 0 CALL:  prolog:ground(calls(_132244) )
1110d 188 0 FAIL RETRY:  problog:probabilistic_fact(_1048415, calls(_132244), _132255 )
1111d 178 0 CALL:  problog:get_internal_fact(_132255, _1048381, _1048379, _1048380 )
1112d 178 0 CALL:  problog:problog_predicate(_1048368, _1048369 )
+s 0x5602af20beb0
 @0x7efdd88a30d8 0
+s 0x5602af201e50
 @0x7efdd88a30d8 0
+s 0x5602af20e050
 @0x7efdd88a30d8 0
+s 0x5602af1ee4f0
 @0x7efdd88a30d8 0
+s 0x5602af1ee4c0
 @0x7efdd88a30d8 0
- 0x5602af20beb0
 @0x7efdd88a30d8 178
1113d 217 0 CALL:  prolog:atomic_concat([problog_,burglary], _1048379 )
1114d 217 0 CALL:  prolog:functor(_1048381, problog_burglary, 2 )
1115d 217 0 CALL:  prolog:arg(1, problog_burglary(_132261,_132262), _132265 )
1116d 217 0 CALL:  prolog:call(problog:problog_burglary(_132255,_132262) )
1117d 217 0 CALL:  prolog:$execute(problog:problog_burglary(_132255,_132262) )
1118d 217 0 CALL:  problog:problog_burglary(_132255, _132262 )
1119d 217 0 CALL:  prolog:=..(problog_burglary(0,-1.249826789005093), [_132266,_132268|_132269] )
1120d 217 0 CALL:  lists:append(_1048387, [_132276], [-1.249826789005093] )
1121d 227 0 CALL:  prolog:name(problog_burglary, [_132278,_132280,_132282,_132284,_132286,_132282,_132290,_132292|_132293] )
1122d 227 0 CALL:  prolog:name(_1048386, [98,117,114,103,108,97,114,121] )
1123d 227 0 CALL:  prolog:=..(calls(_132244), [burglary] )
1124d 227 0 FAIL RETRY:  lists:append(_1048387, [_132276], [-1.249826789005093] )
1125d 217 0 CALL:  lists:append(_132279, [_132276], [] )
1126d 227 0 FAIL RETRY:  lists:append(_132279, [_132276], [] )
1127d 217 0 FAIL RETRY:  problog:problog_predicate(_1048368, _1048369 )
1128d 217 0 CALL:  prolog:atomic_concat([problog_,earthquake], _1048379 )
1129d 217 0 CALL:  prolog:functor(_1048381, problog_earthquake, 2 )
1130d 217 0 CALL:  prolog:arg(1, problog_earthquake(_132261,_132262), _132265 )
1131d 217 0 CALL:  prolog:call(problog:problog_earthquake(_132255,_132262) )
1132d 217 0 CALL:  prolog:$execute(problog:problog_earthquake(_132255,_132262) )
1133d 217 0 CALL:  problog:problog_earthquake(_132255, _132262 )
1134d 217 0 CALL:  prolog:=..(problog_earthquake(1,-0.6596650473806767), [_132266,_132268|_132269] )
1135d 217 0 CALL:  lists:append(_1048387, [_132276], [-0.6596650473806767] )
1136d 227 0 CALL:  prolog:name(problog_earthquake, [_132278,_132280,_132282,_132284,_132286,_132282,_132290,_132292|_132293] )
1137d 227 0 CALL:  prolog:name(_1048386, [101,97,114,116,104,113,117,97,107,101] )
1138d 227 0 CALL:  prolog:=..(calls(_132244), [earthquake] )
1139d 227 0 FAIL RETRY:  lists:append(_1048387, [_132276], [-0.6596650473806767] )
1140d 217 0 CALL:  lists:append(_132279, [_132276], [] )
1141d 227 0 FAIL RETRY:  lists:append(_132279, [_132276], [] )
1142d 217 0 FAIL RETRY:  problog:problog_predicate(_1048368, _1048369 )
1143d 178 0 CALL:  prolog:atomic_concat([problog_,hears_alarm], _1048379 )
1144d 178 0 CALL:  prolog:functor(_1048381, problog_hears_alarm, 3 )
1145d 178 0 CALL:  prolog:arg(1, problog_hears_alarm(_132261,_132262,_132263), _132266 )
1146d 178 0 CALL:  prolog:call(problog:problog_hears_alarm(_132255,_132262,_132263) )
1147d 178 0 CALL:  prolog:$execute(problog:problog_hears_alarm(_132255,_132262,_132263) )
1148d 178 0 CALL:  problog:problog_hears_alarm(_132255, _132262, _132263 )
1149d 178 0 CALL:  prolog:=..(problog_hears_alarm(2,_132262,-0.8533637893529484), [_132267,_132269|_132270] )
1150d 178 0 CALL:  lists:append(_1048387, [_132279], [_132262,-0.8533637893529484] )
1151d 202 0 FAIL RETRY:  lists:append(_1048387, [_132279], [_132262,-0.8533637893529484] )
1152d 178 0 CALL:  lists:append(_132282, [_132279], [-0.8533637893529484] )
1153d 202 0 CALL:  prolog:name(problog_hears_alarm, [_132283,_132285,_132287,_132289,_132291,_132287,_132295,_132297|_132298] )
1154d 202 0 CALL:  prolog:name(_1048386, [104,101,97,114,115,95,97,108,97,114,109] )
1155d 202 0 CALL:  prolog:=..(calls(_132244), [hears_alarm,_132262] )
1156d 202 0 FAIL RETRY:  lists:append(_132282, [_132279], [-0.8533637893529484] )
1157d 178 0 CALL:  lists:append(_132284, [_132279], [] )
1158d 202 0 FAIL RETRY:  lists:append(_132284, [_132279], [] )
1159d 178 0 FAIL RETRY:  problog:::(_1048415, calls(_132244) )
1160d 169 0 CALL:  problog:continuous_fact(_132256,_132257, calls(_132244), _132258 )
1161d 169 0 CALL:  problog:get_internal_continuous_fact(_132258, _1048390, _1048397, _1048389, _1048394 )
1162d 169 0 CALL:  problog:problog_continuous_predicate(_1048378, _1048379, _1048394 )
1164d 140 0 TRY_OR 
1165d 165 0 CALL:  prolog:current_predicate(user:example/1 )
1166d 165 0 CALL:  prolog:$yap_strip_module(user:example/1, _1048404, _1048403 )
1167d 165 0 CALL:  prolog:must_bind_to_type(predicate_indicator, example/1 )
1168d 165 0 TRY_OR 
1169d 188 0 CALL:  error:may_bind_to_type(predicate_indicator, example/1 )
1170d 197 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, example/1 )
1171d 188 0 TRY_OR 
1173d 188 0 CALL:  error:may_bind_to_type(atom, example )
1174d 205 0 FAIL RETRY:  error:may_bind_to_type(atom, example )
1175d 188 0 CALL:  error:may_bind_to_type(integer, 1 )
1176d 197 0 FAIL RETRY:  error:may_bind_to_type(integer, 1 )
1177d 165 0 CALL:  prolog:$c_i_predicate(example/1, user )
1178d 165 0 TRY_OR 
1179d 182 0 CALL:  prolog:ground(example/1 )
1180d 165 0 CALL:  prolog:functor(_132249, example, 1 )
1181d 165 0 CALL:  prolog:current_predicate(example, user:example(_132250) )
1182d 165 0 CALL:  prolog:$yap_strip_module(user:example(_132250), _1048400, _1048399 )
1183d 165 0 CALL:  prolog:functor(example(_132250), example, _1048398 )
1184d 165 0 TRY_OR 
1185d 184 0 CALL:  prolog:$current_predicate(example, user, example(_132250), user )
1186d 184 0 CALL:  user:example(_1048418 )
+s 0x5602af208fb0
 @0x7efdd88a30b8 0
+s 0x5602af20e660
 @0x7efdd88a30b8 0
- 0x5602af208fb0
 @0x7efdd88a30b8 184
1187d 140 0 TRY_OR 
1188d 163 0 CALL:  prolog:current_predicate(user:test_example/1 )
1189d 163 0 CALL:  prolog:$yap_strip_module(user:test_example/1, _1048406, _1048405 )
1190d 163 0 CALL:  prolog:must_bind_to_type(predicate_indicator, test_example/1 )
1191d 163 0 TRY_OR 
1192d 186 0 CALL:  error:may_bind_to_type(predicate_indicator, test_example/1 )
1193d 195 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, test_example/1 )
1194d 186 0 TRY_OR 
1196d 186 0 CALL:  error:may_bind_to_type(atom, test_example )
1197d 203 0 FAIL RETRY:  error:may_bind_to_type(atom, test_example )
1198d 186 0 CALL:  error:may_bind_to_type(integer, 1 )
1199d 195 0 FAIL RETRY:  error:may_bind_to_type(integer, 1 )
1200d 163 0 CALL:  prolog:$c_i_predicate(test_example/1, user )
1201d 163 0 TRY_OR 
1202d 180 0 CALL:  prolog:ground(test_example/1 )
1203d 163 0 CALL:  prolog:functor(_132260, test_example, 1 )
1204d 163 0 CALL:  prolog:current_predicate(test_example, user:test_example(_132261) )
1205d 163 0 CALL:  prolog:$yap_strip_module(user:test_example(_132261), _1048402, _1048401 )
1206d 163 0 CALL:  prolog:functor(test_example(_132261), test_example, _1048400 )
1207d 163 0 TRY_OR 
1208d 182 0 CALL:  prolog:$current_predicate(test_example, user, test_example(_132261), user )
1209d 182 0 CALL:  user:example(_1048429 )
1210d 190 0 CALL:  user:test_example(1 )
1211d 190 0 FAIL RETRY:  user:example(_1048429 )
1212d 182 0 CALL:  user:test_example(2 )
1214d 163 0 CALL:  prolog:$imported_predicate(test_example(_132261), user, _1048405, _1048406 )
1215d 183 0 CALL:  prolog:$is_system_predicate(test_example(_132261), prolog )
1216d 183 0 FAIL RETRY:  prolog:$imported_predicate(test_example(_132261), user, _1048405, _1048406 )
1217d 163 0 CALL:  prolog:$undefined(test_example(_132261), user )
1219d 140 0 TRY_OR 
1220d 162 0 CALL:  prolog:current_predicate(user:known/3 )
1221d 162 0 CALL:  prolog:$yap_strip_module(user:known/3, _1048407, _1048406 )
1222d 162 0 CALL:  prolog:must_bind_to_type(predicate_indicator, known/3 )
1223d 162 0 TRY_OR 
1224d 185 0 CALL:  error:may_bind_to_type(predicate_indicator, known/3 )
1225d 194 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, known/3 )
1226d 185 0 TRY_OR 
1228d 185 0 CALL:  error:may_bind_to_type(atom, known )
1229d 202 0 FAIL RETRY:  error:may_bind_to_type(atom, known )
1230d 185 0 CALL:  error:may_bind_to_type(integer, 3 )
1231d 194 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
1232d 162 0 CALL:  prolog:$c_i_predicate(known/3, user )
1233d 162 0 TRY_OR 
1234d 179 0 CALL:  prolog:ground(known/3 )
1235d 162 0 CALL:  prolog:functor(_132260, known, 3 )
1236d 162 0 CALL:  prolog:current_predicate(known, user:known(_132261,_132262,_132263) )
1237d 162 0 CALL:  prolog:$yap_strip_module(user:known(_132261,_132262,_132263), _1048403, _1048402 )
1238d 162 0 CALL:  prolog:functor(known(_132261,_132262,_132263), known, _1048401 )
1239d 162 0 TRY_OR 
1240d 181 0 CALL:  prolog:$current_predicate(known, user, known(_132261,_132262,_132263), user )
1241d 181 0 CALL:  user:example(_1048421 )
1242d 189 0 CALL:  user:known(1, _1048422, _1048423 )
+s 0x5602af20beb0
 @0x7efdd88a30c8 0
+s 0x5602af211350
 @0x7efdd88a30c8 0
- 0x5602af211350
 @0x7efdd88a30c8 189
+s 0x5602af2112d0
 @0x7efdd88a30c8 0
+s 0x5602af20e710
 @0x7efdd88a30c8 0
- 0x5602af20beb0
 @0x7efdd88a30c8 189
1243d 140 0 TRY_OR 
1244d 158 0 CALL:  user:known(_1048429, _1048428, _1048426 )
+s 0x5602af20beb0
 @0x7efdd88a30b8 0
+s 0x5602af1ef430
 @0x7efdd88a30b8 0
- 0x5602af20beb0
 @0x7efdd88a30b8 158
1245d 168 0 CALL:  prolog:\=(true, true )
1246d 168 0 FAIL RETRY:  user:known(_1048429, _1048428, _1048426 )
1247d 168 0 CALL:  prolog:\=(false, true )
1248d 168 0 CALL:  prolog:\=(false, false )
1249d 168 0 FAIL RETRY:  user:known(_1048429, _1048428, _1048426 )
1250d 158 0 CALL:  prolog:\=(true, true )
1252d 140 0 TRY_OR 
1253d 156 0 CALL:  user:known(_1048429, _1048428, true )
+s 0x5602af20beb0
 @0x7efdd88a30b8 0
+s 0x5602af211350
 @0x7efdd88a30b8 0
- 0x5602af211350
 @0x7efdd88a30b8 156
+s 0x5602af20e820
 @0x7efdd88a30b8 0
+s 0x5602af20e880
 @0x7efdd88a30b8 0
- 0x5602af20beb0
 @0x7efdd88a30b8 156
1254d 166 0 CALL:  user:known(1, alarm, false )
1255d 166 0 FAIL RETRY:  user:known(_1048429, _1048428, true )
1256d 156 0 CALL:  user:known(2, calls(mary), false )
+s 0x5602af20beb0
 @0x7efdd88a30d8 0
+s 0x5602af212640
 @0x7efdd88a30d8 0
- 0x5602af212640
 @0x7efdd88a30d8 156
+s 0x5602af208fb0
 @0x7efdd88a30d8 0
+s 0x5602af16ad40
 @0x7efdd88a30d8 0
+s 0x5602af209f50
 @0x7efdd88a30d8 0
- 0x5602af20beb0
 @0x7efdd88a30d8 156
1258d 140 0 CALL:  flags:problog_flag(reuse_initialized_bdds, _1048455 )
1259d 140 0 CALL:  gflags:flag_get(reuse_initialized_bdds, _1048455 )
1260d 140 0 CALL:  prolog:recorded(flag_values, flag(reuse_initialized_bdds,_132269), _132270 )
1261d 140 0 TRY_OR 
1262d 148 0 CALL:  prolog:==(false, false )
1263d 140 0 CALL:  utils_learning:empty_bdd_directory
+s 0x5602af20e950
 @0x7efdd88a30d8 0
+s 0x5602af209890
 @0x7efdd88a30d8 0
- 0x5602af20e950
 @0x7efdd88a30d8 140
1264d 148 0 CALL:  flags:problog_flag(bdd_directory, _1048421 )
1265d 148 0 CALL:  gflags:flag_get(bdd_directory, _1048421 )
1266d 148 0 CALL:  prolog:recorded(flag_values, flag(bdd_directory,_132273), _132274 )
1267d 140 0 CALL:  utils:delete_file_pattern_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries', 'query*' )
1268d 140 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries', 'query*', _1048428 )
1269d 140 0 CALL:  os:path_separator(_1048420 )
1270d 164 0 CALL:  prolog:current_prolog_flag(windows, true )
1271d 164 0 FAIL RETRY:  os:path_separator(_1048420 )
1272d 140 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries',/,'query*'], _1048428 )
1273d 140 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries',/,'query*'], _1048428 )
1274d 140 0 CALL:  prolog:expand_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query*', _1048429 )
1275d 140 0 CALL:  utils:delete_files_silently(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values','/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'] )
+s 0x5602af212d40
 @0x7efdd88a30e8 0
+s 0x5602af20eaa0
 @0x7efdd88a30e8 0
- 0x5602af20eaa0
 @0x7efdd88a30e8 140
+s 0x5602af20ed00
 @0x7efdd88a30e8 0
+s 0x5602af20ed50
 @0x7efdd88a30e8 0
- 0x5602af20ed00
 @0x7efdd88a30e8 140
- 0x5602af212d40
 @0x7efdd88a30e8 140
1276d 140 0 CALL:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values' )
+s 0x5602af212d40
 @0x7efdd88a30e8 0
+s 0x5602af19db10
 @0x7efdd88a30e8 0
- 0x5602af212d40
 @0x7efdd88a30e8 140
1277d 154 0 CALL:  prolog:catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048415, utils:fail )
1278d 154 0 CALL:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048415, utils:fail )
1279d 170 0 CALL:  prolog:$execute(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values') )
+s 0x5602af20ee30
 @0x7efdd88a30e8 0
1280d 170 0 CALL:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), 170, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), user )
1281d 187 0 FAIL RETRY:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), 170, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), user )
1282d 170 0 CALL:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), 170, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), utils )
1283d 198 0 FAIL RETRY:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), 170, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), utils )
1284d 170 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), utils )
1285d 170 0 CALL:  utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values' )
1286d 170 0 CALL:  prolog:$undefp([utils|delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values')], error )
1287d 170 0 CALL:  prolog:yap_flag(unknown, error, fail )
1288d 170 0 CALL:  prolog:$stop_creeping(_1048375 )
1289d 170 0 TRY_OR 
1290d 211 0 CALL:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132301:_132302 )
1291d 220 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_132304,_132305,_132306,_132307), user )
1292d 220 0 FAIL RETRY:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132301:_132302 )
1293d 211 0 CALL:  prolog:expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132301:_132302 )
1294d 211 0 CALL:  prolog:$expand_meta_call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), [], _132301:_132302 )
1295d 211 0 CALL:  prolog:source_module(_132303 )
1296d 211 0 CALL:  prolog:$yap_strip_module(user:utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048355, _132307 )
1297d 211 0 CALL:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values')) )
1298d 235 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values')) )
1299d 235 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values')) )
1300d 235 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values')) )
1301d 211 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132314, _132315 )
1302d 211 0 CALL:  prolog:$expand_goal(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values')) )
1303d 211 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132319, _132320 )
1304d 211 0 CALL:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132325:_132326 )
1305d 245 0 CALL:  prolog:_user_expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132328:_132329 )
1309d 245 0 FAIL RETRY:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132325:_132326 )
1310d 211 0 CALL:  prolog:$import_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132328:_132329 )
1311d 244 0 CALL:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), utils, _132329, _132328 )
1312d 260 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), prolog )
1313d 260 0 FAIL RETRY:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), utils, _132329, _132328 )
1314d 244 0 CALL:  prolog:$undefined(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), utils )
1315d 244 0 CALL:  prolog:$get_undefined_predicates(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), utils, _132329, _132328 )
1316d 267 0 CALL:  prolog:recorded('$import', '$import'(_132331,utils,_132333,delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'),_132335,_132336), _1048298 )
1317d 267 0 CALL:  prolog:$continue_imported(_132328, operating_system_support, _132329, delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values') )
1318d 278 0 CALL:  prolog:$pred_exists(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), operating_system_support )
1319d 267 0 CALL:  prolog:\=(operating_system_support, utils )
1320d 211 0 CALL:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), utils, [], _1048343 )
1321d 243 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132349, _1048322 )
1322d 243 0 CALL:  prolog:functor(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132352, _132353 )
1323d 243 0 CALL:  prolog:$meta_predicate(delete_file, operating_system_support, 1, _1048323 )
1324d 243 0 FAIL RETRY:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), utils, [], _1048343 )
1325d 211 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132349, _132350 )
1326d 211 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132351, _132352 )
1327d 211 0 CALL:  prolog:$end_goal_expansion(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048354, _1048356, utils, user, operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values') )
1328d 211 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), utils, user, operating_system_support, _1048354 )
1329d 211 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), operating_system_support )
1330d 211 0 TRY_OR 
1331d 249 0 CALL:  prolog:==(operating_system_support, utils )
1333d 211 0 CALL:  prolog:$c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048345 )
1334d 242 0 CALL:  prolog:get_value('$c_arith', true )
1335d 211 0 CALL:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048345 )
1336d 253 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132356, _132357 )
1337d 253 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048345 )
1338d 253 0 CALL:  prolog:$compop(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048307, _1048308, _1048310 )
1339d 253 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _1048345 )
1340d 253 0 CALL:  prolog:$yap_strip_module(operating_system_support:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132359, _132360 )
1341d 253 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), utils, user, operating_system_support, _1048356 )
1342d 253 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), operating_system_support )
1343d 253 0 TRY_OR 
1344d 269 0 CALL:  prolog:==(operating_system_support, utils )
1346d 253 0 CALL:  prolog:$yap_strip_module(utils:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), _132301, _132302 )
1347d 253 0 TRY_OR 
1348d 261 0 CALL:  prolog:\==(utils, operating_system_support )
1349d 253 0 CALL:  prolog:\=(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), fail )
1350d 170 0 CALL:  prolog:yap_flag(unknown, _1048374, error )
1351d 170 0 TRY_OR 
1352d 208 0 CALL:  prolog:==(false, true )
1354d 170 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'), operating_system_support )
1355d 170 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values' )
1356d 170 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', _1048393 )
1357d 170 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', off, on, off )
1358d 170 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', _1048390 )
1359d 170 0 CALL:  operating_system_support:file_property('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', _1048389, _1048385, _1048386, _1048387, _1048388, off )
1360d 170 0 CALL:  operating_system_support:delete_file(regular, '/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', off, on, off )
1361d 188 0 FAIL RETRY:  operating_system_support:delete_file(regular, '/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', off, on, off )
1362d 188 0 FAIL RETRY:  operating_system_support:delete_file(regular, '/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', off, on, off )
1363d 170 0 CALL:  operating_system_support:unlink_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', off )
1364d 170 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', _1048393 )
1365d 170 0 CALL:  operating_system_support:unlink('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', _1048391 )
1366d 170 0 CALL:  operating_system_support:handle_system_internal(_132367, off, delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values') )
1367d 170 0 TRY_OR 
1368d 184 0 CALL:  prolog:==(170, 170 )
1369d 140 0 CALL:  utils:delete_files_silently(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'] )
1370d 140 0 CALL:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values' )
1371d 154 0 CALL:  prolog:catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048415, utils:fail )
1372d 154 0 CALL:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048415, utils:fail )
1373d 170 0 CALL:  prolog:$execute(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values') )
1374d 170 0 CALL:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), 170, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), user )
1375d 187 0 FAIL RETRY:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), 170, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), user )
1376d 170 0 CALL:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), 170, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), utils )
1377d 198 0 FAIL RETRY:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), 170, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), utils )
1378d 170 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), utils )
1379d 170 0 CALL:  utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values' )
1380d 170 0 CALL:  prolog:$undefp([utils|delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values')], error )
1381d 170 0 CALL:  prolog:yap_flag(unknown, error, fail )
1382d 170 0 CALL:  prolog:$stop_creeping(_1048375 )
1383d 170 0 TRY_OR 
1384d 211 0 CALL:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132386:_132387 )
1385d 220 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_132389,_132390,_132391,_132392), user )
1386d 220 0 FAIL RETRY:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132386:_132387 )
1387d 211 0 CALL:  prolog:expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132386:_132387 )
1388d 211 0 CALL:  prolog:$expand_meta_call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), [], _132386:_132387 )
1389d 211 0 CALL:  prolog:source_module(_132388 )
1390d 211 0 CALL:  prolog:$yap_strip_module(user:utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048355, _132392 )
1391d 211 0 CALL:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values')) )
1392d 235 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values')) )
1393d 235 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values')) )
1394d 235 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values')) )
1395d 211 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132399, _132400 )
1396d 211 0 CALL:  prolog:$expand_goal(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values')) )
1397d 211 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132404, _132405 )
1398d 211 0 CALL:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132410:_132411 )
1399d 245 0 CALL:  prolog:_user_expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132413:_132414 )
1403d 245 0 FAIL RETRY:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132410:_132411 )
1404d 211 0 CALL:  prolog:$import_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132413:_132414 )
1405d 244 0 CALL:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), utils, _132414, _132413 )
1406d 260 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), prolog )
1407d 260 0 FAIL RETRY:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), utils, _132414, _132413 )
1408d 244 0 CALL:  prolog:$undefined(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), utils )
1409d 244 0 CALL:  prolog:$get_undefined_predicates(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), utils, _132414, _132413 )
1410d 267 0 CALL:  prolog:recorded('$import', '$import'(_132416,utils,_132418,delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'),_132420,_132421), _1048298 )
1411d 267 0 CALL:  prolog:$continue_imported(_132413, operating_system_support, _132414, delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values') )
1412d 278 0 CALL:  prolog:$pred_exists(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), operating_system_support )
1413d 267 0 CALL:  prolog:\=(operating_system_support, utils )
1414d 211 0 CALL:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), utils, [], _1048343 )
1415d 243 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132434, _1048322 )
1416d 243 0 CALL:  prolog:functor(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132437, _132438 )
1417d 243 0 CALL:  prolog:$meta_predicate(delete_file, operating_system_support, 1, _1048323 )
1418d 243 0 FAIL RETRY:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), utils, [], _1048343 )
1419d 211 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132434, _132435 )
1420d 211 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132436, _132437 )
1421d 211 0 CALL:  prolog:$end_goal_expansion(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048354, _1048356, utils, user, operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values') )
1422d 211 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), utils, user, operating_system_support, _1048354 )
1423d 211 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), operating_system_support )
1424d 211 0 TRY_OR 
1425d 249 0 CALL:  prolog:==(operating_system_support, utils )
1427d 211 0 CALL:  prolog:$c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048345 )
1428d 242 0 CALL:  prolog:get_value('$c_arith', true )
1429d 211 0 CALL:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048345 )
1430d 253 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132441, _132442 )
1431d 253 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048345 )
1432d 253 0 CALL:  prolog:$compop(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048307, _1048308, _1048310 )
1433d 253 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _1048345 )
1434d 253 0 CALL:  prolog:$yap_strip_module(operating_system_support:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132444, _132445 )
1435d 253 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), utils, user, operating_system_support, _1048356 )
1436d 253 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), operating_system_support )
1437d 253 0 TRY_OR 
1438d 269 0 CALL:  prolog:==(operating_system_support, utils )
1440d 253 0 CALL:  prolog:$yap_strip_module(utils:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), _132386, _132387 )
1441d 253 0 TRY_OR 
1442d 261 0 CALL:  prolog:\==(utils, operating_system_support )
1443d 253 0 CALL:  prolog:\=(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), fail )
1444d 170 0 CALL:  prolog:yap_flag(unknown, _1048374, error )
1445d 170 0 TRY_OR 
1446d 208 0 CALL:  prolog:==(false, true )
1448d 170 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'), operating_system_support )
1449d 170 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values' )
1450d 170 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', _1048393 )
1451d 170 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', off, on, off )
1452d 170 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', _1048390 )
1453d 170 0 CALL:  operating_system_support:file_property('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', _1048389, _1048385, _1048386, _1048387, _1048388, off )
1454d 170 0 CALL:  operating_system_support:delete_file(regular, '/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', off, on, off )
1455d 188 0 FAIL RETRY:  operating_system_support:delete_file(regular, '/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', off, on, off )
1456d 188 0 FAIL RETRY:  operating_system_support:delete_file(regular, '/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', off, on, off )
1457d 170 0 CALL:  operating_system_support:unlink_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', off )
1458d 170 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', _1048393 )
1459d 170 0 CALL:  operating_system_support:unlink('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', _1048391 )
1460d 170 0 CALL:  operating_system_support:handle_system_internal(_132452, off, delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values') )
1461d 170 0 TRY_OR 
1462d 184 0 CALL:  prolog:==(170, 170 )
1463d 140 0 CALL:  utils:delete_files_silently([] )
1464d 140 0 CALL:  utils_learning:empty_output_directory
+s 0x5602af2179f0
 @0x7efdd88a30f8 0
+s 0x5602af21a2d0
 @0x7efdd88a30f8 0
- 0x5602af2179f0
 @0x7efdd88a30f8 140
1465d 148 0 CALL:  flags:problog_flag(output_directory, _1048421 )
1466d 148 0 CALL:  gflags:flag_get(output_directory, _1048421 )
1467d 148 0 CALL:  prolog:recorded(flag_values, flag(output_directory,_132457), _132458 )
1468d 140 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output', 'log.dat', _1048419 )
1469d 140 0 CALL:  os:path_separator(_1048411 )
1470d 173 0 CALL:  prolog:current_prolog_flag(windows, true )
1471d 173 0 FAIL RETRY:  os:path_separator(_1048411 )
1472d 140 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,'log.dat'], _1048419 )
1473d 140 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,'log.dat'], _1048419 )
1474d 140 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output', 'out.dat', _1048420 )
1475d 140 0 CALL:  os:path_separator(_1048411 )
1476d 173 0 CALL:  prolog:current_prolog_flag(windows, true )
1477d 173 0 FAIL RETRY:  os:path_separator(_1048411 )
1478d 140 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,'out.dat'], _1048420 )
1479d 140 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,'out.dat'], _1048420 )
1480d 140 0 CALL:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat' )
1481d 163 0 CALL:  prolog:catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048406, utils:fail )
1482d 163 0 CALL:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048406, utils:fail )
1483d 179 0 CALL:  prolog:$execute(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat') )
1484d 179 0 CALL:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), 179, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), user )
1485d 196 0 FAIL RETRY:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), 179, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), user )
1486d 179 0 CALL:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), 179, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), utils )
1487d 207 0 FAIL RETRY:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), 179, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), utils )
1488d 179 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), utils )
1489d 179 0 CALL:  utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat' )
1490d 179 0 CALL:  prolog:$undefp([utils|delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat')], error )
1491d 179 0 CALL:  prolog:yap_flag(unknown, error, fail )
1492d 179 0 CALL:  prolog:$stop_creeping(_1048366 )
1493d 179 0 TRY_OR 
1494d 220 0 CALL:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132487:_132488 )
1495d 229 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_132490,_132491,_132492,_132493), user )
1496d 229 0 FAIL RETRY:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132487:_132488 )
1497d 220 0 CALL:  prolog:expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132487:_132488 )
1498d 220 0 CALL:  prolog:$expand_meta_call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), [], _132487:_132488 )
1499d 220 0 CALL:  prolog:source_module(_132489 )
1500d 220 0 CALL:  prolog:$yap_strip_module(user:utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048346, _132493 )
1501d 220 0 CALL:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048345, _1048347, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat')) )
1502d 244 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048345, _1048347, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat')) )
1503d 244 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048345, _1048347, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat')) )
1504d 244 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048345, _1048347, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat')) )
1505d 220 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132500, _132501 )
1506d 220 0 CALL:  prolog:$expand_goal(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048345, _1048347, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat')) )
1507d 220 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132505, _132506 )
1508d 220 0 CALL:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132511:_132512 )
1509d 254 0 CALL:  prolog:_user_expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132514:_132515 )
1513d 254 0 FAIL RETRY:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132511:_132512 )
1514d 220 0 CALL:  prolog:$import_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132514:_132515 )
1515d 253 0 CALL:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), utils, _132515, _132514 )
1516d 269 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), prolog )
1517d 269 0 FAIL RETRY:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), utils, _132515, _132514 )
1518d 253 0 CALL:  prolog:$undefined(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), utils )
1519d 253 0 CALL:  prolog:$get_undefined_predicates(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), utils, _132515, _132514 )
1520d 276 0 CALL:  prolog:recorded('$import', '$import'(_132517,utils,_132519,delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'),_132521,_132522), _1048289 )
1521d 276 0 CALL:  prolog:$continue_imported(_132514, operating_system_support, _132515, delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat') )
1522d 287 0 CALL:  prolog:$pred_exists(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), operating_system_support )
1523d 276 0 CALL:  prolog:\=(operating_system_support, utils )
1524d 220 0 CALL:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), utils, [], _1048334 )
1525d 252 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132535, _1048313 )
1526d 252 0 CALL:  prolog:functor(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132538, _132539 )
1527d 252 0 CALL:  prolog:$meta_predicate(delete_file, operating_system_support, 1, _1048314 )
1528d 252 0 FAIL RETRY:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), utils, [], _1048334 )
1529d 220 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132535, _132536 )
1530d 220 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132537, _132538 )
1531d 220 0 CALL:  prolog:$end_goal_expansion(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048345, _1048347, utils, user, operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat') )
1532d 220 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), utils, user, operating_system_support, _1048345 )
1533d 220 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), operating_system_support )
1534d 220 0 TRY_OR 
1535d 258 0 CALL:  prolog:==(operating_system_support, utils )
1537d 220 0 CALL:  prolog:$c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048336 )
1538d 251 0 CALL:  prolog:get_value('$c_arith', true )
1539d 220 0 CALL:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048336 )
1540d 262 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132542, _132543 )
1541d 262 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048336 )
1542d 262 0 CALL:  prolog:$compop(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048298, _1048299, _1048301 )
1543d 262 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048336 )
1544d 262 0 CALL:  prolog:$yap_strip_module(operating_system_support:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132545, _132546 )
1545d 262 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), utils, user, operating_system_support, _1048347 )
1546d 262 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), operating_system_support )
1547d 262 0 TRY_OR 
1548d 278 0 CALL:  prolog:==(operating_system_support, utils )
1550d 262 0 CALL:  prolog:$yap_strip_module(utils:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _132487, _132488 )
1551d 262 0 TRY_OR 
1552d 270 0 CALL:  prolog:\==(utils, operating_system_support )
1553d 262 0 CALL:  prolog:\=(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), fail )
1554d 179 0 CALL:  prolog:yap_flag(unknown, _1048365, error )
1555d 179 0 TRY_OR 
1556d 217 0 CALL:  prolog:==(false, true )
1558d 179 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), operating_system_support )
1559d 179 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat' )
1560d 179 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat', _1048384 )
1561d 179 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat', off, on, off )
1562d 179 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat', _1048381 )
1563d 179 0 CALL:  operating_system_support:file_property('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat', _1048380, _1048376, _1048377, _1048378, _1048379, off )
1564d 179 0 FAIL RETRY:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat'), _1048406, utils:fail )
1565d 163 0 CALL:  prolog:$get_exception(_1048406 )
1566d 163 0 FAIL RETRY:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/log.dat' )
1567d 140 0 CALL:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat' )
1568d 162 0 CALL:  prolog:catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048407, utils:fail )
1569d 162 0 CALL:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048407, utils:fail )
1570d 178 0 CALL:  prolog:$execute(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat') )
1571d 178 0 CALL:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), 178, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), user )
1572d 195 0 FAIL RETRY:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), 178, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), user )
1573d 178 0 CALL:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), 178, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), utils )
1574d 206 0 FAIL RETRY:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), 178, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), utils )
1575d 178 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), utils )
1576d 178 0 CALL:  utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat' )
1577d 178 0 CALL:  prolog:$undefp([utils|delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat')], error )
1578d 178 0 CALL:  prolog:yap_flag(unknown, error, fail )
1579d 178 0 CALL:  prolog:$stop_creeping(_1048367 )
1580d 178 0 TRY_OR 
1581d 219 0 CALL:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132487:_132488 )
1582d 228 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_132490,_132491,_132492,_132493), user )
1583d 228 0 FAIL RETRY:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132487:_132488 )
1584d 219 0 CALL:  prolog:expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132487:_132488 )
1585d 219 0 CALL:  prolog:$expand_meta_call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), [], _132487:_132488 )
1586d 219 0 CALL:  prolog:source_module(_132489 )
1587d 219 0 CALL:  prolog:$yap_strip_module(user:utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048347, _132493 )
1588d 219 0 CALL:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048346, _1048348, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat')) )
1589d 243 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048346, _1048348, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat')) )
1590d 243 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048346, _1048348, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat')) )
1591d 243 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048346, _1048348, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat')) )
1592d 219 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132500, _132501 )
1593d 219 0 CALL:  prolog:$expand_goal(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048346, _1048348, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat')) )
1594d 219 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132505, _132506 )
1595d 219 0 CALL:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132511:_132512 )
1596d 253 0 CALL:  prolog:_user_expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132514:_132515 )
1600d 253 0 FAIL RETRY:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132511:_132512 )
1601d 219 0 CALL:  prolog:$import_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132514:_132515 )
1602d 252 0 CALL:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), utils, _132515, _132514 )
1603d 268 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), prolog )
1604d 268 0 FAIL RETRY:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), utils, _132515, _132514 )
1605d 252 0 CALL:  prolog:$undefined(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), utils )
1606d 252 0 CALL:  prolog:$get_undefined_predicates(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), utils, _132515, _132514 )
1607d 275 0 CALL:  prolog:recorded('$import', '$import'(_132517,utils,_132519,delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'),_132521,_132522), _1048290 )
1608d 275 0 CALL:  prolog:$continue_imported(_132514, operating_system_support, _132515, delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat') )
1609d 286 0 CALL:  prolog:$pred_exists(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), operating_system_support )
1610d 275 0 CALL:  prolog:\=(operating_system_support, utils )
1611d 219 0 CALL:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), utils, [], _1048335 )
1612d 251 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132535, _1048314 )
1613d 251 0 CALL:  prolog:functor(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132538, _132539 )
1614d 251 0 CALL:  prolog:$meta_predicate(delete_file, operating_system_support, 1, _1048315 )
1615d 251 0 FAIL RETRY:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), utils, [], _1048335 )
1616d 219 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132535, _132536 )
1617d 219 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132537, _132538 )
1618d 219 0 CALL:  prolog:$end_goal_expansion(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048346, _1048348, utils, user, operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat') )
1619d 219 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), utils, user, operating_system_support, _1048346 )
1620d 219 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), operating_system_support )
1621d 219 0 TRY_OR 
1622d 257 0 CALL:  prolog:==(operating_system_support, utils )
1624d 219 0 CALL:  prolog:$c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048337 )
1625d 250 0 CALL:  prolog:get_value('$c_arith', true )
1626d 219 0 CALL:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048337 )
1627d 261 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132542, _132543 )
1628d 261 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048337 )
1629d 261 0 CALL:  prolog:$compop(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048299, _1048300, _1048302 )
1630d 261 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _1048337 )
1631d 261 0 CALL:  prolog:$yap_strip_module(operating_system_support:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132545, _132546 )
1632d 261 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), utils, user, operating_system_support, _1048348 )
1633d 261 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), operating_system_support )
1634d 261 0 TRY_OR 
1635d 277 0 CALL:  prolog:==(operating_system_support, utils )
1637d 261 0 CALL:  prolog:$yap_strip_module(utils:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), _132487, _132488 )
1638d 261 0 TRY_OR 
1639d 269 0 CALL:  prolog:\==(utils, operating_system_support )
1640d 261 0 CALL:  prolog:\=(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), fail )
1641d 178 0 CALL:  prolog:yap_flag(unknown, _1048366, error )
1642d 178 0 TRY_OR 
1643d 216 0 CALL:  prolog:==(false, true )
1645d 178 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat'), operating_system_support )
1646d 178 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat' )
1647d 178 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat', _1048385 )
1648d 178 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat', off, on, off )
1649d 178 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat', _1048382 )
1650d 178 0 CALL:  operating_system_support:file_property('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat', _1048381, _1048377, _1048378, _1048379, _1048380, off )
1651d 178 0 CALL:  operating_system_support:delete_file(regular, '/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat', off, on, off )
1652d 196 0 FAIL RETRY:  operating_system_support:delete_file(regular, '/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat', off, on, off )
1653d 196 0 FAIL RETRY:  operating_system_support:delete_file(regular, '/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat', off, on, off )
1654d 178 0 CALL:  operating_system_support:unlink_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat', off )
1655d 178 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat', _1048385 )
1656d 178 0 CALL:  operating_system_support:unlink('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat', _1048383 )
1657d 178 0 CALL:  operating_system_support:handle_system_internal(_132553, off, delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat') )
1658d 178 0 TRY_OR 
1659d 192 0 CALL:  prolog:==(178, 178 )
1660d 140 0 CALL:  utils:delete_file_pattern_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output', 'values_*' )
1661d 140 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output', 'values_*', _1048414 )
1662d 140 0 CALL:  os:path_separator(_1048406 )
1663d 178 0 CALL:  prolog:current_prolog_flag(windows, true )
1664d 178 0 FAIL RETRY:  os:path_separator(_1048406 )
1665d 140 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,'values_*'], _1048414 )
1666d 140 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,'values_*'], _1048414 )
1667d 140 0 CALL:  prolog:expand_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*', _1048415 )
1668d 140 0 CALL:  utils:delete_files_silently(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'] )
1669d 140 0 CALL:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*' )
1670d 168 0 CALL:  prolog:catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048401, utils:fail )
1671d 168 0 CALL:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048401, utils:fail )
1672d 184 0 CALL:  prolog:$execute(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*') )
1673d 184 0 CALL:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), 184, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), user )
1674d 201 0 FAIL RETRY:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), 184, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), user )
1675d 184 0 CALL:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), 184, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), utils )
1676d 212 0 FAIL RETRY:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), 184, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), utils )
1677d 184 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), utils )
1678d 184 0 CALL:  utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*' )
1679d 184 0 CALL:  prolog:$undefp([utils|delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*')], error )
1680d 184 0 CALL:  prolog:yap_flag(unknown, error, fail )
1681d 184 0 CALL:  prolog:$stop_creeping(_1048361 )
1682d 184 0 TRY_OR 
1683d 225 0 CALL:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132580:_132581 )
1684d 234 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_132583,_132584,_132585,_132586), user )
1685d 234 0 FAIL RETRY:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132580:_132581 )
1686d 225 0 CALL:  prolog:expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132580:_132581 )
1687d 225 0 CALL:  prolog:$expand_meta_call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), [], _132580:_132581 )
1688d 225 0 CALL:  prolog:source_module(_132582 )
1689d 225 0 CALL:  prolog:$yap_strip_module(user:utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048341, _132586 )
1690d 225 0 CALL:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*')) )
1691d 249 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*')) )
1692d 249 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*')) )
1693d 249 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*')) )
1694d 225 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132593, _132594 )
1695d 225 0 CALL:  prolog:$expand_goal(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*')) )
1696d 225 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132598, _132599 )
1697d 225 0 CALL:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132604:_132605 )
1698d 259 0 CALL:  prolog:_user_expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132607:_132608 )
1702d 259 0 FAIL RETRY:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132604:_132605 )
1703d 225 0 CALL:  prolog:$import_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132607:_132608 )
1704d 258 0 CALL:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), utils, _132608, _132607 )
1705d 274 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), prolog )
1706d 274 0 FAIL RETRY:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), utils, _132608, _132607 )
1707d 258 0 CALL:  prolog:$undefined(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), utils )
1708d 258 0 CALL:  prolog:$get_undefined_predicates(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), utils, _132608, _132607 )
1709d 281 0 CALL:  prolog:recorded('$import', '$import'(_132610,utils,_132612,delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'),_132614,_132615), _1048284 )
1710d 281 0 CALL:  prolog:$continue_imported(_132607, operating_system_support, _132608, delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*') )
1711d 292 0 CALL:  prolog:$pred_exists(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), operating_system_support )
1712d 281 0 CALL:  prolog:\=(operating_system_support, utils )
1713d 225 0 CALL:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), utils, [], _1048329 )
1714d 257 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132628, _1048308 )
1715d 257 0 CALL:  prolog:functor(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132631, _132632 )
1716d 257 0 CALL:  prolog:$meta_predicate(delete_file, operating_system_support, 1, _1048309 )
1717d 257 0 FAIL RETRY:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), utils, [], _1048329 )
1718d 225 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132628, _132629 )
1719d 225 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132630, _132631 )
1720d 225 0 CALL:  prolog:$end_goal_expansion(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048340, _1048342, utils, user, operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*') )
1721d 225 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), utils, user, operating_system_support, _1048340 )
1722d 225 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), operating_system_support )
1723d 225 0 TRY_OR 
1724d 263 0 CALL:  prolog:==(operating_system_support, utils )
1726d 225 0 CALL:  prolog:$c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048331 )
1727d 256 0 CALL:  prolog:get_value('$c_arith', true )
1728d 225 0 CALL:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048331 )
1729d 267 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132635, _132636 )
1730d 267 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048331 )
1731d 267 0 CALL:  prolog:$compop(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048293, _1048294, _1048296 )
1732d 267 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048331 )
1733d 267 0 CALL:  prolog:$yap_strip_module(operating_system_support:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132638, _132639 )
1734d 267 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), utils, user, operating_system_support, _1048342 )
1735d 267 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), operating_system_support )
1736d 267 0 TRY_OR 
1737d 283 0 CALL:  prolog:==(operating_system_support, utils )
1739d 267 0 CALL:  prolog:$yap_strip_module(utils:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _132580, _132581 )
1740d 267 0 TRY_OR 
1741d 275 0 CALL:  prolog:\==(utils, operating_system_support )
1742d 267 0 CALL:  prolog:\=(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), fail )
1743d 184 0 CALL:  prolog:yap_flag(unknown, _1048360, error )
1744d 184 0 TRY_OR 
1745d 222 0 CALL:  prolog:==(false, true )
1747d 184 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), operating_system_support )
1748d 184 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*' )
1749d 184 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*', _1048379 )
1750d 184 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*', off, on, off )
1751d 184 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*', _1048376 )
1752d 184 0 CALL:  operating_system_support:file_property('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*', _1048375, _1048371, _1048372, _1048373, _1048374, off )
1753d 184 0 FAIL RETRY:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*'), _1048401, utils:fail )
1754d 168 0 CALL:  prolog:$get_exception(_1048401 )
1755d 168 0 FAIL RETRY:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/values_*' )
1756d 140 0 CALL:  utils:delete_files_silently([] )
1757d 140 0 CALL:  utils:delete_file_pattern_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output', 'factprobs_*' )
1758d 140 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output', 'factprobs_*', _1048414 )
1759d 140 0 CALL:  os:path_separator(_1048406 )
1760d 178 0 CALL:  prolog:current_prolog_flag(windows, true )
1761d 178 0 FAIL RETRY:  os:path_separator(_1048406 )
1762d 140 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,'factprobs_*'], _1048414 )
1763d 140 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,'factprobs_*'], _1048414 )
1764d 140 0 CALL:  prolog:expand_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*', _1048415 )
1765d 140 0 CALL:  utils:delete_files_silently(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'] )
1766d 140 0 CALL:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*' )
1767d 168 0 CALL:  prolog:catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048401, utils:fail )
1768d 168 0 CALL:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048401, utils:fail )
1769d 184 0 CALL:  prolog:$execute(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*') )
1770d 184 0 CALL:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), 184, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), user )
1771d 201 0 FAIL RETRY:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), 184, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), user )
1772d 184 0 CALL:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), 184, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), utils )
1773d 212 0 FAIL RETRY:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), 184, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), utils )
1774d 184 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), utils )
1775d 184 0 CALL:  utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*' )
1776d 184 0 CALL:  prolog:$undefp([utils|delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*')], error )
1777d 184 0 CALL:  prolog:yap_flag(unknown, error, fail )
1778d 184 0 CALL:  prolog:$stop_creeping(_1048361 )
1779d 184 0 TRY_OR 
1780d 225 0 CALL:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132588:_132589 )
1781d 234 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_132591,_132592,_132593,_132594), user )
1782d 234 0 FAIL RETRY:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132588:_132589 )
1783d 225 0 CALL:  prolog:expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132588:_132589 )
1784d 225 0 CALL:  prolog:$expand_meta_call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), [], _132588:_132589 )
1785d 225 0 CALL:  prolog:source_module(_132590 )
1786d 225 0 CALL:  prolog:$yap_strip_module(user:utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048341, _132594 )
1787d 225 0 CALL:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*')) )
1788d 249 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*')) )
1789d 249 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*')) )
1790d 249 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*')) )
1791d 225 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132601, _132602 )
1792d 225 0 CALL:  prolog:$expand_goal(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*')) )
1793d 225 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132606, _132607 )
1794d 225 0 CALL:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132612:_132613 )
1795d 259 0 CALL:  prolog:_user_expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132615:_132616 )
1799d 259 0 FAIL RETRY:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132612:_132613 )
1800d 225 0 CALL:  prolog:$import_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132615:_132616 )
1801d 258 0 CALL:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), utils, _132616, _132615 )
1802d 274 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), prolog )
1803d 274 0 FAIL RETRY:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), utils, _132616, _132615 )
1804d 258 0 CALL:  prolog:$undefined(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), utils )
1805d 258 0 CALL:  prolog:$get_undefined_predicates(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), utils, _132616, _132615 )
1806d 281 0 CALL:  prolog:recorded('$import', '$import'(_132618,utils,_132620,delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'),_132622,_132623), _1048284 )
1807d 281 0 CALL:  prolog:$continue_imported(_132615, operating_system_support, _132616, delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*') )
1808d 292 0 CALL:  prolog:$pred_exists(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), operating_system_support )
1809d 281 0 CALL:  prolog:\=(operating_system_support, utils )
1810d 225 0 CALL:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), utils, [], _1048329 )
1811d 257 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132636, _1048308 )
1812d 257 0 CALL:  prolog:functor(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132639, _132640 )
1813d 257 0 CALL:  prolog:$meta_predicate(delete_file, operating_system_support, 1, _1048309 )
1814d 257 0 FAIL RETRY:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), utils, [], _1048329 )
1815d 225 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132636, _132637 )
1816d 225 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132638, _132639 )
1817d 225 0 CALL:  prolog:$end_goal_expansion(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048340, _1048342, utils, user, operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*') )
1818d 225 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), utils, user, operating_system_support, _1048340 )
1819d 225 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), operating_system_support )
1820d 225 0 TRY_OR 
1821d 263 0 CALL:  prolog:==(operating_system_support, utils )
1823d 225 0 CALL:  prolog:$c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048331 )
1824d 256 0 CALL:  prolog:get_value('$c_arith', true )
1825d 225 0 CALL:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048331 )
1826d 267 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132643, _132644 )
1827d 267 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048331 )
1828d 267 0 CALL:  prolog:$compop(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048293, _1048294, _1048296 )
1829d 267 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048331 )
1830d 267 0 CALL:  prolog:$yap_strip_module(operating_system_support:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132646, _132647 )
1831d 267 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), utils, user, operating_system_support, _1048342 )
1832d 267 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), operating_system_support )
1833d 267 0 TRY_OR 
1834d 283 0 CALL:  prolog:==(operating_system_support, utils )
1836d 267 0 CALL:  prolog:$yap_strip_module(utils:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _132588, _132589 )
1837d 267 0 TRY_OR 
1838d 275 0 CALL:  prolog:\==(utils, operating_system_support )
1839d 267 0 CALL:  prolog:\=(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), fail )
1840d 184 0 CALL:  prolog:yap_flag(unknown, _1048360, error )
1841d 184 0 TRY_OR 
1842d 222 0 CALL:  prolog:==(false, true )
1844d 184 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), operating_system_support )
1845d 184 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*' )
1846d 184 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*', _1048379 )
1847d 184 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*', off, on, off )
1848d 184 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*', _1048376 )
1849d 184 0 CALL:  operating_system_support:file_property('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*', _1048375, _1048371, _1048372, _1048373, _1048374, off )
1850d 184 0 FAIL RETRY:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*'), _1048401, utils:fail )
1851d 168 0 CALL:  prolog:$get_exception(_1048401 )
1852d 168 0 FAIL RETRY:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/factprobs_*' )
1853d 140 0 CALL:  utils:delete_files_silently([] )
1854d 140 0 CALL:  utils:delete_file_pattern_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output', 'input_*' )
1855d 140 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output', 'input_*', _1048414 )
1856d 140 0 CALL:  os:path_separator(_1048406 )
1857d 178 0 CALL:  prolog:current_prolog_flag(windows, true )
1858d 178 0 FAIL RETRY:  os:path_separator(_1048406 )
1859d 140 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,'input_*'], _1048414 )
1860d 140 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,'input_*'], _1048414 )
1861d 140 0 CALL:  prolog:expand_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*', _1048415 )
1862d 140 0 CALL:  utils:delete_files_silently(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'] )
1863d 140 0 CALL:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*' )
1864d 168 0 CALL:  prolog:catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048401, utils:fail )
1865d 168 0 CALL:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048401, utils:fail )
1866d 184 0 CALL:  prolog:$execute(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*') )
1867d 184 0 CALL:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), 184, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), user )
1868d 201 0 FAIL RETRY:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), 184, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), user )
1869d 184 0 CALL:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), 184, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), utils )
1870d 212 0 FAIL RETRY:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), 184, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), utils )
1871d 184 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), utils )
1872d 184 0 CALL:  utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*' )
1873d 184 0 CALL:  prolog:$undefp([utils|delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*')], error )
1874d 184 0 CALL:  prolog:yap_flag(unknown, error, fail )
1875d 184 0 CALL:  prolog:$stop_creeping(_1048361 )
1876d 184 0 TRY_OR 
1877d 225 0 CALL:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132596:_132597 )
1878d 234 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_132599,_132600,_132601,_132602), user )
1879d 234 0 FAIL RETRY:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132596:_132597 )
1880d 225 0 CALL:  prolog:expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132596:_132597 )
1881d 225 0 CALL:  prolog:$expand_meta_call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), [], _132596:_132597 )
1882d 225 0 CALL:  prolog:source_module(_132598 )
1883d 225 0 CALL:  prolog:$yap_strip_module(user:utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048341, _132602 )
1884d 225 0 CALL:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*')) )
1885d 249 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*')) )
1886d 249 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*')) )
1887d 249 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*')) )
1888d 225 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132609, _132610 )
1889d 225 0 CALL:  prolog:$expand_goal(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048340, _1048342, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*')) )
1890d 225 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132614, _132615 )
1891d 225 0 CALL:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132620:_132621 )
1892d 259 0 CALL:  prolog:_user_expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132623:_132624 )
1896d 259 0 FAIL RETRY:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132620:_132621 )
1897d 225 0 CALL:  prolog:$import_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132623:_132624 )
1898d 258 0 CALL:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), utils, _132624, _132623 )
1899d 274 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), prolog )
1900d 274 0 FAIL RETRY:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), utils, _132624, _132623 )
1901d 258 0 CALL:  prolog:$undefined(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), utils )
1902d 258 0 CALL:  prolog:$get_undefined_predicates(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), utils, _132624, _132623 )
1903d 281 0 CALL:  prolog:recorded('$import', '$import'(_132626,utils,_132628,delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'),_132630,_132631), _1048284 )
1904d 281 0 CALL:  prolog:$continue_imported(_132623, operating_system_support, _132624, delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*') )
1905d 292 0 CALL:  prolog:$pred_exists(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), operating_system_support )
1906d 281 0 CALL:  prolog:\=(operating_system_support, utils )
1907d 225 0 CALL:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), utils, [], _1048329 )
1908d 257 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132644, _1048308 )
1909d 257 0 CALL:  prolog:functor(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132647, _132648 )
1910d 257 0 CALL:  prolog:$meta_predicate(delete_file, operating_system_support, 1, _1048309 )
1911d 257 0 FAIL RETRY:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), utils, [], _1048329 )
1912d 225 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132644, _132645 )
1913d 225 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132646, _132647 )
1914d 225 0 CALL:  prolog:$end_goal_expansion(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048340, _1048342, utils, user, operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*') )
1915d 225 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), utils, user, operating_system_support, _1048340 )
1916d 225 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), operating_system_support )
1917d 225 0 TRY_OR 
1918d 263 0 CALL:  prolog:==(operating_system_support, utils )
1920d 225 0 CALL:  prolog:$c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048331 )
1921d 256 0 CALL:  prolog:get_value('$c_arith', true )
1922d 225 0 CALL:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048331 )
1923d 267 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132651, _132652 )
1924d 267 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048331 )
1925d 267 0 CALL:  prolog:$compop(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048293, _1048294, _1048296 )
1926d 267 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048331 )
1927d 267 0 CALL:  prolog:$yap_strip_module(operating_system_support:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132654, _132655 )
1928d 267 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), utils, user, operating_system_support, _1048342 )
1929d 267 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), operating_system_support )
1930d 267 0 TRY_OR 
1931d 283 0 CALL:  prolog:==(operating_system_support, utils )
1933d 267 0 CALL:  prolog:$yap_strip_module(utils:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _132596, _132597 )
1934d 267 0 TRY_OR 
1935d 275 0 CALL:  prolog:\==(utils, operating_system_support )
1936d 267 0 CALL:  prolog:\=(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), fail )
1937d 184 0 CALL:  prolog:yap_flag(unknown, _1048360, error )
1938d 184 0 TRY_OR 
1939d 222 0 CALL:  prolog:==(false, true )
1941d 184 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), operating_system_support )
1942d 184 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*' )
1943d 184 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*', _1048379 )
1944d 184 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*', off, on, off )
1945d 184 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*', _1048376 )
1946d 184 0 CALL:  operating_system_support:file_property('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*', _1048375, _1048371, _1048372, _1048373, _1048374, off )
1947d 184 0 FAIL RETRY:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*'), _1048401, utils:fail )
1948d 168 0 CALL:  prolog:$get_exception(_1048401 )
1949d 168 0 FAIL RETRY:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/input_*' )
1950d 140 0 CALL:  utils:delete_files_silently([] )
1951d 140 0 CALL:  utils:delete_file_pattern_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output', 'predictions_*' )
1952d 140 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output', 'predictions_*', _1048428 )
1953d 140 0 CALL:  os:path_separator(_1048420 )
1954d 164 0 CALL:  prolog:current_prolog_flag(windows, true )
1955d 164 0 FAIL RETRY:  os:path_separator(_1048420 )
1956d 140 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,'predictions_*'], _1048428 )
1957d 140 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,'predictions_*'], _1048428 )
1958d 140 0 CALL:  prolog:expand_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*', _1048429 )
1959d 140 0 CALL:  utils:delete_files_silently(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'] )
1960d 140 0 CALL:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*' )
1961d 154 0 CALL:  prolog:catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048415, utils:fail )
1962d 154 0 CALL:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048415, utils:fail )
1963d 170 0 CALL:  prolog:$execute(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*') )
1964d 170 0 CALL:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), 170, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), user )
1965d 187 0 FAIL RETRY:  prolog:$call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), 170, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), user )
1966d 170 0 CALL:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), 170, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), utils )
1967d 198 0 FAIL RETRY:  prolog:$call(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), 170, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), utils )
1968d 170 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), utils )
1969d 170 0 CALL:  utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*' )
1970d 170 0 CALL:  prolog:$undefp([utils|delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*')], error )
1971d 170 0 CALL:  prolog:yap_flag(unknown, error, fail )
1972d 170 0 CALL:  prolog:$stop_creeping(_1048375 )
1973d 170 0 TRY_OR 
1974d 211 0 CALL:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132604:_132605 )
1975d 220 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_132607,_132608,_132609,_132610), user )
1976d 220 0 FAIL RETRY:  prolog:$undefp_search(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132604:_132605 )
1977d 211 0 CALL:  prolog:expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132604:_132605 )
1978d 211 0 CALL:  prolog:$expand_meta_call(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), [], _132604:_132605 )
1979d 211 0 CALL:  prolog:source_module(_132606 )
1980d 211 0 CALL:  prolog:$yap_strip_module(user:utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048355, _132610 )
1981d 211 0 CALL:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*')) )
1982d 235 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*')) )
1983d 235 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*')) )
1984d 235 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*')) )
1985d 211 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132617, _132618 )
1986d 211 0 CALL:  prolog:$expand_goal(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048354, _1048356, utils, user, utils, []- (utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*')) )
1987d 211 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132622, _132623 )
1988d 211 0 CALL:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132628:_132629 )
1989d 245 0 CALL:  prolog:_user_expand_goal(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132631:_132632 )
1993d 245 0 FAIL RETRY:  prolog:$user_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132628:_132629 )
1994d 211 0 CALL:  prolog:$import_expansion(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132631:_132632 )
1995d 244 0 CALL:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), utils, _132632, _132631 )
1996d 260 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), prolog )
1997d 260 0 FAIL RETRY:  prolog:$imported_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), utils, _132632, _132631 )
1998d 244 0 CALL:  prolog:$undefined(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), utils )
1999d 244 0 CALL:  prolog:$get_undefined_predicates(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), utils, _132632, _132631 )
2000d 267 0 CALL:  prolog:recorded('$import', '$import'(_132634,utils,_132636,delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'),_132638,_132639), _1048298 )
2001d 267 0 CALL:  prolog:$continue_imported(_132631, operating_system_support, _132632, delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*') )
2002d 278 0 CALL:  prolog:$pred_exists(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), operating_system_support )
2003d 267 0 CALL:  prolog:\=(operating_system_support, utils )
2004d 211 0 CALL:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), utils, [], _1048343 )
2005d 243 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132652, _1048322 )
2006d 243 0 CALL:  prolog:functor(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132655, _132656 )
2007d 243 0 CALL:  prolog:$meta_predicate(delete_file, operating_system_support, 1, _1048323 )
2008d 243 0 FAIL RETRY:  prolog:$meta_expansion(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), utils, [], _1048343 )
2009d 211 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132652, _132653 )
2010d 211 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132654, _132655 )
2011d 211 0 CALL:  prolog:$end_goal_expansion(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048354, _1048356, utils, user, operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*') )
2012d 211 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), utils, user, operating_system_support, _1048354 )
2013d 211 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), operating_system_support )
2014d 211 0 TRY_OR 
2015d 249 0 CALL:  prolog:==(operating_system_support, utils )
2017d 211 0 CALL:  prolog:$c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048345 )
2018d 242 0 CALL:  prolog:get_value('$c_arith', true )
2019d 211 0 CALL:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048345 )
2020d 253 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132659, _132660 )
2021d 253 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048345 )
2022d 253 0 CALL:  prolog:$compop(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048307, _1048308, _1048310 )
2023d 253 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), operating_system_support, utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048345 )
2024d 253 0 CALL:  prolog:$yap_strip_module(operating_system_support:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132662, _132663 )
2025d 253 0 CALL:  prolog:$match_mod(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), utils, user, operating_system_support, _1048356 )
2026d 253 0 CALL:  prolog:$is_system_predicate(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), operating_system_support )
2027d 253 0 TRY_OR 
2028d 269 0 CALL:  prolog:==(operating_system_support, utils )
2030d 253 0 CALL:  prolog:$yap_strip_module(utils:operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _132604, _132605 )
2031d 253 0 TRY_OR 
2032d 261 0 CALL:  prolog:\==(utils, operating_system_support )
2033d 253 0 CALL:  prolog:\=(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), fail )
2034d 170 0 CALL:  prolog:yap_flag(unknown, _1048374, error )
2035d 170 0 TRY_OR 
2036d 208 0 CALL:  prolog:==(false, true )
2038d 170 0 CALL:  prolog:$execute0(delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), operating_system_support )
2039d 170 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*' )
2040d 170 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*', _1048393 )
2041d 170 0 CALL:  operating_system_support:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*', off, on, off )
2042d 170 0 CALL:  prolog:true_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*', _1048390 )
2043d 170 0 CALL:  operating_system_support:file_property('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*', _1048389, _1048385, _1048386, _1048387, _1048388, off )
2044d 170 0 FAIL RETRY:  prolog:$catch(utils:delete_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*'), _1048415, utils:fail )
2045d 154 0 CALL:  prolog:$get_exception(_1048415 )
2046d 154 0 FAIL RETRY:  utils:delete_file_silently('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/predictions_*' )
2047d 140 0 CALL:  utils:delete_files_silently([] )
2048d 140 0 CALL:  logger:logger_write_header
2049d 140 0 CALL:  prolog:bb_get(logger:logger_filename, _1048426 )
2050d 140 0 CALL:  prolog:bb_get(logger:logger_variables, _1048427 )
2051d 140 0 CALL:  prolog:open('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/out.dat', append, _1048429 )
2052d 140 0 CALL:  prolog:format('$stream'(3), '#####################################################################~n', logger:[] )
2053d 140 0 CALL:  prolog:format('$stream'(3), '# ~w~6+~w~7+~w~n', logger:['Pos','Type','Name'] )
2054d 140 0 CALL:  prolog:format('$stream'(3), '#####################################################################~n', logger:[] )
2055d 140 0 CALL:  logger:logger_write_header_intern([(iteration,int),(duration,time),(llh_training_set,float),(llh_test_set,float),(bdd_evaluation,time),(ground_truth_diff,float),(ground_truth_mindiff,float),(ground_truth_maxdiff,float),(train_bdd_script_generation,time),(train_bdd_script_generation_grounding,time),(train_bdd_script_generation_completion,time),(train_bdd_script_generation_propagation,time),(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 1, '$stream'(3) )
+s 0x5602af22e490
 @0x7efdd88a3118 0
+s 0x5602af234570
 @0x7efdd88a3118 0
- 0x5602af234570
 @0x7efdd88a3118 140
+s 0x5602af20ed00
 @0x7efdd88a3118 0
+s 0x5602af231200
 @0x7efdd88a3118 0
- 0x5602af20ed00
 @0x7efdd88a3118 140
- 0x5602af22e490
 @0x7efdd88a3118 140
2056d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[1,int,iteration] )
2057d 140 0 CALL:  logger:logger_write_header_intern([(duration,time),(llh_training_set,float),(llh_test_set,float),(bdd_evaluation,time),(ground_truth_diff,float),(ground_truth_mindiff,float),(ground_truth_maxdiff,float),(train_bdd_script_generation,time),(train_bdd_script_generation_grounding,time),(train_bdd_script_generation_completion,time),(train_bdd_script_generation_propagation,time),(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 2, '$stream'(3) )
2058d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[2,time,duration] )
2059d 140 0 CALL:  logger:logger_write_header_intern([(llh_training_set,float),(llh_test_set,float),(bdd_evaluation,time),(ground_truth_diff,float),(ground_truth_mindiff,float),(ground_truth_maxdiff,float),(train_bdd_script_generation,time),(train_bdd_script_generation_grounding,time),(train_bdd_script_generation_completion,time),(train_bdd_script_generation_propagation,time),(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 3, '$stream'(3) )
2060d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[3,float,llh_training_set] )
2061d 140 0 CALL:  logger:logger_write_header_intern([(llh_test_set,float),(bdd_evaluation,time),(ground_truth_diff,float),(ground_truth_mindiff,float),(ground_truth_maxdiff,float),(train_bdd_script_generation,time),(train_bdd_script_generation_grounding,time),(train_bdd_script_generation_completion,time),(train_bdd_script_generation_propagation,time),(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 4, '$stream'(3) )
2062d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[4,float,llh_test_set] )
2063d 140 0 CALL:  logger:logger_write_header_intern([(bdd_evaluation,time),(ground_truth_diff,float),(ground_truth_mindiff,float),(ground_truth_maxdiff,float),(train_bdd_script_generation,time),(train_bdd_script_generation_grounding,time),(train_bdd_script_generation_completion,time),(train_bdd_script_generation_propagation,time),(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 5, '$stream'(3) )
2064d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[5,time,bdd_evaluation] )
2065d 140 0 CALL:  logger:logger_write_header_intern([(ground_truth_diff,float),(ground_truth_mindiff,float),(ground_truth_maxdiff,float),(train_bdd_script_generation,time),(train_bdd_script_generation_grounding,time),(train_bdd_script_generation_completion,time),(train_bdd_script_generation_propagation,time),(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 6, '$stream'(3) )
2066d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[6,float,ground_truth_diff] )
2067d 140 0 CALL:  logger:logger_write_header_intern([(ground_truth_mindiff,float),(ground_truth_maxdiff,float),(train_bdd_script_generation,time),(train_bdd_script_generation_grounding,time),(train_bdd_script_generation_completion,time),(train_bdd_script_generation_propagation,time),(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 7, '$stream'(3) )
2068d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[7,float,ground_truth_mindiff] )
2069d 140 0 CALL:  logger:logger_write_header_intern([(ground_truth_maxdiff,float),(train_bdd_script_generation,time),(train_bdd_script_generation_grounding,time),(train_bdd_script_generation_completion,time),(train_bdd_script_generation_propagation,time),(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 8, '$stream'(3) )
2070d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[8,float,ground_truth_maxdiff] )
2071d 140 0 CALL:  logger:logger_write_header_intern([(train_bdd_script_generation,time),(train_bdd_script_generation_grounding,time),(train_bdd_script_generation_completion,time),(train_bdd_script_generation_propagation,time),(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 9, '$stream'(3) )
2072d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[9,time,train_bdd_script_generation] )
2073d 140 0 CALL:  logger:logger_write_header_intern([(train_bdd_script_generation_grounding,time),(train_bdd_script_generation_completion,time),(train_bdd_script_generation_propagation,time),(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 10, '$stream'(3) )
2074d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[10,time,train_bdd_script_generation_grounding] )
2075d 140 0 CALL:  logger:logger_write_header_intern([(train_bdd_script_generation_completion,time),(train_bdd_script_generation_propagation,time),(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 11, '$stream'(3) )
2076d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[11,time,train_bdd_script_generation_completion] )
2077d 140 0 CALL:  logger:logger_write_header_intern([(train_bdd_script_generation_propagation,time),(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 12, '$stream'(3) )
2078d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[12,time,train_bdd_script_generation_propagation] )
2079d 140 0 CALL:  logger:logger_write_header_intern([(train_bdd_script_generation_splitting,time),(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 13, '$stream'(3) )
2080d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[13,time,train_bdd_script_generation_splitting] )
2081d 140 0 CALL:  logger:logger_write_header_intern([(train_bdd_script_generation_active_ground_atoms,int),(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 14, '$stream'(3) )
2082d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[14,int,train_bdd_script_generation_active_ground_atoms] )
2083d 140 0 CALL:  logger:logger_write_header_intern([(train_bdd_script_generation_propagated_ground_atoms,int),(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 15, '$stream'(3) )
2084d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[15,int,train_bdd_script_generation_propagated_ground_atoms] )
2085d 140 0 CALL:  logger:logger_write_header_intern([(test_bdd_script_generation,time),(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 16, '$stream'(3) )
2086d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[16,time,test_bdd_script_generation] )
2087d 140 0 CALL:  logger:logger_write_header_intern([(test_bdd_script_generation_grounding,time),(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 17, '$stream'(3) )
2088d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[17,time,test_bdd_script_generation_grounding] )
2089d 140 0 CALL:  logger:logger_write_header_intern([(test_bdd_script_generation_completion,time),(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 18, '$stream'(3) )
2090d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[18,time,test_bdd_script_generation_completion] )
2091d 140 0 CALL:  logger:logger_write_header_intern([(test_bdd_script_generation_propagation,time),(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 19, '$stream'(3) )
2092d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[19,time,test_bdd_script_generation_propagation] )
2093d 140 0 CALL:  logger:logger_write_header_intern([(test_bdd_script_generation_splitting,time),(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 20, '$stream'(3) )
2094d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[20,time,test_bdd_script_generation_splitting] )
2095d 140 0 CALL:  logger:logger_write_header_intern([(test_bdd_script_generation_active_ground_atoms,int),(test_bdd_script_generation_propagated_ground_atoms,int)], 21, '$stream'(3) )
2096d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[21,int,test_bdd_script_generation_active_ground_atoms] )
2097d 140 0 CALL:  logger:logger_write_header_intern([(test_bdd_script_generation_propagated_ground_atoms,int)], 22, '$stream'(3) )
2098d 140 0 CALL:  prolog:format('$stream'(3), '# ~q~6+~q~7+~q~n', logger:[22,int,test_bdd_script_generation_propagated_ground_atoms] )
2099d 140 0 CALL:  logger:logger_write_header_intern([], 23, '$stream'(3) )
2100d 140 0 CALL:  prolog:format('$stream'(3), '#####################################################################~n', logger:[] )
2101d 140 0 CALL:  prolog:close('$stream'(3) )
2102d 140 0 CALL:  print_learning:format_learning(1, 'Initializing everything~n', [] )
+s 0x5602af23aaf0
 @0x7efdd88a3118 0
+s 0x5602af23a8d0
 @0x7efdd88a3118 0
- 0x5602af23aaf0
 @0x7efdd88a3118 140
2103d 150 0 CALL:  flags:problog_flag(verbosity_learning, _1048416 )
2104d 150 0 CALL:  gflags:flag_get(verbosity_learning, _1048416 )
2105d 150 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_132877), _132878 )
2106d 150 0 CALL:  prolog:>=(5, 1 )
2107d 140 0 CALL:  prolog:format('Initializing everything~n', print_learning:[] )
2108d 140 0 CALL:  prolog:flush_output(user )
Initializing everything
2109d 140 0 TRY_OR 
2110d 148 0 CALL:  prolog:current_predicate(user:test_example/1 )
2111d 148 0 CALL:  prolog:$yap_strip_module(user:test_example/1, _1048421, _1048420 )
2112d 148 0 CALL:  prolog:must_bind_to_type(predicate_indicator, test_example/1 )
2113d 148 0 TRY_OR 
2114d 171 0 CALL:  error:may_bind_to_type(predicate_indicator, test_example/1 )
2115d 180 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, test_example/1 )
2116d 171 0 TRY_OR 
2118d 171 0 CALL:  error:may_bind_to_type(atom, test_example )
2119d 188 0 FAIL RETRY:  error:may_bind_to_type(atom, test_example )
2120d 171 0 CALL:  error:may_bind_to_type(integer, 1 )
2121d 180 0 FAIL RETRY:  error:may_bind_to_type(integer, 1 )
2122d 148 0 CALL:  prolog:$c_i_predicate(test_example/1, user )
2123d 148 0 TRY_OR 
2124d 165 0 CALL:  prolog:ground(test_example/1 )
2125d 148 0 CALL:  prolog:functor(_132888, test_example, 1 )
2126d 148 0 CALL:  prolog:current_predicate(test_example, user:test_example(_132889) )
2127d 148 0 CALL:  prolog:$yap_strip_module(user:test_example(_132889), _1048417, _1048416 )
2128d 148 0 CALL:  prolog:functor(test_example(_132889), test_example, _1048415 )
2129d 148 0 TRY_OR 
2130d 167 0 CALL:  prolog:$current_predicate(test_example, user, test_example(_132889), user )
2131d 140 0 CALL:  utils:succeeds_n_times(user:test_example(_132897), _1048457 )
2132d 140 0 TRY_OR 
2133d 155 0 CALL:  prolog:call(user:test_example(_132897) )
2134d 155 0 CALL:  prolog:$execute(user:test_example(_132897) )
2135d 155 0 CALL:  prolog:$call(user:test_example(_132897), 155, user:test_example(_132897), user )
2136d 166 0 FAIL RETRY:  prolog:$call(user:test_example(_132897), 155, user:test_example(_132897), user )
2137d 155 0 CALL:  prolog:$call(test_example(_132897), 155, user:test_example(_132897), user )
2138d 177 0 FAIL RETRY:  prolog:$call(test_example(_132897), 155, user:test_example(_132897), user )
2139d 155 0 CALL:  prolog:$execute0(test_example(_132897), user )
2140d 155 0 CALL:  user:test_example(_132897 )
2142d 140 0 CALL:  prolog:arg(1, counter(0), _132902 )
2143d 140 0 CALL:  print_learning:format_learning(3, '~q test example(s)~n', [0] )
2144d 150 0 CALL:  flags:problog_flag(verbosity_learning, _1048416 )
2145d 150 0 CALL:  gflags:flag_get(verbosity_learning, _1048416 )
2146d 150 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_132904), _132905 )
2147d 150 0 CALL:  prolog:>=(5, 3 )
2148d 140 0 CALL:  prolog:format('~q test example(s)~n', print_learning:[0] )
2149d 140 0 CALL:  prolog:flush_output(user )
0 test example(s)
2150d 140 0 CALL:  utils:succeeds_n_times(user:example(_132914), _1048458 )
2151d 140 0 TRY_OR 
2152d 155 0 CALL:  prolog:call(user:example(_132914) )
2153d 155 0 CALL:  prolog:$execute(user:example(_132914) )
2154d 155 0 CALL:  user:example(_132914 )
2155d 163 0 CALL:  prolog:arg(1, counter(0), _132919 )
2156d 163 0 CALL:  prolog:nb_setarg(1, counter(0), 1 )
2157d 163 0 FAIL RETRY:  user:example(_132914 )
2158d 155 0 CALL:  prolog:arg(1, counter(1), _132919 )
2159d 155 0 CALL:  prolog:nb_setarg(1, counter(1), 2 )
2161d 140 0 CALL:  prolog:arg(1, counter(2), _132919 )
2162d 140 0 CALL:  print_learning:format_learning(3, '~q training example(s)~n', [2] )
2163d 150 0 CALL:  flags:problog_flag(verbosity_learning, _1048416 )
2164d 150 0 CALL:  gflags:flag_get(verbosity_learning, _1048416 )
2165d 150 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_132921), _132922 )
2166d 150 0 CALL:  prolog:>=(5, 3 )
2167d 140 0 CALL:  prolog:format('~q training example(s)~n', print_learning:[2] )
2168d 140 0 CALL:  prolog:flush_output(user )
2 training example(s)
2169d 140 0 CALL:  prolog:$current_choice_point(_1048459 )
2170d 140 0 CALL:  problog_lfi:initialize_fact_probabilities
2171d 140 0 CALL:  problog:probclause_id(_1048425 )
2172d 140 0 CALL:  prolog:nb_getval(probclause_counter, _1048425 )
2173d 140 0 CALL:  prolog:__NB_getval__(probclause_counter, _1048425, _1048410 )
2174d 140 0 CALL:  prolog:nb_setval(probclause_counter, 4 )
2175d 140 0 CALL:  prolog:static_array(factprob, 3, float )
+s 0x5602af23a890
 @0x7efdd88a3158 0
+s 0x5602af23c860
 @0x7efdd88a3158 0
2176d 140 0 TRY_OR 
2177d 157 0 CALL:  problog:get_fact_probability(_1048426, _1048427 )
+s 0x5602af2104f0
 @0x7efdd88a3158 0
+s 0x5602af230bd0
 @0x7efdd88a3158 0
- 0x5602af2104f0
 @0x7efdd88a3158 157
2178d 166 0 CALL:  prolog:ground(_1048426 )
2179d 166 0 FAIL RETRY:  problog:get_fact_probability(_1048426, _1048427 )
2180d 166 0 CALL:  prolog:ground(_1048426 )
2181d 166 0 FAIL RETRY:  problog:get_fact_probability(_1048426, _1048427 )
2182d 157 0 TRY_OR 
2183d 178 0 CALL:  prolog:ground(_1048426 )
2185d 157 0 CALL:  problog:get_internal_fact(_1048426, _1048409, _132927, _1048408 )
2186d 157 0 CALL:  problog:problog_predicate(_1048397, _1048398 )
2187d 188 0 CALL:  prolog:atomic_concat([problog_,burglary], _132927 )
2188d 188 0 CALL:  prolog:functor(_1048409, problog_burglary, 2 )
2189d 188 0 CALL:  prolog:arg(1, problog_burglary(_132933,_132934), _132937 )
2190d 188 0 CALL:  prolog:call(problog:problog_burglary(_132933,_132934) )
2191d 188 0 CALL:  prolog:$execute(problog:problog_burglary(_132933,_132934) )
2192d 188 0 CALL:  problog:problog_burglary(_132933, _132934 )
2193d 188 0 CALL:  prolog:arg(2, problog_burglary(0,-1.249826789005093), _132940 )
2194d 188 0 TRY_OR 
2196d 196 0 CALL:  prolog:ground(-1.249826789005093 )
2197d 188 0 CALL:  prolog:is(_1048427, 3, -1.249826789005093 )
2198d 188 0 TRY_OR 
2199d 196 0 CALL:  prolog:update_array(factprob, 0, 0.2865544269392134 )
2200d 188 0 FAIL RETRY:  problog:problog_predicate(_1048397, _1048398 )
2201d 188 0 CALL:  prolog:atomic_concat([problog_,earthquake], _132927 )
2202d 188 0 CALL:  prolog:functor(_1048409, problog_earthquake, 2 )
2203d 188 0 CALL:  prolog:arg(1, problog_earthquake(_132933,_132934), _132937 )
2204d 188 0 CALL:  prolog:call(problog:problog_earthquake(_132933,_132934) )
2205d 188 0 CALL:  prolog:$execute(problog:problog_earthquake(_132933,_132934) )
2206d 188 0 CALL:  problog:problog_earthquake(_132933, _132934 )
2207d 188 0 CALL:  prolog:arg(2, problog_earthquake(1,-0.6596650473806767), _132940 )
2208d 188 0 TRY_OR 
2210d 196 0 CALL:  prolog:ground(-0.6596650473806767 )
2211d 188 0 CALL:  prolog:is(_1048427, 3, -0.6596650473806767 )
2212d 188 0 TRY_OR 
2213d 196 0 CALL:  prolog:update_array(factprob, 1, 0.5170244841968428 )
2214d 188 0 FAIL RETRY:  problog:problog_predicate(_1048397, _1048398 )
2215d 157 0 CALL:  prolog:atomic_concat([problog_,hears_alarm], _132927 )
2216d 157 0 CALL:  prolog:functor(_1048409, problog_hears_alarm, 3 )
2217d 157 0 CALL:  prolog:arg(1, problog_hears_alarm(_132933,_132934,_132935), _132938 )
2218d 157 0 CALL:  prolog:call(problog:problog_hears_alarm(_132933,_132934,_132935) )
2219d 157 0 CALL:  prolog:$execute(problog:problog_hears_alarm(_132933,_132934,_132935) )
2220d 157 0 CALL:  problog:problog_hears_alarm(_132933, _132934, _132935 )
2221d 157 0 CALL:  prolog:arg(3, problog_hears_alarm(2,_132934,-0.8533637893529484), _132941 )
2222d 157 0 TRY_OR 
2224d 173 0 CALL:  prolog:ground(-0.8533637893529484 )
2225d 157 0 CALL:  prolog:is(_1048427, 3, -0.8533637893529484 )
2226d 157 0 TRY_OR 
2227d 165 0 CALL:  prolog:update_array(factprob, 2, 0.4259796135590997 )
2229d 140 0 CALL:  problog:probclause_id(_1048460 )
2230d 140 0 CALL:  prolog:nb_getval(probclause_counter, _1048460 )
2231d 140 0 CALL:  prolog:__NB_getval__(probclause_counter, _1048460, _1048420 )
2232d 140 0 CALL:  prolog:nb_setval(probclause_counter, 5 )
2233d 140 0 CALL:  prolog:static_array(factprob_temp, 4, float )
+s 0x5602af23d350
 @0x7efdd88a3168 0
+s 0x5602af23ce80
 @0x7efdd88a3168 0
2234d 140 0 CALL:  prolog:static_array(factusage, 4, int )
+s 0x5602af23cfb0
 @0x7efdd88a3168 0
+s 0x5602af225cf0
 @0x7efdd88a3168 0
2235d 140 0 CALL:  prolog:static_array(known_count_true_training, 4, int )
+s 0x5602af232570
 @0x7efdd88a3168 0
+s 0x5602af23d650
 @0x7efdd88a3168 0
2236d 140 0 CALL:  prolog:static_array(known_count_false_training, 4, int )
+s 0x5602af2325b0
 @0x7efdd88a3168 0
+s 0x5602af23d6c0
 @0x7efdd88a3168 0
2237d 140 0 CALL:  prolog:static_array(known_count_true_test, 4, int )
+s 0x5602af2325f0
 @0x7efdd88a3168 0
+s 0x5602af211220
 @0x7efdd88a3168 0
2238d 140 0 CALL:  prolog:static_array(known_count_false_test, 4, int )
+s 0x5602af232630
 @0x7efdd88a3168 0
+s 0x5602af210d30
 @0x7efdd88a3168 0
2239d 140 0 CALL:  prolog:$current_choice_point(_1048461 )
2240d 140 0 CALL:  problog_lfi:init_queries
2241d 140 0 CALL:  flags:problog_flag(cluster_bdds, _1048424 )
2242d 140 0 CALL:  gflags:flag_get(cluster_bdds, _1048424 )
2243d 140 0 CALL:  prolog:recorded(flag_values, flag(cluster_bdds,_132929), _132930 )
2244d 140 0 CALL:  print_learning:format_learning(2, 'Build BDDs for examples~n', [] )
2245d 167 0 CALL:  flags:problog_flag(verbosity_learning, _1048399 )
2246d 167 0 CALL:  gflags:flag_get(verbosity_learning, _1048399 )
2247d 167 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_132933), _132934 )
2248d 167 0 CALL:  prolog:>=(5, 2 )
2249d 140 0 CALL:  prolog:format('Build BDDs for examples~n', print_learning:[] )
2250d 140 0 CALL:  prolog:flush_output(user )
Build BDDs for examples
2251d 140 0 TRY_OR 
2252d 165 0 CALL:  user:example(_1048418 )
2253d 173 0 TRY_OR 
2254d 181 0 CALL:  print_learning:format_learning(3, 'training example ~q: ', [1] )
2255d 191 0 CALL:  flags:problog_flag(verbosity_learning, _1048375 )
2256d 191 0 CALL:  gflags:flag_get(verbosity_learning, _1048375 )
2257d 191 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_132942), _132943 )
2258d 191 0 CALL:  prolog:>=(5, 3 )
2259d 181 0 CALL:  prolog:format('training example ~q: ', print_learning:[1] )
2260d 181 0 CALL:  prolog:flush_output(user )
training example 1: 2261d 181 0 CALL:  problog_lfi:init_one_query(1, training )
+s 0x5602af23aaf0
 @0x7efdd88a3198 0
+s 0x5602af189ad0
 @0x7efdd88a3198 0
- 0x5602af23aaf0
 @0x7efdd88a3198 181
2262d 190 0 CALL:  utils_learning:create_known_values_file_name(1, _1048379 )
+s 0x5602af23aaf0
 @0x7efdd88a3198 0
+s 0x5602aec2ab50
 @0x7efdd88a3198 0
- 0x5602af23aaf0
 @0x7efdd88a3198 190
2263d 206 0 CALL:  flags:problog_flag(bdd_directory, _1048361 )
2264d 206 0 CALL:  gflags:flag_get(bdd_directory, _1048361 )
2265d 206 0 CALL:  prolog:recorded(flag_values, flag(bdd_directory,_132950), _132951 )
2266d 190 0 CALL:  prolog:atomic_concat([query_,1,'_known_values'], _1048362 )
2267d 190 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries', query_1_known_values, _1048379 )
2268d 190 0 CALL:  os:path_separator(_1048370 )
2269d 214 0 CALL:  prolog:current_prolog_flag(windows, true )
2270d 214 0 FAIL RETRY:  os:path_separator(_1048370 )
2271d 190 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries',/,query_1_known_values], _1048379 )
2272d 190 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries',/,query_1_known_values], _1048379 )
2273d 190 0 CALL:  prolog:file_exists('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values' )
2274d 190 0 CALL:  prolog:absolute_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', _132964, [expand(true),solutions(first),access(exist)] )
2275d 190 0 CALL:  prolog:absolute_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', [expand(true),solutions(first),access(exist)], _132964 )
2276d 217 0 FAIL RETRY:  prolog:absolute_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', [expand(true),solutions(first),access(exist)], _132964 )
2277d 190 0 CALL:  prolog:$absolute_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', [expand(true),solutions(first),access(exist)], _132964 )
2278d 190 0 CALL:  prolog:gated_call('$enter_absf'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values',[expand(true),solutions(first),access(exist)],_132980,_132981,_132982,_132983,_132984,_132985,_132986,_132987,_132988), '$find_in_path'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values',_132980,_132964,_132981,_132987), _132995, '$absf_port'(_132995,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values',_132964,_132981,_132982,_132983,_132984,_132985,_132986,_132987,_132988) )
2279d 190 0 CALL:  prolog:$setup_call_catcher_cleanup('$enter_absf'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values',[expand(true),solutions(first),access(exist)],_132980,_132981,_132982,_132983,_132984,_132985,_132986,_132987,_132988) )
2280d 227 0 CALL:  prolog:abs_file_parameters([expand(true),solutions(first),access(exist)], _132980 )
2281d 227 0 CALL:  prolog:current_prolog_flag(open_expands_filename, _132982 )
2282d 227 0 CALL:  prolog:current_prolog_flag(fileerrors, _132983 )
2283d 227 0 CALL:  prolog:current_prolog_flag(verbose_file_search, _132984 )
2284d 227 0 CALL:  prolog:get_abs_file_parameter(verbose_file_search, opt(exist,true,[],error,txt,'','',first,false), _132986 )
2285d 227 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), _132985 )
2286d 227 0 CALL:  prolog:set_prolog_flag(verbose_file_search, false )
2287d 227 0 CALL:  prolog:get_abs_file_parameter(file_errors, opt(exist,true,[],error,txt,'','',first,false), _133018 )
2288d 227 0 CALL:  prolog:get_abs_file_parameter(solutions, opt(exist,true,[],error,txt,'','',first,false), _132987 )
2289d 227 0 TRY_OR 
2290d 245 0 CALL:  prolog:==(error, fail )
2292d 227 0 CALL:  prolog:set_prolog_flag(fileerrors, true )
2293d 227 0 CALL:  prolog:set_prolog_flag(file_name_variables, true )
2294d 227 0 CALL:  prolog:$absf_trace('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values' )
2295d 242 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
2296d 242 0 FAIL RETRY:  prolog:$absf_trace('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values' )
2297d 227 0 CALL:  prolog:$absf_trace_options([expand(true),solutions(first),access(exist)] )
2298d 241 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
2299d 241 0 FAIL RETRY:  prolog:$absf_trace_options([expand(true),solutions(first),access(exist)] )
2300d 190 0 CALL:  prolog:$gated_call(true, '$find_in_path'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values',opt(exist,true,[],error,txt,'','',first,false),_132964,t(no),first), _132995, '$absf_port'(_132995,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values',_132964,t(no),false,true,false,true,false,first,true) )
2301d 190 0 CALL:  prolog:$tag_cleanup(_133027, cleanup(true,_132995,'$absf_port'(_132995,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values',_132964,t(no),false,true,false,true,false,first,true),_133025,true,_133027) )
2302d 190 0 CALL:  prolog:$execute('$find_in_path'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values',opt(exist,true,[],error,txt,'','',first,false),_132964,t(no),first) )
2303d 190 0 CALL:  prolog:$find_in_path('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', opt(exist,true,[],error,txt,'','',first,false), _132964, t(no), first )
2304d 216 0 FAIL RETRY:  prolog:$find_in_path('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', opt(exist,true,[],error,txt,'','',first,false), _132964, t(no), first )
2305d 190 0 CALL:  prolog:get_abs_file_parameter(file_type, opt(exist,true,[],error,txt,'','',first,false), _1048363 )
2306d 190 0 CALL:  prolog:get_abs_file_parameter(access, opt(exist,true,[],error,txt,'','',first,false), _1048364 )
2307d 190 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), _1048358 )
2308d 190 0 CALL:  prolog:$absf_trace('start with ~w', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'] )
2309d 232 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
2310d 232 0 FAIL RETRY:  prolog:$absf_trace('start with ~w', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'] )
2311d 190 0 CALL:  prolog:$core_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', opt(exist,true,[],error,txt,'','',first,false), _1048354, [] )
2312d 190 0 CALL:  prolog:$file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', opt(exist,true,[],error,txt,'','',first,false), _1048343, _1048354, _1048344 )
2313d 244 0 CALL:  prolog:=..('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', [_133045,_133047] )
2314d 244 0 FAIL RETRY:  prolog:$file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', opt(exist,true,[],error,txt,'','',first,false), _1048343, _1048354, _1048344 )
2315d 190 0 CALL:  prolog:$cat_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', _1048343, _1048354, _1048344 )
2316d 243 0 FAIL RETRY:  prolog:$cat_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', _1048343, _1048354, _1048344 )
2317d 243 0 CALL:  prolog:atom_codes('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', _1048343 )
2318d 190 0 CALL:  prolog:phrase([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _1048354, _1048344 )
2319d 190 0 CALL:  prolog:$phrase_list([104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133220, _1048344 )
2320d 190 0 CALL:  prolog:$phrase_list([111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133222, _1048344 )
2321d 190 0 CALL:  prolog:$phrase_list([109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133224, _1048344 )
2322d 190 0 CALL:  prolog:$phrase_list([101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133226, _1048344 )
2323d 190 0 CALL:  prolog:$phrase_list([47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133228, _1048344 )
2324d 190 0 CALL:  prolog:$phrase_list([118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133230, _1048344 )
2325d 190 0 CALL:  prolog:$phrase_list([115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133232, _1048344 )
2326d 190 0 CALL:  prolog:$phrase_list([99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133234, _1048344 )
2327d 190 0 CALL:  prolog:$phrase_list([47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133236, _1048344 )
2328d 190 0 CALL:  prolog:$phrase_list([103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133238, _1048344 )
2329d 190 0 CALL:  prolog:$phrase_list([105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133240, _1048344 )
2330d 190 0 CALL:  prolog:$phrase_list([116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133242, _1048344 )
2331d 190 0 CALL:  prolog:$phrase_list([104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133244, _1048344 )
2332d 190 0 CALL:  prolog:$phrase_list([117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133246, _1048344 )
2333d 190 0 CALL:  prolog:$phrase_list([98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133248, _1048344 )
2334d 190 0 CALL:  prolog:$phrase_list([47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133250, _1048344 )
2335d 190 0 CALL:  prolog:$phrase_list([121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133252, _1048344 )
2336d 190 0 CALL:  prolog:$phrase_list([97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133254, _1048344 )
2337d 190 0 CALL:  prolog:$phrase_list([112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133256, _1048344 )
2338d 190 0 CALL:  prolog:$phrase_list([45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133258, _1048344 )
2339d 190 0 CALL:  prolog:$phrase_list([54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133260, _1048344 )
2340d 190 0 CALL:  prolog:$phrase_list([46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133262, _1048344 )
2341d 190 0 CALL:  prolog:$phrase_list([51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133264, _1048344 )
2342d 190 0 CALL:  prolog:$phrase_list([47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133266, _1048344 )
2343d 190 0 CALL:  prolog:$phrase_list([112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133268, _1048344 )
2344d 190 0 CALL:  prolog:$phrase_list([97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133270, _1048344 )
2345d 190 0 CALL:  prolog:$phrase_list([99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133272, _1048344 )
2346d 190 0 CALL:  prolog:$phrase_list([107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133274, _1048344 )
2347d 190 0 CALL:  prolog:$phrase_list([97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133276, _1048344 )
2348d 190 0 CALL:  prolog:$phrase_list([103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133278, _1048344 )
2349d 190 0 CALL:  prolog:$phrase_list([101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133280, _1048344 )
2350d 190 0 CALL:  prolog:$phrase_list([115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133282, _1048344 )
2351d 190 0 CALL:  prolog:$phrase_list([47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133284, _1048344 )
2352d 190 0 CALL:  prolog:$phrase_list([80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133286, _1048344 )
2353d 190 0 CALL:  prolog:$phrase_list([114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133288, _1048344 )
2354d 190 0 CALL:  prolog:$phrase_list([111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133290, _1048344 )
2355d 190 0 CALL:  prolog:$phrase_list([98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133292, _1048344 )
2356d 190 0 CALL:  prolog:$phrase_list([76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133294, _1048344 )
2357d 190 0 CALL:  prolog:$phrase_list([111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133296, _1048344 )
2358d 190 0 CALL:  prolog:$phrase_list([103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133298, _1048344 )
2359d 190 0 CALL:  prolog:$phrase_list([47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133300, _1048344 )
2360d 190 0 CALL:  prolog:$phrase_list([112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133302, _1048344 )
2361d 190 0 CALL:  prolog:$phrase_list([114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133304, _1048344 )
2362d 190 0 CALL:  prolog:$phrase_list([111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133306, _1048344 )
2363d 190 0 CALL:  prolog:$phrase_list([98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133308, _1048344 )
2364d 190 0 CALL:  prolog:$phrase_list([108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133310, _1048344 )
2365d 190 0 CALL:  prolog:$phrase_list([111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133312, _1048344 )
2366d 190 0 CALL:  prolog:$phrase_list([103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133314, _1048344 )
2367d 190 0 CALL:  prolog:$phrase_list([95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133316, _1048344 )
2368d 190 0 CALL:  prolog:$phrase_list([101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133318, _1048344 )
2369d 190 0 CALL:  prolog:$phrase_list([120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133320, _1048344 )
2370d 190 0 CALL:  prolog:$phrase_list([97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133322, _1048344 )
2371d 190 0 CALL:  prolog:$phrase_list([109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133324, _1048344 )
2372d 190 0 CALL:  prolog:$phrase_list([112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133326, _1048344 )
2373d 190 0 CALL:  prolog:$phrase_list([108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133328, _1048344 )
2374d 190 0 CALL:  prolog:$phrase_list([101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133330, _1048344 )
2375d 190 0 CALL:  prolog:$phrase_list([115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133332, _1048344 )
2376d 190 0 CALL:  prolog:$phrase_list([47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133334, _1048344 )
2377d 190 0 CALL:  prolog:$phrase_list([113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133336, _1048344 )
2378d 190 0 CALL:  prolog:$phrase_list([117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133338, _1048344 )
2379d 190 0 CALL:  prolog:$phrase_list([101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133340, _1048344 )
2380d 190 0 CALL:  prolog:$phrase_list([114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133342, _1048344 )
2381d 190 0 CALL:  prolog:$phrase_list([105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133344, _1048344 )
2382d 190 0 CALL:  prolog:$phrase_list([101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133346, _1048344 )
2383d 190 0 CALL:  prolog:$phrase_list([115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133348, _1048344 )
2384d 190 0 CALL:  prolog:$phrase_list([47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133350, _1048344 )
2385d 190 0 CALL:  prolog:$phrase_list([113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133352, _1048344 )
2386d 190 0 CALL:  prolog:$phrase_list([117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133354, _1048344 )
2387d 190 0 CALL:  prolog:$phrase_list([101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133356, _1048344 )
2388d 190 0 CALL:  prolog:$phrase_list([114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133358, _1048344 )
2389d 190 0 CALL:  prolog:$phrase_list([121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133360, _1048344 )
2390d 190 0 CALL:  prolog:$phrase_list([95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133362, _1048344 )
2391d 190 0 CALL:  prolog:$phrase_list([49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133364, _1048344 )
2392d 190 0 CALL:  prolog:$phrase_list([95,107,110,111,119,110,95,118,97,108,117,101,115], _133366, _1048344 )
2393d 190 0 CALL:  prolog:$phrase_list([107,110,111,119,110,95,118,97,108,117,101,115], _133368, _1048344 )
2394d 190 0 CALL:  prolog:$phrase_list([110,111,119,110,95,118,97,108,117,101,115], _133370, _1048344 )
2395d 190 0 CALL:  prolog:$phrase_list([111,119,110,95,118,97,108,117,101,115], _133372, _1048344 )
2396d 190 0 CALL:  prolog:$phrase_list([119,110,95,118,97,108,117,101,115], _133374, _1048344 )
2397d 190 0 CALL:  prolog:$phrase_list([110,95,118,97,108,117,101,115], _133376, _1048344 )
2398d 190 0 CALL:  prolog:$phrase_list([95,118,97,108,117,101,115], _133378, _1048344 )
2399d 190 0 CALL:  prolog:$phrase_list([118,97,108,117,101,115], _133380, _1048344 )
2400d 190 0 CALL:  prolog:$phrase_list([97,108,117,101,115], _133382, _1048344 )
2401d 190 0 CALL:  prolog:$phrase_list([108,117,101,115], _133384, _1048344 )
2402d 190 0 CALL:  prolog:$phrase_list([117,101,115], _133386, _1048344 )
2403d 190 0 CALL:  prolog:$phrase_list([101,115], _133388, _1048344 )
2404d 190 0 CALL:  prolog:$phrase_list([115], _133390, _1048344 )
2405d 190 0 CALL:  prolog:$phrase_list([], _133392, _1048344 )
2406d 190 0 CALL:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], opt(exist,true,[],error,txt,'','',first,false), _133392, _1048346 )
2407d 241 0 CALL:  lists:append(_1048324, [46|_133394], [47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2408d 261 0 FAIL RETRY:  lists:append(_1048324, [46|_133394], [47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2409d 241 0 CALL:  lists:append(_133396, [46|_133394], [104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2410d 261 0 FAIL RETRY:  lists:append(_133396, [46|_133394], [104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2411d 241 0 CALL:  lists:append(_133398, [46|_133394], [111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2412d 261 0 FAIL RETRY:  lists:append(_133398, [46|_133394], [111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2413d 241 0 CALL:  lists:append(_133400, [46|_133394], [109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2414d 261 0 FAIL RETRY:  lists:append(_133400, [46|_133394], [109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2415d 241 0 CALL:  lists:append(_133402, [46|_133394], [101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2416d 261 0 FAIL RETRY:  lists:append(_133402, [46|_133394], [101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2417d 241 0 CALL:  lists:append(_133404, [46|_133394], [47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2418d 261 0 FAIL RETRY:  lists:append(_133404, [46|_133394], [47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2419d 241 0 CALL:  lists:append(_133406, [46|_133394], [118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2420d 261 0 FAIL RETRY:  lists:append(_133406, [46|_133394], [118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2421d 241 0 CALL:  lists:append(_133408, [46|_133394], [115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2422d 261 0 FAIL RETRY:  lists:append(_133408, [46|_133394], [115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2423d 241 0 CALL:  lists:append(_133410, [46|_133394], [99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2424d 261 0 FAIL RETRY:  lists:append(_133410, [46|_133394], [99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2425d 241 0 CALL:  lists:append(_133412, [46|_133394], [47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2426d 261 0 FAIL RETRY:  lists:append(_133412, [46|_133394], [47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2427d 241 0 CALL:  lists:append(_133414, [46|_133394], [103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2428d 261 0 FAIL RETRY:  lists:append(_133414, [46|_133394], [103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2429d 241 0 CALL:  lists:append(_133416, [46|_133394], [105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2430d 261 0 FAIL RETRY:  lists:append(_133416, [46|_133394], [105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2431d 241 0 CALL:  lists:append(_133418, [46|_133394], [116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2432d 261 0 FAIL RETRY:  lists:append(_133418, [46|_133394], [116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2433d 241 0 CALL:  lists:append(_133420, [46|_133394], [104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2434d 261 0 FAIL RETRY:  lists:append(_133420, [46|_133394], [104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2435d 241 0 CALL:  lists:append(_133422, [46|_133394], [117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2436d 261 0 FAIL RETRY:  lists:append(_133422, [46|_133394], [117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2437d 241 0 CALL:  lists:append(_133424, [46|_133394], [98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2438d 261 0 FAIL RETRY:  lists:append(_133424, [46|_133394], [98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2439d 241 0 CALL:  lists:append(_133426, [46|_133394], [47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2440d 261 0 FAIL RETRY:  lists:append(_133426, [46|_133394], [47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2441d 241 0 CALL:  lists:append(_133428, [46|_133394], [121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2442d 261 0 FAIL RETRY:  lists:append(_133428, [46|_133394], [121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2443d 241 0 CALL:  lists:append(_133430, [46|_133394], [97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2444d 261 0 FAIL RETRY:  lists:append(_133430, [46|_133394], [97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2445d 241 0 CALL:  lists:append(_133432, [46|_133394], [112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2446d 261 0 FAIL RETRY:  lists:append(_133432, [46|_133394], [112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2447d 241 0 CALL:  lists:append(_133434, [46|_133394], [45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2448d 261 0 FAIL RETRY:  lists:append(_133434, [46|_133394], [45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2449d 241 0 CALL:  lists:append(_133436, [46|_133394], [54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2450d 261 0 FAIL RETRY:  lists:append(_133436, [46|_133394], [54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2451d 241 0 CALL:  lists:append(_133438, [46|_133394], [46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2452d 261 0 CALL:  prolog:$id([51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _1048325, [] )
2453d 261 0 CALL:  prolog:C(_1048325, 51, _1048307 )
2454d 261 0 TRY_OR 
2455d 278 0 CALL:  prolog:>=(51, 97 )
2457d 278 0 CALL:  prolog:>=(51, 65 )
2459d 278 0 CALL:  prolog:>=(51, 48 )
2460d 278 0 CALL:  prolog:=<(51, 57 )
2461d 261 0 CALL:  prolog:$id([47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133440, [] )
2462d 261 0 CALL:  prolog:C(_133440, 47, _1048307 )
2463d 261 0 TRY_OR 
2464d 278 0 CALL:  prolog:>=(47, 97 )
2466d 278 0 CALL:  prolog:>=(47, 65 )
2468d 278 0 CALL:  prolog:>=(47, 48 )
2470d 261 0 CALL:  prolog:=:=(47, 95 )
2471d 261 0 FAIL RETRY:  lists:append(_133438, [46|_133394], [46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2472d 241 0 CALL:  lists:append(_133440, [46|_133394], [51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2473d 261 0 FAIL RETRY:  lists:append(_133440, [46|_133394], [51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2474d 241 0 CALL:  lists:append(_133442, [46|_133394], [47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2475d 261 0 FAIL RETRY:  lists:append(_133442, [46|_133394], [47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2476d 241 0 CALL:  lists:append(_133444, [46|_133394], [112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2477d 261 0 FAIL RETRY:  lists:append(_133444, [46|_133394], [112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2478d 241 0 CALL:  lists:append(_133446, [46|_133394], [97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2479d 261 0 FAIL RETRY:  lists:append(_133446, [46|_133394], [97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2480d 241 0 CALL:  lists:append(_133448, [46|_133394], [99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2481d 261 0 FAIL RETRY:  lists:append(_133448, [46|_133394], [99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2482d 241 0 CALL:  lists:append(_133450, [46|_133394], [107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2483d 261 0 FAIL RETRY:  lists:append(_133450, [46|_133394], [107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2484d 241 0 CALL:  lists:append(_133452, [46|_133394], [97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2485d 261 0 FAIL RETRY:  lists:append(_133452, [46|_133394], [97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2486d 241 0 CALL:  lists:append(_133454, [46|_133394], [103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2487d 261 0 FAIL RETRY:  lists:append(_133454, [46|_133394], [103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2488d 241 0 CALL:  lists:append(_133456, [46|_133394], [101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2489d 261 0 FAIL RETRY:  lists:append(_133456, [46|_133394], [101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2490d 241 0 CALL:  lists:append(_133458, [46|_133394], [115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2491d 261 0 FAIL RETRY:  lists:append(_133458, [46|_133394], [115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2492d 241 0 CALL:  lists:append(_133460, [46|_133394], [47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2493d 261 0 FAIL RETRY:  lists:append(_133460, [46|_133394], [47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2494d 241 0 CALL:  lists:append(_133462, [46|_133394], [80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2495d 261 0 FAIL RETRY:  lists:append(_133462, [46|_133394], [80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2496d 241 0 CALL:  lists:append(_133464, [46|_133394], [114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2497d 261 0 FAIL RETRY:  lists:append(_133464, [46|_133394], [114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2498d 241 0 CALL:  lists:append(_133466, [46|_133394], [111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2499d 261 0 FAIL RETRY:  lists:append(_133466, [46|_133394], [111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2500d 241 0 CALL:  lists:append(_133468, [46|_133394], [98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2501d 261 0 FAIL RETRY:  lists:append(_133468, [46|_133394], [98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2502d 241 0 CALL:  lists:append(_133470, [46|_133394], [76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2503d 261 0 FAIL RETRY:  lists:append(_133470, [46|_133394], [76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2504d 241 0 CALL:  lists:append(_133472, [46|_133394], [111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2505d 261 0 FAIL RETRY:  lists:append(_133472, [46|_133394], [111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2506d 241 0 CALL:  lists:append(_133474, [46|_133394], [103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2507d 261 0 FAIL RETRY:  lists:append(_133474, [46|_133394], [103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2508d 241 0 CALL:  lists:append(_133476, [46|_133394], [47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2509d 261 0 FAIL RETRY:  lists:append(_133476, [46|_133394], [47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2510d 241 0 CALL:  lists:append(_133478, [46|_133394], [112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2511d 261 0 FAIL RETRY:  lists:append(_133478, [46|_133394], [112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2512d 241 0 CALL:  lists:append(_133480, [46|_133394], [114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2513d 261 0 FAIL RETRY:  lists:append(_133480, [46|_133394], [114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2514d 241 0 CALL:  lists:append(_133482, [46|_133394], [111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2515d 261 0 FAIL RETRY:  lists:append(_133482, [46|_133394], [111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2516d 241 0 CALL:  lists:append(_133484, [46|_133394], [98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2517d 261 0 FAIL RETRY:  lists:append(_133484, [46|_133394], [98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2518d 241 0 CALL:  lists:append(_133486, [46|_133394], [108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2519d 261 0 FAIL RETRY:  lists:append(_133486, [46|_133394], [108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2520d 241 0 CALL:  lists:append(_133488, [46|_133394], [111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2521d 261 0 FAIL RETRY:  lists:append(_133488, [46|_133394], [111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2522d 241 0 CALL:  lists:append(_133490, [46|_133394], [103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2523d 261 0 FAIL RETRY:  lists:append(_133490, [46|_133394], [103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2524d 241 0 CALL:  lists:append(_133492, [46|_133394], [95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2525d 261 0 FAIL RETRY:  lists:append(_133492, [46|_133394], [95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2526d 241 0 CALL:  lists:append(_133494, [46|_133394], [101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2527d 261 0 FAIL RETRY:  lists:append(_133494, [46|_133394], [101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2528d 241 0 CALL:  lists:append(_133496, [46|_133394], [120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2529d 261 0 FAIL RETRY:  lists:append(_133496, [46|_133394], [120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2530d 241 0 CALL:  lists:append(_133498, [46|_133394], [97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2531d 261 0 FAIL RETRY:  lists:append(_133498, [46|_133394], [97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2532d 241 0 CALL:  lists:append(_133500, [46|_133394], [109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2533d 261 0 FAIL RETRY:  lists:append(_133500, [46|_133394], [109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2534d 241 0 CALL:  lists:append(_133502, [46|_133394], [112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2535d 261 0 FAIL RETRY:  lists:append(_133502, [46|_133394], [112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2536d 241 0 CALL:  lists:append(_133504, [46|_133394], [108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2537d 261 0 FAIL RETRY:  lists:append(_133504, [46|_133394], [108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2538d 241 0 CALL:  lists:append(_133506, [46|_133394], [101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2539d 261 0 FAIL RETRY:  lists:append(_133506, [46|_133394], [101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2540d 241 0 CALL:  lists:append(_133508, [46|_133394], [115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2541d 261 0 FAIL RETRY:  lists:append(_133508, [46|_133394], [115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2542d 241 0 CALL:  lists:append(_133510, [46|_133394], [47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2543d 261 0 FAIL RETRY:  lists:append(_133510, [46|_133394], [47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2544d 241 0 CALL:  lists:append(_133512, [46|_133394], [113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2545d 261 0 FAIL RETRY:  lists:append(_133512, [46|_133394], [113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2546d 241 0 CALL:  lists:append(_133514, [46|_133394], [117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2547d 261 0 FAIL RETRY:  lists:append(_133514, [46|_133394], [117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2548d 241 0 CALL:  lists:append(_133516, [46|_133394], [101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2549d 261 0 FAIL RETRY:  lists:append(_133516, [46|_133394], [101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2550d 241 0 CALL:  lists:append(_133518, [46|_133394], [114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2551d 261 0 FAIL RETRY:  lists:append(_133518, [46|_133394], [114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2552d 241 0 CALL:  lists:append(_133520, [46|_133394], [105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2553d 261 0 FAIL RETRY:  lists:append(_133520, [46|_133394], [105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2554d 241 0 CALL:  lists:append(_133522, [46|_133394], [101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2555d 261 0 FAIL RETRY:  lists:append(_133522, [46|_133394], [101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2556d 241 0 CALL:  lists:append(_133524, [46|_133394], [115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2557d 261 0 FAIL RETRY:  lists:append(_133524, [46|_133394], [115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2558d 241 0 CALL:  lists:append(_133526, [46|_133394], [47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2559d 261 0 FAIL RETRY:  lists:append(_133526, [46|_133394], [47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2560d 241 0 CALL:  lists:append(_133528, [46|_133394], [113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2561d 261 0 FAIL RETRY:  lists:append(_133528, [46|_133394], [113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2562d 241 0 CALL:  lists:append(_133530, [46|_133394], [117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2563d 261 0 FAIL RETRY:  lists:append(_133530, [46|_133394], [117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2564d 241 0 CALL:  lists:append(_133532, [46|_133394], [101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2565d 261 0 FAIL RETRY:  lists:append(_133532, [46|_133394], [101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2566d 241 0 CALL:  lists:append(_133534, [46|_133394], [114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2567d 261 0 FAIL RETRY:  lists:append(_133534, [46|_133394], [114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2568d 241 0 CALL:  lists:append(_133536, [46|_133394], [121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2569d 261 0 FAIL RETRY:  lists:append(_133536, [46|_133394], [121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2570d 241 0 CALL:  lists:append(_133538, [46|_133394], [95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2571d 261 0 FAIL RETRY:  lists:append(_133538, [46|_133394], [95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2572d 241 0 CALL:  lists:append(_133540, [46|_133394], [49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2573d 261 0 FAIL RETRY:  lists:append(_133540, [46|_133394], [49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2574d 241 0 CALL:  lists:append(_133542, [46|_133394], [95,107,110,111,119,110,95,118,97,108,117,101,115] )
2575d 261 0 FAIL RETRY:  lists:append(_133542, [46|_133394], [95,107,110,111,119,110,95,118,97,108,117,101,115] )
2576d 241 0 CALL:  lists:append(_133544, [46|_133394], [107,110,111,119,110,95,118,97,108,117,101,115] )
2577d 261 0 FAIL RETRY:  lists:append(_133544, [46|_133394], [107,110,111,119,110,95,118,97,108,117,101,115] )
2578d 241 0 CALL:  lists:append(_133546, [46|_133394], [110,111,119,110,95,118,97,108,117,101,115] )
2579d 261 0 FAIL RETRY:  lists:append(_133546, [46|_133394], [110,111,119,110,95,118,97,108,117,101,115] )
2580d 241 0 CALL:  lists:append(_133548, [46|_133394], [111,119,110,95,118,97,108,117,101,115] )
2581d 261 0 FAIL RETRY:  lists:append(_133548, [46|_133394], [111,119,110,95,118,97,108,117,101,115] )
2582d 241 0 CALL:  lists:append(_133550, [46|_133394], [119,110,95,118,97,108,117,101,115] )
2583d 261 0 FAIL RETRY:  lists:append(_133550, [46|_133394], [119,110,95,118,97,108,117,101,115] )
2584d 241 0 CALL:  lists:append(_133552, [46|_133394], [110,95,118,97,108,117,101,115] )
2585d 261 0 FAIL RETRY:  lists:append(_133552, [46|_133394], [110,95,118,97,108,117,101,115] )
2586d 241 0 CALL:  lists:append(_133554, [46|_133394], [95,118,97,108,117,101,115] )
2587d 261 0 FAIL RETRY:  lists:append(_133554, [46|_133394], [95,118,97,108,117,101,115] )
2588d 241 0 CALL:  lists:append(_133556, [46|_133394], [118,97,108,117,101,115] )
2589d 261 0 FAIL RETRY:  lists:append(_133556, [46|_133394], [118,97,108,117,101,115] )
2590d 241 0 CALL:  lists:append(_133558, [46|_133394], [97,108,117,101,115] )
2591d 261 0 FAIL RETRY:  lists:append(_133558, [46|_133394], [97,108,117,101,115] )
2592d 241 0 CALL:  lists:append(_133560, [46|_133394], [108,117,101,115] )
2593d 261 0 FAIL RETRY:  lists:append(_133560, [46|_133394], [108,117,101,115] )
2594d 241 0 CALL:  lists:append(_133562, [46|_133394], [117,101,115] )
2595d 261 0 FAIL RETRY:  lists:append(_133562, [46|_133394], [117,101,115] )
2596d 241 0 CALL:  lists:append(_133564, [46|_133394], [101,115] )
2597d 261 0 FAIL RETRY:  lists:append(_133564, [46|_133394], [101,115] )
2598d 241 0 CALL:  lists:append(_133566, [46|_133394], [115] )
2599d 261 0 FAIL RETRY:  lists:append(_133566, [46|_133394], [115] )
2600d 241 0 CALL:  lists:append(_133568, [46|_133394], [] )
2601d 261 0 FAIL RETRY:  lists:append(_133568, [46|_133394], [] )
2602d 241 0 FAIL RETRY:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], opt(exist,true,[],error,txt,'','',first,false), _133392, _1048346 )
2603d 241 0 TRY_OR 
2604d 263 0 CALL:  prolog:get_abs_file_parameter(extensions, opt(exist,true,[],error,txt,'','',first,false), _1048320 )
2605d 263 0 CALL:  prolog:\=([], [] )
2607d 241 0 CALL:  prolog:get_abs_file_parameter(file_type, opt(exist,true,[],error,txt,'','',first,false), _133393 )
2608d 241 0 TRY_OR 
2609d 261 0 CALL:  prolog:==(txt, source )
2611d 241 0 CALL:  user:prolog_file_type(_1048325, txt )
2612d 241 0 FAIL RETRY:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], opt(exist,true,[],error,txt,'','',first,false), _133392, _1048346 )
2613d 190 0 CALL:  prolog:$absf_trace(' try no suffix', [], _133392, _1048346 )
2614d 241 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
2615d 241 0 FAIL RETRY:  prolog:$absf_trace(' try no suffix', [], _133392, _1048346 )
2616d 190 0 CALL:  prolog:$glob(opt(exist,true,[],error,txt,'','',first,false), _133392, [] )
2617d 232 0 CALL:  prolog:get_abs_file_parameter(glob, opt(exist,true,[],error,txt,'','',first,false), _133393 )
2618d 232 0 CALL:  prolog:\=('', '' )
2619d 232 0 FAIL RETRY:  prolog:$glob(opt(exist,true,[],error,txt,'','',first,false), _133392, [] )
2620d 190 0 CALL:  prolog:$absf_trace('  after name/library unfolding: ~w', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'] )
2621d 230 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
2622d 230 0 FAIL RETRY:  prolog:$absf_trace('  after name/library unfolding: ~w', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'] )
2623d 190 0 CALL:  prolog:$variable_expansion([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], opt(exist,true,[],error,txt,'','',first,false), _1048355 )
2624d 230 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), true )
2625d 190 0 CALL:  prolog:$expand_file_name([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _1048355 )
2626d 190 0 CALL:  prolog:$absf_trace('   after environment variable expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115]] )
2627d 229 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
2628d 229 0 FAIL RETRY:  prolog:$absf_trace('   after environment variable expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115]] )
2629d 190 0 CALL:  prolog:$prefix([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], opt(exist,true,[],error,txt,'','',first,false), _1048357, [] )
2630d 229 0 CALL:  prolog:is_absolute_file_name([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2631d 190 0 CALL:  prolog:phrase([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _1048357, [] )
2632d 190 0 CALL:  prolog:$phrase_list([104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133572, [] )
2633d 190 0 CALL:  prolog:$phrase_list([111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133574, [] )
2634d 190 0 CALL:  prolog:$phrase_list([109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133576, [] )
2635d 190 0 CALL:  prolog:$phrase_list([101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133578, [] )
2636d 190 0 CALL:  prolog:$phrase_list([47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133580, [] )
2637d 190 0 CALL:  prolog:$phrase_list([118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133582, [] )
2638d 190 0 CALL:  prolog:$phrase_list([115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133584, [] )
2639d 190 0 CALL:  prolog:$phrase_list([99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133586, [] )
2640d 190 0 CALL:  prolog:$phrase_list([47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133588, [] )
2641d 190 0 CALL:  prolog:$phrase_list([103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133590, [] )
2642d 190 0 CALL:  prolog:$phrase_list([105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133592, [] )
2643d 190 0 CALL:  prolog:$phrase_list([116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133594, [] )
2644d 190 0 CALL:  prolog:$phrase_list([104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133596, [] )
2645d 190 0 CALL:  prolog:$phrase_list([117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133598, [] )
2646d 190 0 CALL:  prolog:$phrase_list([98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133600, [] )
2647d 190 0 CALL:  prolog:$phrase_list([47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133602, [] )
2648d 190 0 CALL:  prolog:$phrase_list([121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133604, [] )
2649d 190 0 CALL:  prolog:$phrase_list([97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133606, [] )
2650d 190 0 CALL:  prolog:$phrase_list([112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133608, [] )
2651d 190 0 CALL:  prolog:$phrase_list([45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133610, [] )
2652d 190 0 CALL:  prolog:$phrase_list([54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133612, [] )
2653d 190 0 CALL:  prolog:$phrase_list([46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133614, [] )
2654d 190 0 CALL:  prolog:$phrase_list([51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133616, [] )
2655d 190 0 CALL:  prolog:$phrase_list([47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133618, [] )
2656d 190 0 CALL:  prolog:$phrase_list([112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133620, [] )
2657d 190 0 CALL:  prolog:$phrase_list([97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133622, [] )
2658d 190 0 CALL:  prolog:$phrase_list([99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133624, [] )
2659d 190 0 CALL:  prolog:$phrase_list([107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133626, [] )
2660d 190 0 CALL:  prolog:$phrase_list([97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133628, [] )
2661d 190 0 CALL:  prolog:$phrase_list([103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133630, [] )
2662d 190 0 CALL:  prolog:$phrase_list([101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133632, [] )
2663d 190 0 CALL:  prolog:$phrase_list([115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133634, [] )
2664d 190 0 CALL:  prolog:$phrase_list([47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133636, [] )
2665d 190 0 CALL:  prolog:$phrase_list([80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133638, [] )
2666d 190 0 CALL:  prolog:$phrase_list([114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133640, [] )
2667d 190 0 CALL:  prolog:$phrase_list([111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133642, [] )
2668d 190 0 CALL:  prolog:$phrase_list([98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133644, [] )
2669d 190 0 CALL:  prolog:$phrase_list([76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133646, [] )
2670d 190 0 CALL:  prolog:$phrase_list([111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133648, [] )
2671d 190 0 CALL:  prolog:$phrase_list([103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133650, [] )
2672d 190 0 CALL:  prolog:$phrase_list([47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133652, [] )
2673d 190 0 CALL:  prolog:$phrase_list([112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133654, [] )
2674d 190 0 CALL:  prolog:$phrase_list([114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133656, [] )
2675d 190 0 CALL:  prolog:$phrase_list([111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133658, [] )
2676d 190 0 CALL:  prolog:$phrase_list([98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133660, [] )
2677d 190 0 CALL:  prolog:$phrase_list([108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133662, [] )
2678d 190 0 CALL:  prolog:$phrase_list([111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133664, [] )
2679d 190 0 CALL:  prolog:$phrase_list([103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133666, [] )
2680d 190 0 CALL:  prolog:$phrase_list([95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133668, [] )
2681d 190 0 CALL:  prolog:$phrase_list([101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133670, [] )
2682d 190 0 CALL:  prolog:$phrase_list([120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133672, [] )
2683d 190 0 CALL:  prolog:$phrase_list([97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133674, [] )
2684d 190 0 CALL:  prolog:$phrase_list([109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133676, [] )
2685d 190 0 CALL:  prolog:$phrase_list([112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133678, [] )
2686d 190 0 CALL:  prolog:$phrase_list([108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133680, [] )
2687d 190 0 CALL:  prolog:$phrase_list([101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133682, [] )
2688d 190 0 CALL:  prolog:$phrase_list([115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133684, [] )
2689d 190 0 CALL:  prolog:$phrase_list([47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133686, [] )
2690d 190 0 CALL:  prolog:$phrase_list([113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133688, [] )
2691d 190 0 CALL:  prolog:$phrase_list([117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133690, [] )
2692d 190 0 CALL:  prolog:$phrase_list([101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133692, [] )
2693d 190 0 CALL:  prolog:$phrase_list([114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133694, [] )
2694d 190 0 CALL:  prolog:$phrase_list([105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133696, [] )
2695d 190 0 CALL:  prolog:$phrase_list([101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133698, [] )
2696d 190 0 CALL:  prolog:$phrase_list([115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133700, [] )
2697d 190 0 CALL:  prolog:$phrase_list([47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133702, [] )
2698d 190 0 CALL:  prolog:$phrase_list([113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133704, [] )
2699d 190 0 CALL:  prolog:$phrase_list([117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133706, [] )
2700d 190 0 CALL:  prolog:$phrase_list([101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133708, [] )
2701d 190 0 CALL:  prolog:$phrase_list([114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133710, [] )
2702d 190 0 CALL:  prolog:$phrase_list([121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133712, [] )
2703d 190 0 CALL:  prolog:$phrase_list([95,49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133714, [] )
2704d 190 0 CALL:  prolog:$phrase_list([49,95,107,110,111,119,110,95,118,97,108,117,101,115], _133716, [] )
2705d 190 0 CALL:  prolog:$phrase_list([95,107,110,111,119,110,95,118,97,108,117,101,115], _133718, [] )
2706d 190 0 CALL:  prolog:$phrase_list([107,110,111,119,110,95,118,97,108,117,101,115], _133720, [] )
2707d 190 0 CALL:  prolog:$phrase_list([110,111,119,110,95,118,97,108,117,101,115], _133722, [] )
2708d 190 0 CALL:  prolog:$phrase_list([111,119,110,95,118,97,108,117,101,115], _133724, [] )
2709d 190 0 CALL:  prolog:$phrase_list([119,110,95,118,97,108,117,101,115], _133726, [] )
2710d 190 0 CALL:  prolog:$phrase_list([110,95,118,97,108,117,101,115], _133728, [] )
2711d 190 0 CALL:  prolog:$phrase_list([95,118,97,108,117,101,115], _133730, [] )
2712d 190 0 CALL:  prolog:$phrase_list([118,97,108,117,101,115], _133732, [] )
2713d 190 0 CALL:  prolog:$phrase_list([97,108,117,101,115], _133734, [] )
2714d 190 0 CALL:  prolog:$phrase_list([108,117,101,115], _133736, [] )
2715d 190 0 CALL:  prolog:$phrase_list([117,101,115], _133738, [] )
2716d 190 0 CALL:  prolog:$phrase_list([101,115], _133740, [] )
2717d 190 0 CALL:  prolog:$phrase_list([115], _133742, [] )
2718d 190 0 CALL:  prolog:$phrase_list([], _133744, [] )
2719d 190 0 CALL:  prolog:$absf_trace('    after prefix expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115]] )
2720d 227 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
2721d 227 0 FAIL RETRY:  prolog:$absf_trace('    after prefix expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115]] )
2722d 190 0 CALL:  prolog:atom_codes(_1048360, [47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,49,95,107,110,111,119,110,95,118,97,108,117,101,115] )
2723d 190 0 TRY_OR 
2724d 190 0 CALL:  prolog:expand_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', _1048359 )
2725d 190 0 CALL:  prolog:$absf_trace('     after shell globbing: ~w', [['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values']] )
2726d 225 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
2727d 225 0 FAIL RETRY:  prolog:$absf_trace('     after shell globbing: ~w', [['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values']] )
2728d 190 0 CALL:  lists:member(_1048361, ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'] )
2729d 224 0 CALL:  prolog:real_path('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', _132964 )
2730d 224 0 CALL:  prolog:$absf_trace('      after canonical path name: ~a', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'] )
2731d 233 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
2732d 233 0 FAIL RETRY:  prolog:$absf_trace('      after canonical path name: ~a', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'] )
2733d 224 0 CALL:  prolog:$check_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', txt, exist )
2734d 234 0 FAIL RETRY:  prolog:$check_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', txt, exist )
2735d 234 0 FAIL RETRY:  prolog:$check_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', txt, exist )
2736d 234 0 CALL:  prolog:$access_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', exist )
2737d 234 0 FAIL RETRY:  prolog:$check_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', txt, exist )
2738d 224 0 CALL:  prolog:$access_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', exist )
2739d 224 0 FAIL RETRY:  lists:member(_1048361, ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values'] )
2740d 190 0 CALL:  lists:member(_1048361, [] )
2741d 241 0 CALL:  prolog:$absf_trace(' !------- failed.', [] )
2742d 265 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
2743d 265 0 FAIL RETRY:  prolog:$absf_trace(' !------- failed.', [] )
2744d 241 0 CALL:  prolog:set_prolog_flag(fileerrors, true )
2745d 241 0 CALL:  prolog:set_prolog_flag(verbose_file_search, false )
2746d 241 0 CALL:  prolog:set_prolog_flag(file_name_variables, false )
2747d 241 0 CALL:  prolog:arg(1, t(no), _133753 )
2749d 190 0 FAIL RETRY:  problog_lfi:init_one_query(1, training )
2750d 181 0 CALL:  prolog:$current_choice_point(_1048388 )
2751d 181 0 CALL:  completion:propagate_evidence(1, training )
+s 0x5602af256100
 @0x7efdd88a3198 0
+s 0x5602af2558b0
 @0x7efdd88a3198 0
- 0x5602af256100
 @0x7efdd88a3198 181
2752d 196 0 TRY_OR 
2753d 211 0 CALL:  prolog:$current_choice_point(_1048372 )
2754d 211 0 CALL:  prolog:current_predicate(user:known/3 )
2755d 211 0 CALL:  prolog:$yap_strip_module(user:known/3, _1048358, _1048357 )
2756d 211 0 CALL:  prolog:must_bind_to_type(predicate_indicator, known/3 )
2757d 211 0 TRY_OR 
2758d 234 0 CALL:  error:may_bind_to_type(predicate_indicator, known/3 )
2759d 243 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, known/3 )
2760d 234 0 TRY_OR 
2762d 234 0 CALL:  error:may_bind_to_type(atom, known )
2763d 251 0 FAIL RETRY:  error:may_bind_to_type(atom, known )
2764d 234 0 CALL:  error:may_bind_to_type(integer, 3 )
2765d 243 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
2766d 211 0 CALL:  prolog:$c_i_predicate(known/3, user )
2767d 211 0 TRY_OR 
2768d 228 0 CALL:  prolog:ground(known/3 )
2769d 211 0 CALL:  prolog:functor(_132954, known, 3 )
2770d 211 0 CALL:  prolog:current_predicate(known, user:known(_132955,_132956,_132957) )
2771d 211 0 CALL:  prolog:$yap_strip_module(user:known(_132955,_132956,_132957), _1048354, _1048353 )
2772d 211 0 CALL:  prolog:functor(known(_132955,_132956,_132957), known, _1048352 )
2773d 211 0 TRY_OR 
2774d 230 0 CALL:  prolog:$current_predicate(known, user, known(_132955,_132956,_132957), user )
2775d 196 0 FAIL RETRY:  completion:propagate_evidence(1, training )
2776d 181 0 CALL:  prolog:eraseall(rules )
+s 0x5602af254ec0
 @0x7efdd88a3198 0
2777d 181 0 CALL:  prolog:eraseall(unpropagated_rules )
+s 0x5602af232f80
 @0x7efdd88a3198 0
2778d 181 0 CALL:  prolog:eraseall(known_atoms )
+s 0x5602af233030
 @0x7efdd88a3198 0
2779d 181 0 CALL:  grounder:grounder_reset
2780d 181 0 CALL:  prolog:eraseall(reachable )
+s 0x5602af2330e0
 @0x7efdd88a3198 0
2781d 181 0 TRY_OR 
2782d 226 0 CALL:  prolog:==(training, test )
2784d 181 0 CALL:  logger:logger_start_timer(train_bdd_script_generation )
2785d 181 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation, _1048348 )
2786d 181 0 TRY_OR 
2787d 236 0 CALL:  prolog:bb_get(logger:logger_start_time_train_bdd_script_generation, null )
2788d 181 0 CALL:  prolog:statistics(walltime, [_132958,_132960] )
+s 0x5602af233190
 @0x7efdd88a3198 0
+s 0x5602af252fb0
 @0x7efdd88a3198 0
- 0x5602af252fb0
 @0x7efdd88a3198 181
+s 0x5602aebb37a0
 @0x7efdd88a3198 0
+s 0x5602af2555a0
 @0x7efdd88a3198 0
- 0x5602af233190
 @0x7efdd88a3198 181
2789d 181 0 CALL:  prolog:$walltime(_132958, _132960 )
2790d 181 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation, 290174 )
2791d 181 0 CALL:  logger:logger_start_timer(train_bdd_script_generation_grounding )
2792d 181 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_grounding, _1048348 )
2793d 181 0 TRY_OR 
2794d 236 0 CALL:  prolog:bb_get(logger:logger_start_time_train_bdd_script_generation_grounding, null )
2795d 181 0 CALL:  prolog:statistics(walltime, [_132968,_132970] )
2796d 181 0 CALL:  prolog:$walltime(_132968, _132970 )
2797d 181 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_grounding, 290211 )
2798d 181 0 CALL:  print_learning:format_learning(5, d, [] )
2799d 228 0 CALL:  flags:problog_flag(verbosity_learning, _1048338 )
2800d 228 0 CALL:  gflags:flag_get(verbosity_learning, _1048338 )
2801d 228 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_132977), _132978 )
2802d 228 0 CALL:  prolog:>=(5, 5 )
2803d 181 0 CALL:  prolog:format(d, print_learning:[] )
2804d 181 0 CALL:  prolog:flush_output(user )
d2805d 181 0 TRY_OR 
2806d 226 0 CALL:  user:known(1, _1048361, _1048359 )
2807d 226 0 TRY_OR 
2808d 234 0 CALL:  prolog:catch(completion:grounder_compute_reachable_atoms(alarm,1,_132988), _1048357, completion:fail )
2809d 234 0 CALL:  prolog:$catch(completion:grounder_compute_reachable_atoms(alarm,1,_132988), _1048357, completion:fail )
2810d 244 0 CALL:  prolog:$execute(completion:grounder_compute_reachable_atoms(alarm,1,_132988) )
+s 0x5602af233410
 @0x7efdd88a31c8 0
2811d 244 0 CALL:  prolog:$call(completion:grounder_compute_reachable_atoms(alarm,1,_132988), 244, completion:grounder_compute_reachable_atoms(alarm,1,_132988), user )
2812d 261 0 FAIL RETRY:  prolog:$call(completion:grounder_compute_reachable_atoms(alarm,1,_132988), 244, completion:grounder_compute_reachable_atoms(alarm,1,_132988), user )
2813d 244 0 CALL:  prolog:$call(grounder_compute_reachable_atoms(alarm,1,_132988), 244, completion:grounder_compute_reachable_atoms(alarm,1,_132988), completion )
2814d 272 0 FAIL RETRY:  prolog:$call(grounder_compute_reachable_atoms(alarm,1,_132988), 244, completion:grounder_compute_reachable_atoms(alarm,1,_132988), completion )
2815d 244 0 CALL:  prolog:$execute0(grounder_compute_reachable_atoms(alarm,1,_132988), completion )
2816d 244 0 CALL:  completion:grounder_compute_reachable_atoms(alarm, 1, _132988 )
2817d 244 0 CALL:  prolog:$undefp([completion|grounder_compute_reachable_atoms(alarm,1,_132988)], error )
2818d 244 0 CALL:  prolog:yap_flag(unknown, error, fail )
2819d 244 0 CALL:  prolog:$stop_creeping(_1048301 )
2820d 244 0 TRY_OR 
2821d 285 0 CALL:  prolog:$undefp_search(completion:grounder_compute_reachable_atoms(alarm,1,_132988), _133002:_133003 )
2822d 294 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_133005,_133006,_133007,_133008), user )
2823d 294 0 FAIL RETRY:  prolog:$undefp_search(completion:grounder_compute_reachable_atoms(alarm,1,_132988), _133002:_133003 )
2824d 285 0 CALL:  prolog:expand_goal(completion:grounder_compute_reachable_atoms(alarm,1,_132988), _133002:_133003 )
2825d 285 0 CALL:  prolog:$expand_meta_call(completion:grounder_compute_reachable_atoms(alarm,1,_132988), [], _133002:_133003 )
2826d 285 0 CALL:  prolog:source_module(_133004 )
2827d 285 0 CALL:  prolog:$yap_strip_module(user:completion:grounder_compute_reachable_atoms(alarm,1,_132988), _1048281, _133008 )
2828d 285 0 CALL:  prolog:$expand_goals(grounder_compute_reachable_atoms(alarm,1,_132988), _1048280, _1048282, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(alarm,1,_132988)) )
2829d 309 0 FAIL RETRY:  prolog:$expand_goals(grounder_compute_reachable_atoms(alarm,1,_132988), _1048280, _1048282, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(alarm,1,_132988)) )
2830d 309 0 FAIL RETRY:  prolog:$expand_goals(grounder_compute_reachable_atoms(alarm,1,_132988), _1048280, _1048282, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(alarm,1,_132988)) )
2831d 309 0 FAIL RETRY:  prolog:$expand_goals(grounder_compute_reachable_atoms(alarm,1,_132988), _1048280, _1048282, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(alarm,1,_132988)) )
2832d 285 0 CALL:  prolog:$yap_strip_module(completion:grounder_compute_reachable_atoms(alarm,1,_132988), _133015, _133016 )
2833d 285 0 CALL:  prolog:$expand_goal(grounder_compute_reachable_atoms(alarm,1,_132988), _1048280, _1048282, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(alarm,1,_132988)) )
2834d 285 0 CALL:  prolog:$yap_strip_module(completion:grounder_compute_reachable_atoms(alarm,1,_132988), _133020, _133021 )
2835d 285 0 CALL:  prolog:$user_expansion(completion:grounder_compute_reachable_atoms(alarm,1,_132988), _133026:_133027 )
2836d 319 0 CALL:  prolog:_user_expand_goal(completion:grounder_compute_reachable_atoms(alarm,1,_132988), _133029:_133030 )
2840d 319 0 FAIL RETRY:  prolog:$user_expansion(completion:grounder_compute_reachable_atoms(alarm,1,_132988), _133026:_133027 )
2841d 285 0 CALL:  prolog:$import_expansion(completion:grounder_compute_reachable_atoms(alarm,1,_132988), _133029:_133030 )
2842d 318 0 CALL:  prolog:$imported_predicate(grounder_compute_reachable_atoms(alarm,1,_132988), completion, _133030, _133029 )
2843d 334 0 CALL:  prolog:$is_system_predicate(grounder_compute_reachable_atoms(alarm,1,_132988), prolog )
2844d 334 0 FAIL RETRY:  prolog:$imported_predicate(grounder_compute_reachable_atoms(alarm,1,_132988), completion, _133030, _133029 )
2845d 318 0 CALL:  prolog:$undefined(grounder_compute_reachable_atoms(alarm,1,_132988), completion )
2846d 318 0 CALL:  prolog:$get_undefined_predicates(grounder_compute_reachable_atoms(alarm,1,_132988), completion, _133030, _133029 )
2847d 341 0 CALL:  prolog:recorded('$import', '$import'(_133032,completion,_133034,grounder_compute_reachable_atoms(alarm,1,_132988),_133036,_133037), _1048224 )
2848d 341 0 CALL:  prolog:$continue_imported(_133029, grounder, _133030, grounder_compute_reachable_atoms(alarm,1,_132988) )
2849d 352 0 CALL:  prolog:$pred_exists(grounder_compute_reachable_atoms(alarm,1,_132988), grounder )
2850d 341 0 CALL:  prolog:\=(grounder, completion )
2851d 285 0 CALL:  prolog:$meta_expansion(grounder:grounder_compute_reachable_atoms(alarm,1,_132988), completion, [], _1048269 )
2852d 317 0 CALL:  prolog:$yap_strip_module(grounder:grounder_compute_reachable_atoms(alarm,1,_132988), _133054, _1048248 )
2853d 317 0 CALL:  prolog:functor(grounder_compute_reachable_atoms(alarm,1,_132988), _133057, _133058 )
2854d 317 0 CALL:  prolog:$meta_predicate(grounder_compute_reachable_atoms, grounder, 3, _1048249 )
2855d 317 0 FAIL RETRY:  prolog:$meta_expansion(grounder:grounder_compute_reachable_atoms(alarm,1,_132988), completion, [], _1048269 )
2856d 285 0 CALL:  prolog:$yap_strip_module(grounder:grounder_compute_reachable_atoms(alarm,1,_132988), _133054, _133055 )
2857d 285 0 CALL:  prolog:$yap_strip_module(grounder:grounder_compute_reachable_atoms(alarm,1,_132988), _133056, _133057 )
2858d 285 0 CALL:  prolog:$end_goal_expansion(grounder_compute_reachable_atoms(alarm,1,_132988), _1048280, _1048282, completion, user, grounder, completion:grounder_compute_reachable_atoms(alarm,1,_132988) )
2859d 285 0 CALL:  prolog:$match_mod(grounder_compute_reachable_atoms(alarm,1,_132988), completion, user, grounder, _1048280 )
2860d 285 0 CALL:  prolog:$is_system_predicate(grounder_compute_reachable_atoms(alarm,1,_132988), grounder )
2861d 285 0 TRY_OR 
2862d 323 0 CALL:  prolog:==(grounder, completion )
2864d 285 0 CALL:  prolog:$c_built_in(grounder:grounder_compute_reachable_atoms(alarm,1,_132988), grounder, completion:grounder_compute_reachable_atoms(alarm,1,_132988), _1048271 )
2865d 316 0 CALL:  prolog:get_value('$c_arith', true )
2866d 285 0 CALL:  prolog:do_c_built_in(grounder:grounder_compute_reachable_atoms(alarm,1,_132988), grounder, completion:grounder_compute_reachable_atoms(alarm,1,_132988), _1048271 )
2867d 327 0 CALL:  prolog:$yap_strip_module(grounder:grounder_compute_reachable_atoms(alarm,1,_132988), _133061, _133062 )
2868d 327 0 FAIL RETRY:  prolog:do_c_built_in(grounder:grounder_compute_reachable_atoms(alarm,1,_132988), grounder, completion:grounder_compute_reachable_atoms(alarm,1,_132988), _1048271 )
2869d 327 0 CALL:  prolog:$compop(grounder:grounder_compute_reachable_atoms(alarm,1,_132988), _1048233, _1048234, _1048236 )
2870d 327 0 FAIL RETRY:  prolog:do_c_built_in(grounder:grounder_compute_reachable_atoms(alarm,1,_132988), grounder, completion:grounder_compute_reachable_atoms(alarm,1,_132988), _1048271 )
2871d 327 0 CALL:  prolog:$yap_strip_module(grounder:grounder:grounder_compute_reachable_atoms(alarm,1,_132988), _133064, _133065 )
2872d 327 0 CALL:  prolog:$match_mod(grounder_compute_reachable_atoms(alarm,1,_132988), completion, user, grounder, _1048282 )
2873d 327 0 CALL:  prolog:$is_system_predicate(grounder_compute_reachable_atoms(alarm,1,_132988), grounder )
2874d 327 0 TRY_OR 
2875d 343 0 CALL:  prolog:==(grounder, completion )
2877d 327 0 CALL:  prolog:$yap_strip_module(completion:grounder:grounder_compute_reachable_atoms(alarm,1,_132988), _133002, _133003 )
2878d 327 0 TRY_OR 
2879d 335 0 CALL:  prolog:\==(completion, grounder )
2880d 327 0 CALL:  prolog:\=(grounder_compute_reachable_atoms(alarm,1,_132988), fail )
2881d 244 0 CALL:  prolog:yap_flag(unknown, _1048300, error )
2882d 244 0 TRY_OR 
2883d 282 0 CALL:  prolog:==(false, true )
2885d 244 0 CALL:  prolog:$execute0(grounder_compute_reachable_atoms(alarm,1,_132988), grounder )
2886d 244 0 CALL:  grounder:grounder_compute_reachable_atoms(alarm, 1, _132988 )
2887d 244 0 CALL:  prolog:bb_put(grounder:dep_proven, false )
+s 0x5602af259d40
 @0x7efdd88a31d8 0
2888d 244 0 TRY_OR 
2889d 267 0 CALL:  grounder:tabled_meta_interpreter(alarm, 1 )
+s 0x5602af253c00
 @0x7efdd88a31d8 0
+s 0x5602af25aaf0
 @0x7efdd88a31d8 0
- 0x5602af25aaf0
 @0x7efdd88a31d8 267
+s 0x5602af2599b0
 @0x7efdd88a31d8 0
+s 0x5602af252910
 @0x7efdd88a31d8 0
- 0x5602af253c00
 @0x7efdd88a31d8 267
2890d 276 0 CALL:  prolog:writeln(1:alarm )
2891d 276 0 FAIL RETRY:  grounder:tabled_meta_interpreter(alarm, 1 )
2892d 276 0 CALL:  prolog:predicate_property(grounder:alarm, built_in )
2893d 276 0 CALL:  prolog:strip_module(grounder:alarm, _133078, _133079 )
2894d 276 0 CALL:  prolog:$predicate_property2(alarm, built_in, grounder )
2895d 292 0 FAIL RETRY:  prolog:$predicate_property2(alarm, built_in, grounder )
2896d 292 0 FAIL RETRY:  prolog:$predicate_property2(alarm, built_in, grounder )
2897d 292 0 CALL:  prolog:$pred_exists(alarm, grounder )
2898d 292 0 FAIL RETRY:  prolog:$predicate_property2(alarm, built_in, grounder )
2899d 276 0 CALL:  prolog:$get_undefined_pred(alarm, grounder, _1048285, _1048286 )
2900d 276 0 CALL:  prolog:$get_undefined_predicates(alarm, grounder, _1048285, _1048286 )
2901d 306 0 CALL:  prolog:recorded('$import', '$import'(_133081,grounder,_133083,alarm,_133085,_133086), _1048259 )
2902d 306 0 FAIL RETRY:  prolog:$get_undefined_predicates(alarm, grounder, _1048285, _1048286 )
2903d 306 0 CALL:  prolog:$pred_exists(alarm, user )
2904d 306 0 FAIL RETRY:  prolog:$get_undefined_predicates(alarm, grounder, _1048285, _1048286 )
2905d 306 0 CALL:  prolog:recorded('$dialect', swi, _1048254 )
2906d 306 0 FAIL RETRY:  prolog:$get_undefined_predicates(alarm, grounder, _1048285, _1048286 )
2907d 276 0 CALL:  prolog:$parent_module(grounder, _1048272 )
2908d 276 0 FAIL RETRY:  grounder:tabled_meta_interpreter(alarm, 1 )
2909d 276 0 CALL:  prolog:ground(alarm )
2910d 267 0 TRY_OR 
2911d 294 0 CALL:  prolog:recorded(reachable, alarm, _1048289 )
2913d 267 0 CALL:  prolog:recorda(reachable, alarm, _1048291 )
+s 0x5602af2335d0
 @0x7efdd88a31d8 0
2914d 267 0 CALL:  grounder:tabled_meta_interpreter_aux_ground_atom(alarm, 1 )
+s 0x5602af25b010
 @0x7efdd88a31e8 0
+s 0x5602aec4d440
 @0x7efdd88a31e8 0
- 0x5602af25b010
 @0x7efdd88a31e8 267
2915d 276 0 CALL:  problog:probabilistic_fact(_1048292, alarm, _1048293 )
2916d 293 0 CALL:  prolog:ground(alarm )
2917d 276 0 CALL:  prolog:=..(alarm, [_133075|_133076] )
2918d 276 0 CALL:  prolog:atomic_concat(problog_, alarm, _1048272 )
2919d 276 0 CALL:  lists:append([_133079], [_133081], _1048271 )
2920d 276 0 CALL:  lists:append([], [_133081], _133084 )
2921d 276 0 CALL:  prolog:=..(_1048274, [problog_alarm,_133079,_133081] )
2922d 276 0 CALL:  prolog:length([_133079,_133081], _1048273 )
2923d 276 0 CALL:  prolog:$skip_list([_133079,_133081], _1048273, _133090, _133091 )
2924d 276 0 CALL:  prolog:==([], [] )
2925d 276 0 CALL:  prolog:current_predicate(problog:problog_alarm/2 )
2926d 276 0 CALL:  prolog:$yap_strip_module(problog:problog_alarm/2, _1048268, _1048267 )
2927d 276 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_alarm/2 )
2928d 276 0 TRY_OR 
2929d 324 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_alarm/2 )
2930d 333 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_alarm/2 )
2931d 324 0 TRY_OR 
2933d 324 0 CALL:  error:may_bind_to_type(atom, problog_alarm )
2934d 341 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_alarm )
2935d 324 0 CALL:  error:may_bind_to_type(integer, 2 )
2936d 333 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
2937d 276 0 CALL:  prolog:$c_i_predicate(problog_alarm/2, problog )
2938d 276 0 TRY_OR 
2939d 318 0 CALL:  prolog:ground(problog_alarm/2 )
2940d 276 0 CALL:  prolog:functor(_133098, problog_alarm, 2 )
2941d 276 0 CALL:  prolog:current_predicate(problog_alarm, problog:problog_alarm(_133099,_133100) )
2942d 276 0 CALL:  prolog:$yap_strip_module(problog:problog_alarm(_133099,_133100), _1048264, _1048263 )
2943d 276 0 CALL:  prolog:functor(problog_alarm(_133099,_133100), problog_alarm, _1048262 )
2944d 276 0 TRY_OR 
2945d 320 0 CALL:  prolog:$current_predicate(problog_alarm, problog, problog_alarm(_133099,_133100), user )
2947d 276 0 CALL:  prolog:$imported_predicate(problog_alarm(_133099,_133100), problog, _1048267, _1048268 )
2948d 321 0 CALL:  prolog:$is_system_predicate(problog_alarm(_133099,_133100), prolog )
2949d 321 0 FAIL RETRY:  prolog:$imported_predicate(problog_alarm(_133099,_133100), problog, _1048267, _1048268 )
2950d 276 0 CALL:  prolog:$undefined(problog_alarm(_133099,_133100), problog )
2951d 276 0 CALL:  prolog:$get_undefined_predicates(problog_alarm(_133099,_133100), problog, _1048267, _1048268 )
2952d 328 0 CALL:  prolog:recorded('$import', '$import'(_133105,problog,_133107,problog_alarm(_133099,_133100),_133109,_133110), _1048237 )
2953d 328 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_133099,_133100), problog, _1048267, _1048268 )
2954d 328 0 CALL:  prolog:$pred_exists(problog_alarm(_133099,_133100), user )
2955d 328 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_133099,_133100), problog, _1048267, _1048268 )
2956d 328 0 CALL:  prolog:recorded('$dialect', swi, _1048232 )
2957d 328 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_133099,_133100), problog, _1048267, _1048268 )
2958d 276 0 CALL:  prolog:$parent_module(problog, _1048250 )
2959d 276 0 FAIL RETRY:  grounder:tabled_meta_interpreter_aux_ground_atom(alarm, 1 )
2960d 267 0 CALL:  prolog:current_predicate(user:myclause/3 )
2961d 267 0 CALL:  prolog:$yap_strip_module(user:myclause/3, _1048294, _1048293 )
2962d 267 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/3 )
2963d 267 0 TRY_OR 
2964d 298 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/3 )
2965d 307 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/3 )
2966d 298 0 TRY_OR 
2968d 298 0 CALL:  error:may_bind_to_type(atom, myclause )
2969d 315 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
2970d 298 0 CALL:  error:may_bind_to_type(integer, 3 )
2971d 307 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
2972d 267 0 CALL:  prolog:$c_i_predicate(myclause/3, user )
2973d 267 0 TRY_OR 
2974d 292 0 CALL:  prolog:ground(myclause/3 )
2975d 267 0 CALL:  prolog:functor(_133081, myclause, 3 )
2976d 267 0 CALL:  prolog:current_predicate(myclause, user:myclause(_133082,_133083,_133084) )
2977d 267 0 CALL:  prolog:$yap_strip_module(user:myclause(_133082,_133083,_133084), _1048290, _1048289 )
2978d 267 0 CALL:  prolog:functor(myclause(_133082,_133083,_133084), myclause, _1048288 )
2979d 267 0 TRY_OR 
2980d 294 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_133082,_133083,_133084), user )
2981d 294 0 CALL:  user:myclause(1, alarm, _1048301 )
2982d 294 0 CALL:  prolog:current_predicate(user:myclause/2 )
2983d 294 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048268, _1048267 )
2984d 294 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
2985d 294 0 TRY_OR 
2986d 324 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
2987d 333 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
2988d 324 0 TRY_OR 
2990d 324 0 CALL:  error:may_bind_to_type(atom, myclause )
2991d 341 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
2992d 324 0 CALL:  error:may_bind_to_type(integer, 2 )
2993d 333 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
2994d 294 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
2995d 294 0 TRY_OR 
2996d 318 0 CALL:  prolog:ground(myclause/2 )
2997d 294 0 CALL:  prolog:functor(_133094, myclause, 2 )
2998d 294 0 CALL:  prolog:current_predicate(myclause, user:myclause(_133095,_133096) )
2999d 294 0 CALL:  prolog:$yap_strip_module(user:myclause(_133095,_133096), _1048264, _1048263 )
3000d 294 0 CALL:  prolog:functor(myclause(_133095,_133096), myclause, _1048262 )
3001d 294 0 TRY_OR 
3002d 320 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_133095,_133096), user )
3003d 320 0 CALL:  user:myclause(alarm, _1048301 )
+s 0x5602af233660
 @0x7efdd88a31e8 0
+s 0x5602af25bea0
 @0x7efdd88a31e8 0
- 0x5602af25bea0
 @0x7efdd88a31e8 320
+s 0x5602af25b010
 @0x7efdd88a31e8 0
+s 0x5602af25bea0
 @0x7efdd88a31e8 0
+s 0x5602af2334c0
 @0x7efdd88a31e8 0
- 0x5602af233660
 @0x7efdd88a31e8 320
3004d 329 0 CALL:  grounder:tabled_meta_interpreter(burglary, 1 )
3005d 338 0 CALL:  prolog:writeln(1:burglary )
3006d 338 0 FAIL RETRY:  grounder:tabled_meta_interpreter(burglary, 1 )
3007d 338 0 CALL:  prolog:predicate_property(grounder:burglary, built_in )
3008d 338 0 CALL:  prolog:strip_module(grounder:burglary, _133103, _133104 )
3009d 338 0 CALL:  prolog:$predicate_property2(burglary, built_in, grounder )
3010d 354 0 FAIL RETRY:  prolog:$predicate_property2(burglary, built_in, grounder )
3011d 354 0 FAIL RETRY:  prolog:$predicate_property2(burglary, built_in, grounder )
3012d 354 0 CALL:  prolog:$pred_exists(burglary, grounder )
3013d 354 0 FAIL RETRY:  prolog:$predicate_property2(burglary, built_in, grounder )
3014d 338 0 CALL:  prolog:$get_undefined_pred(burglary, grounder, _1048223, _1048224 )
3015d 338 0 CALL:  prolog:$get_undefined_predicates(burglary, grounder, _1048223, _1048224 )
3016d 368 0 CALL:  prolog:recorded('$import', '$import'(_133106,grounder,_133108,burglary,_133110,_133111), _1048197 )
3017d 368 0 FAIL RETRY:  prolog:$get_undefined_predicates(burglary, grounder, _1048223, _1048224 )
3018d 368 0 CALL:  prolog:$pred_exists(burglary, user )
3019d 338 0 TRY_OR 
3021d 338 0 CALL:  prolog:$predicate_property(burglary, user, user, built_in )
+s 0x5602af239da0
 @0x7efdd88a31f8 0
+s 0x5602af2545f0
 @0x7efdd88a31f8 0
- 0x5602af2545f0
 @0x7efdd88a31f8 338
+s 0x5602af252380
 @0x7efdd88a31f8 0
+s 0x5602af20f790
 @0x7efdd88a31f8 0
+s 0x5602af254a00
 @0x7efdd88a31f8 0
- 0x5602af239da0
 @0x7efdd88a31f8 338
3022d 338 0 CALL:  prolog:$is_system_predicate(burglary, user )
3023d 338 0 FAIL RETRY:  grounder:tabled_meta_interpreter(burglary, 1 )
3024d 338 0 CALL:  prolog:ground(burglary )
3025d 329 0 TRY_OR 
3026d 356 0 CALL:  prolog:recorded(reachable, burglary, _1048227 )
3028d 329 0 CALL:  prolog:recorda(reachable, burglary, _1048229 )
+s 0x5602af233820
 @0x7efdd88a31f8 0
3029d 329 0 CALL:  grounder:tabled_meta_interpreter_aux_ground_atom(burglary, 1 )
3030d 338 0 CALL:  problog:probabilistic_fact(_1048230, burglary, _1048231 )
3031d 355 0 CALL:  prolog:ground(burglary )
3032d 338 0 CALL:  prolog:=..(burglary, [_133100|_133101] )
3033d 338 0 CALL:  prolog:atomic_concat(problog_, burglary, _1048210 )
3034d 338 0 CALL:  lists:append([_133104], [_133106], _1048209 )
3035d 338 0 CALL:  lists:append([], [_133106], _133109 )
3036d 338 0 CALL:  prolog:=..(_1048212, [problog_burglary,_133104,_133106] )
3037d 338 0 CALL:  prolog:length([_133104,_133106], _1048211 )
3038d 338 0 CALL:  prolog:$skip_list([_133104,_133106], _1048211, _133115, _133116 )
3039d 338 0 CALL:  prolog:==([], [] )
3040d 338 0 CALL:  prolog:current_predicate(problog:problog_burglary/2 )
3041d 338 0 CALL:  prolog:$yap_strip_module(problog:problog_burglary/2, _1048206, _1048205 )
3042d 338 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_burglary/2 )
3043d 338 0 TRY_OR 
3044d 386 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_burglary/2 )
3045d 395 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_burglary/2 )
3046d 386 0 TRY_OR 
3048d 386 0 CALL:  error:may_bind_to_type(atom, problog_burglary )
3049d 403 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_burglary )
3050d 386 0 CALL:  error:may_bind_to_type(integer, 2 )
3051d 395 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
3052d 338 0 CALL:  prolog:$c_i_predicate(problog_burglary/2, problog )
3053d 338 0 TRY_OR 
3054d 380 0 CALL:  prolog:ground(problog_burglary/2 )
3055d 338 0 CALL:  prolog:functor(_133123, problog_burglary, 2 )
3056d 338 0 CALL:  prolog:current_predicate(problog_burglary, problog:problog_burglary(_133124,_133125) )
3057d 338 0 CALL:  prolog:$yap_strip_module(problog:problog_burglary(_133124,_133125), _1048202, _1048201 )
3058d 338 0 CALL:  prolog:functor(problog_burglary(_133124,_133125), problog_burglary, _1048200 )
3059d 338 0 TRY_OR 
3060d 382 0 CALL:  prolog:$current_predicate(problog_burglary, problog, problog_burglary(_133124,_133125), user )
3061d 382 0 CALL:  problog:problog_burglary(_133104, _133106 )
3062d 382 0 CALL:  prolog:is(_1048230, 3, -1.249826789005093 )
3063d 329 0 CALL:  prolog:bb_put(grounder:dep_proven, true )
3064d 329 0 FAIL RETRY:  user:myclause(alarm, _1048301 )
3065d 320 0 CALL:  grounder:tabled_meta_interpreter(earthquake, 1 )
3066d 329 0 CALL:  prolog:writeln(1:earthquake )
3067d 329 0 FAIL RETRY:  grounder:tabled_meta_interpreter(earthquake, 1 )
3068d 329 0 CALL:  prolog:predicate_property(grounder:earthquake, built_in )
3069d 329 0 CALL:  prolog:strip_module(grounder:earthquake, _133103, _133104 )
3070d 329 0 CALL:  prolog:$predicate_property2(earthquake, built_in, grounder )
3071d 345 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
3072d 345 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
3073d 345 0 CALL:  prolog:$pred_exists(earthquake, grounder )
3074d 345 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
3075d 329 0 CALL:  prolog:$get_undefined_pred(earthquake, grounder, _1048232, _1048233 )
3076d 329 0 CALL:  prolog:$get_undefined_predicates(earthquake, grounder, _1048232, _1048233 )
3077d 359 0 CALL:  prolog:recorded('$import', '$import'(_133106,grounder,_133108,earthquake,_133110,_133111), _1048206 )
3078d 359 0 FAIL RETRY:  prolog:$get_undefined_predicates(earthquake, grounder, _1048232, _1048233 )
3079d 359 0 CALL:  prolog:$pred_exists(earthquake, user )
3080d 329 0 TRY_OR 
3082d 329 0 CALL:  prolog:$predicate_property(earthquake, user, user, built_in )
3083d 329 0 CALL:  prolog:$is_system_predicate(earthquake, user )
3084d 329 0 FAIL RETRY:  grounder:tabled_meta_interpreter(earthquake, 1 )
3085d 329 0 CALL:  prolog:ground(earthquake )
3086d 320 0 TRY_OR 
3087d 347 0 CALL:  prolog:recorded(reachable, earthquake, _1048236 )
+s 0x5602af25e100
 @0x7efdd88a31f8 0
+s 0x5602af25db70
 @0x7efdd88a31f8 0
- 0x5602af25db70
 @0x7efdd88a31f8 347
+s 0x5602aec70ef0
 @0x7efdd88a31f8 0
+s 0x5602af233660
 @0x7efdd88a31f8 0
- 0x5602af25e100
 @0x7efdd88a31f8 347
3089d 320 0 CALL:  prolog:recorda(reachable, earthquake, _1048238 )
+s 0x5602af2339c0
 @0x7efdd88a31f8 0
+s 0x5602af233a50
 @0x7efdd88a31f8 0
- 0x5602aec70ef0
 @0x7efdd88a31f8 320
3090d 320 0 CALL:  grounder:tabled_meta_interpreter_aux_ground_atom(earthquake, 1 )
3091d 329 0 CALL:  problog:probabilistic_fact(_1048239, earthquake, _1048240 )
3092d 346 0 CALL:  prolog:ground(earthquake )
3093d 329 0 CALL:  prolog:=..(earthquake, [_133100|_133101] )
3094d 329 0 CALL:  prolog:atomic_concat(problog_, earthquake, _1048219 )
3095d 329 0 CALL:  lists:append([_133104], [_133106], _1048218 )
3096d 329 0 CALL:  lists:append([], [_133106], _133109 )
3097d 329 0 CALL:  prolog:=..(_1048221, [problog_earthquake,_133104,_133106] )
3098d 329 0 CALL:  prolog:length([_133104,_133106], _1048220 )
3099d 329 0 CALL:  prolog:$skip_list([_133104,_133106], _1048220, _133115, _133116 )
3100d 329 0 CALL:  prolog:==([], [] )
3101d 329 0 CALL:  prolog:current_predicate(problog:problog_earthquake/2 )
3102d 329 0 CALL:  prolog:$yap_strip_module(problog:problog_earthquake/2, _1048215, _1048214 )
3103d 329 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_earthquake/2 )
3104d 329 0 TRY_OR 
3105d 377 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_earthquake/2 )
3106d 386 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_earthquake/2 )
3107d 377 0 TRY_OR 
3109d 377 0 CALL:  error:may_bind_to_type(atom, problog_earthquake )
3110d 394 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_earthquake )
3111d 377 0 CALL:  error:may_bind_to_type(integer, 2 )
3112d 386 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
3113d 329 0 CALL:  prolog:$c_i_predicate(problog_earthquake/2, problog )
3114d 329 0 TRY_OR 
3115d 371 0 CALL:  prolog:ground(problog_earthquake/2 )
3116d 329 0 CALL:  prolog:functor(_133123, problog_earthquake, 2 )
3117d 329 0 CALL:  prolog:current_predicate(problog_earthquake, problog:problog_earthquake(_133124,_133125) )
3118d 329 0 CALL:  prolog:$yap_strip_module(problog:problog_earthquake(_133124,_133125), _1048211, _1048210 )
3119d 329 0 CALL:  prolog:functor(problog_earthquake(_133124,_133125), problog_earthquake, _1048209 )
3120d 329 0 TRY_OR 
3121d 373 0 CALL:  prolog:$current_predicate(problog_earthquake, problog, problog_earthquake(_133124,_133125), user )
3122d 373 0 CALL:  problog:problog_earthquake(_133104, _133106 )
3123d 373 0 CALL:  prolog:is(_1048239, 3, -0.6596650473806767 )
3124d 320 0 CALL:  prolog:bb_put(grounder:dep_proven, true )
3126d 294 0 CALL:  prolog:$imported_predicate(myclause(_133095,_133096), user, _1048267, _1048268 )
3127d 321 0 CALL:  prolog:$is_system_predicate(myclause(_133095,_133096), prolog )
3128d 321 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_133095,_133096), user, _1048267, _1048268 )
3129d 294 0 CALL:  prolog:$undefined(myclause(_133095,_133096), user )
3131d 267 0 CALL:  prolog:$imported_predicate(myclause(_133082,_133083,_133084), user, _1048293, _1048294 )
3132d 295 0 CALL:  prolog:$is_system_predicate(myclause(_133082,_133083,_133084), prolog )
3133d 295 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_133082,_133083,_133084), user, _1048293, _1048294 )
3134d 267 0 CALL:  prolog:$undefined(myclause(_133082,_133083,_133084), user )
3136d 244 0 CALL:  prolog:bb_delete(grounder:dep_proven, _132988 )
3137d 244 0 TRY_OR 
3138d 258 0 CALL:  prolog:==(244, 244 )
3139d 234 0 TRY_OR 
3140d 242 0 TRY_OR 
3141d 250 0 CALL:  prolog:==(true, true )
3143d 181 0 CALL:  logger:logger_stop_timer(train_bdd_script_generation_grounding )
3144d 181 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_grounding, _1048352 )
3145d 181 0 CALL:  prolog:bb_delete(logger:logger_start_time_train_bdd_script_generation_grounding, _1048355 )
3146d 181 0 CALL:  prolog:statistics(walltime, [_132985,_132987] )
3147d 181 0 CALL:  prolog:$walltime(_132985, _132987 )
3148d 181 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_grounding, null )
3149d 181 0 TRY_OR 
3150d 227 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation_grounding )
3151d 227 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_grounding, _1048341 )
3152d 227 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_grounding, _1048342 )
3153d 227 0 CALL:  prolog:\=(null, null )
3155d 181 0 CALL:  logger:logger_set_variable(train_bdd_script_generation_grounding, 1838 )
3156d 181 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_grounding, _1048351 )
3157d 181 0 TRY_OR 
3158d 233 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_grounding, null )
3159d 181 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation_grounding, 1838 )
3160d 181 0 CALL:  logger:logger_start_timer(train_bdd_script_generation_completion )
3161d 181 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_completion, _1048356 )
3162d 181 0 TRY_OR 
3163d 228 0 CALL:  prolog:bb_get(logger:logger_start_time_train_bdd_script_generation_completion, null )
3164d 181 0 CALL:  prolog:statistics(walltime, [_132998,_133000] )
3165d 181 0 CALL:  prolog:$walltime(_132998, _133000 )
3166d 181 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_completion, 292133 )
3167d 181 0 CALL:  print_learning:format_learning(5, c, [] )
3168d 220 0 CALL:  flags:problog_flag(verbosity_learning, _1048346 )
3169d 220 0 CALL:  gflags:flag_get(verbosity_learning, _1048346 )
3170d 220 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_133007), _133008 )
3171d 220 0 CALL:  prolog:>=(5, 5 )
3172d 181 0 CALL:  prolog:format(c, print_learning:[] )
3173d 181 0 CALL:  prolog:flush_output(user )
1:alarm
1:burglary
1:earthquake
c3174d 181 0 CALL:  prolog:$current_choice_point(_1048365 )
3175d 181 0 CALL:  completion:completion(1 )
3176d 181 0 TRY_OR 
3177d 238 0 CALL:  grounder:grounder_reachable_atom(_1048348 )
3178d 238 0 CALL:  prolog:recorded(reachable, _1048348, _133012 )
+s 0x5602af233ae0
 @0x7efdd88a3198 0
+s 0x5602af233b50
 @0x7efdd88a3198 0
+s 0x5602af233f80
 @0x7efdd88a3198 0
+s 0x5602af25f990
 @0x7efdd88a3198 0
+s 0x5602af233be0
 @0x7efdd88a3198 0
- 0x5602af233ae0
 @0x7efdd88a3198 238
3179d 249 0 CALL:  grounder:grounder_completion_for_atom(earthquake, 1, _1048349 )
3180d 249 0 CALL:  prolog:findall(_133018, grounder: (user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), _1048319 )
3181d 249 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048319 )
+s 0x5602af233c10
 @0x7efdd88a31e8 0
+s 0x5602af25f820
 @0x7efdd88a31e8 0
- 0x5602af25f820
 @0x7efdd88a31e8 249
+s 0x5602af25fbc0
 @0x7efdd88a31e8 0
+s 0x5602af254090
 @0x7efdd88a31e8 0
- 0x5602af233c10
 @0x7efdd88a31e8 249
3182d 273 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048319 )
3183d 249 0 TRY_OR 
3184d 280 0 CALL:  error:has_type(list_or_partial_list, _1048319 )
3185d 280 0 CALL:  error:is_list_or_partial_list(_1048319 )
3186d 280 0 CALL:  prolog:$skip_list(_133035, _1048319, _133036 )
3187d 249 0 CALL:  prolog:$findall(_133018, grounder: (user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), [], _133036 )
3188d 249 0 CALL:  nb:nb_queue(_1048311 )
3189d 249 0 TRY_OR 
3190d 274 0 CALL:  prolog:$execute(grounder: (user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)) )
3191d 274 0 CALL:  prolog:$call(grounder: (user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), 274, grounder: (user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), user )
3192d 285 0 FAIL RETRY:  prolog:$call(grounder: (user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), 274, grounder: (user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), user )
3193d 274 0 CALL:  prolog:$call(user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018), 274, grounder: (user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), grounder )
3194d 274 0 CALL:  prolog:$call(user:myclause(1,earthquake,_133031), 274, grounder: (user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), grounder )
3195d 316 0 FAIL RETRY:  prolog:$call(user:myclause(1,earthquake,_133031), 274, grounder: (user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), grounder )
3196d 274 0 CALL:  prolog:$call(myclause(1,earthquake,_133031), 274, grounder: (user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), user )
3197d 327 0 FAIL RETRY:  prolog:$call(myclause(1,earthquake,_133031), 274, grounder: (user:myclause(1,earthquake,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), user )
3198d 274 0 CALL:  prolog:$execute0(myclause(1,earthquake,_133031), user )
3199d 274 0 CALL:  user:myclause(1, earthquake, _133031 )
3200d 274 0 CALL:  prolog:current_predicate(user:myclause/2 )
3201d 274 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048246, _1048245 )
3202d 274 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
3203d 274 0 TRY_OR 
3204d 346 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
3205d 355 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
3206d 346 0 TRY_OR 
3208d 346 0 CALL:  error:may_bind_to_type(atom, myclause )
3209d 363 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
3210d 346 0 CALL:  error:may_bind_to_type(integer, 2 )
3211d 355 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
3212d 274 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
3213d 274 0 TRY_OR 
3214d 340 0 CALL:  prolog:ground(myclause/2 )
3215d 274 0 CALL:  prolog:functor(_137144, myclause, 2 )
3216d 274 0 CALL:  prolog:current_predicate(myclause, user:myclause(_137145,_137146) )
3217d 274 0 CALL:  prolog:$yap_strip_module(user:myclause(_137145,_137146), _1048242, _1048241 )
3218d 274 0 CALL:  prolog:functor(myclause(_137145,_137146), myclause, _1048240 )
3219d 274 0 TRY_OR 
3220d 342 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_137145,_137146), user )
3221d 342 0 CALL:  user:myclause(earthquake, _133031 )
3223d 274 0 CALL:  prolog:$imported_predicate(myclause(_137145,_137146), user, _1048245, _1048246 )
3224d 343 0 CALL:  prolog:$is_system_predicate(myclause(_137145,_137146), prolog )
3225d 343 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_137145,_137146), user, _1048245, _1048246 )
3226d 274 0 CALL:  prolog:$undefined(myclause(_137145,_137146), user )
3228d 249 0 CALL:  nb:nb_queue_close(queue(0,0,0,0), _133036, [] )
3229d 249 0 CALL:  prolog:\==([], [] )
3230d 249 0 FAIL RETRY:  idb:recorded(reachable, _1048348, _133012 )
3231d 249 0 CALL:  grounder:grounder_completion_for_atom(burglary, 1, _1048349 )
3232d 249 0 CALL:  prolog:findall(_133018, grounder: (user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), _1048319 )
3233d 249 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048319 )
3234d 273 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048319 )
3235d 249 0 TRY_OR 
3236d 280 0 CALL:  error:has_type(list_or_partial_list, _1048319 )
3237d 280 0 CALL:  error:is_list_or_partial_list(_1048319 )
3238d 280 0 CALL:  prolog:$skip_list(_133035, _1048319, _133036 )
3239d 249 0 CALL:  prolog:$findall(_133018, grounder: (user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), [], _133036 )
3240d 249 0 CALL:  nb:nb_queue(_1048311 )
3241d 249 0 TRY_OR 
3242d 274 0 CALL:  prolog:$execute(grounder: (user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)) )
3243d 274 0 CALL:  prolog:$call(grounder: (user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), 274, grounder: (user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), user )
3244d 285 0 FAIL RETRY:  prolog:$call(grounder: (user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), 274, grounder: (user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), user )
3245d 274 0 CALL:  prolog:$call(user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018), 274, grounder: (user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), grounder )
3246d 274 0 CALL:  prolog:$call(user:myclause(1,burglary,_133031), 274, grounder: (user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), grounder )
3247d 316 0 FAIL RETRY:  prolog:$call(user:myclause(1,burglary,_133031), 274, grounder: (user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), grounder )
3248d 274 0 CALL:  prolog:$call(myclause(1,burglary,_133031), 274, grounder: (user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), user )
3249d 327 0 FAIL RETRY:  prolog:$call(myclause(1,burglary,_133031), 274, grounder: (user:myclause(1,burglary,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), user )
3250d 274 0 CALL:  prolog:$execute0(myclause(1,burglary,_133031), user )
3251d 274 0 CALL:  user:myclause(1, burglary, _133031 )
3252d 274 0 CALL:  prolog:current_predicate(user:myclause/2 )
3253d 274 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048246, _1048245 )
3254d 274 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
3255d 274 0 TRY_OR 
3256d 346 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
3257d 355 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
3258d 346 0 TRY_OR 
3260d 346 0 CALL:  error:may_bind_to_type(atom, myclause )
3261d 363 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
3262d 346 0 CALL:  error:may_bind_to_type(integer, 2 )
3263d 355 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
3264d 274 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
3265d 274 0 TRY_OR 
3266d 340 0 CALL:  prolog:ground(myclause/2 )
3267d 274 0 CALL:  prolog:functor(_137144, myclause, 2 )
3268d 274 0 CALL:  prolog:current_predicate(myclause, user:myclause(_137145,_137146) )
3269d 274 0 CALL:  prolog:$yap_strip_module(user:myclause(_137145,_137146), _1048242, _1048241 )
3270d 274 0 CALL:  prolog:functor(myclause(_137145,_137146), myclause, _1048240 )
3271d 274 0 TRY_OR 
3272d 342 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_137145,_137146), user )
3273d 342 0 CALL:  user:myclause(burglary, _133031 )
3275d 274 0 CALL:  prolog:$imported_predicate(myclause(_137145,_137146), user, _1048245, _1048246 )
3276d 343 0 CALL:  prolog:$is_system_predicate(myclause(_137145,_137146), prolog )
3277d 343 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_137145,_137146), user, _1048245, _1048246 )
3278d 274 0 CALL:  prolog:$undefined(myclause(_137145,_137146), user )
3280d 249 0 CALL:  nb:nb_queue_close(queue(0,0,0,0), _133036, [] )
3281d 249 0 CALL:  prolog:\==([], [] )
3282d 249 0 FAIL RETRY:  idb:recorded(reachable, _1048348, _133012 )
3283d 238 0 CALL:  grounder:grounder_completion_for_atom(alarm, 1, _1048349 )
3284d 238 0 CALL:  prolog:findall(_133018, grounder: (user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), _1048330 )
3285d 238 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048330 )
3286d 262 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048330 )
3287d 238 0 TRY_OR 
3288d 269 0 CALL:  error:has_type(list_or_partial_list, _1048330 )
3289d 269 0 CALL:  error:is_list_or_partial_list(_1048330 )
3290d 269 0 CALL:  prolog:$skip_list(_133035, _1048330, _133036 )
3291d 238 0 CALL:  prolog:$findall(_133018, grounder: (user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), [], _133036 )
3292d 238 0 CALL:  nb:nb_queue(_1048322 )
3293d 238 0 TRY_OR 
3294d 263 0 CALL:  prolog:$execute(grounder: (user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)) )
3295d 263 0 CALL:  prolog:$call(grounder: (user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), 263, grounder: (user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), user )
3296d 274 0 FAIL RETRY:  prolog:$call(grounder: (user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), 263, grounder: (user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), user )
3297d 263 0 CALL:  prolog:$call(user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018), 263, grounder: (user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), grounder )
3298d 263 0 CALL:  prolog:$call(user:myclause(1,alarm,_133031), 263, grounder: (user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), grounder )
3299d 305 0 FAIL RETRY:  prolog:$call(user:myclause(1,alarm,_133031), 263, grounder: (user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), grounder )
3300d 263 0 CALL:  prolog:$call(myclause(1,alarm,_133031), 263, grounder: (user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), user )
3301d 316 0 FAIL RETRY:  prolog:$call(myclause(1,alarm,_133031), 263, grounder: (user:myclause(1,alarm,_133031),grounder_ground_term_with_reachable_atoms(_133031,_133018)), user )
3302d 263 0 CALL:  prolog:$execute0(myclause(1,alarm,_133031), user )
3303d 263 0 CALL:  user:myclause(1, alarm, _133031 )
3304d 263 0 CALL:  prolog:current_predicate(user:myclause/2 )
3305d 263 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048257, _1048256 )
3306d 263 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
3307d 263 0 TRY_OR 
3308d 335 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
3309d 344 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
3310d 335 0 TRY_OR 
3312d 335 0 CALL:  error:may_bind_to_type(atom, myclause )
3313d 352 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
3314d 335 0 CALL:  error:may_bind_to_type(integer, 2 )
3315d 344 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
3316d 263 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
3317d 263 0 TRY_OR 
3318d 329 0 CALL:  prolog:ground(myclause/2 )
3319d 263 0 CALL:  prolog:functor(_137144, myclause, 2 )
3320d 263 0 CALL:  prolog:current_predicate(myclause, user:myclause(_137145,_137146) )
3321d 263 0 CALL:  prolog:$yap_strip_module(user:myclause(_137145,_137146), _1048253, _1048252 )
3322d 263 0 CALL:  prolog:functor(myclause(_137145,_137146), myclause, _1048251 )
3323d 263 0 TRY_OR 
3324d 331 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_137145,_137146), user )
3325d 331 0 CALL:  user:myclause(alarm, _133031 )
3326d 340 0 CALL:  prolog:$call(grounder_ground_term_with_reachable_atoms(burglary,_133018), 263, grounder: (user:myclause(1,alarm,burglary),grounder_ground_term_with_reachable_atoms(burglary,_133018)), grounder )
3327d 351 0 FAIL RETRY:  prolog:$call(grounder_ground_term_with_reachable_atoms(burglary,_133018), 263, grounder: (user:myclause(1,alarm,burglary),grounder_ground_term_with_reachable_atoms(burglary,_133018)), grounder )
3328d 340 0 CALL:  prolog:$execute0(grounder_ground_term_with_reachable_atoms(burglary,_133018), grounder )
3329d 340 0 CALL:  grounder:grounder_ground_term_with_reachable_atoms(burglary, _133018 )
+s 0x5602af2545f0
 @0x7efdd88a31d8 0
+s 0x5602af263500
 @0x7efdd88a31d8 0
- 0x5602af263500
 @0x7efdd88a31d8 340
+s 0x5602af263500
 @0x7efdd88a31d8 0
+s 0x5602af263470
 @0x7efdd88a31d8 0
+s 0x5602af233d70
 @0x7efdd88a31d8 0
- 0x5602af2545f0
 @0x7efdd88a31d8 340
3330d 349 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(burglary, _133018 )
3331d 349 0 CALL:  prolog:predicate_property(grounder:burglary, built_in )
3332d 349 0 CALL:  prolog:strip_module(grounder:burglary, _137153, _137154 )
3333d 349 0 CALL:  prolog:$predicate_property2(burglary, built_in, grounder )
3334d 365 0 FAIL RETRY:  prolog:$predicate_property2(burglary, built_in, grounder )
3335d 365 0 FAIL RETRY:  prolog:$predicate_property2(burglary, built_in, grounder )
3336d 365 0 CALL:  prolog:$pred_exists(burglary, grounder )
3337d 365 0 FAIL RETRY:  prolog:$predicate_property2(burglary, built_in, grounder )
3338d 349 0 CALL:  prolog:$get_undefined_pred(burglary, grounder, _1048212, _1048213 )
3339d 349 0 CALL:  prolog:$get_undefined_predicates(burglary, grounder, _1048212, _1048213 )
3340d 379 0 CALL:  prolog:recorded('$import', '$import'(_137156,grounder,_137158,burglary,_137160,_137161), _1048186 )
3341d 379 0 FAIL RETRY:  prolog:$get_undefined_predicates(burglary, grounder, _1048212, _1048213 )
3342d 379 0 CALL:  prolog:$pred_exists(burglary, user )
3343d 349 0 TRY_OR 
3345d 349 0 CALL:  prolog:$predicate_property(burglary, user, user, built_in )
3346d 349 0 CALL:  prolog:$is_system_predicate(burglary, user )
3347d 349 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(burglary, _133018 )
3348d 340 0 CALL:  prolog:recorded(reachable, burglary, _137152 )
3349d 340 0 CALL:  nb:nb_queue_enqueue(queue(0,0,0,0), '$atom'(burglary) )
3350d 340 0 FAIL RETRY:  user:myclause(alarm, _133031 )
3351d 331 0 CALL:  prolog:$call(grounder_ground_term_with_reachable_atoms(earthquake,_133018), 263, grounder: (user:myclause(1,alarm,earthquake),grounder_ground_term_with_reachable_atoms(earthquake,_133018)), grounder )
3352d 342 0 FAIL RETRY:  prolog:$call(grounder_ground_term_with_reachable_atoms(earthquake,_133018), 263, grounder: (user:myclause(1,alarm,earthquake),grounder_ground_term_with_reachable_atoms(earthquake,_133018)), grounder )
3353d 331 0 CALL:  prolog:$execute0(grounder_ground_term_with_reachable_atoms(earthquake,_133018), grounder )
3354d 331 0 CALL:  grounder:grounder_ground_term_with_reachable_atoms(earthquake, _133018 )
3355d 340 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(earthquake, _133018 )
3356d 340 0 CALL:  prolog:predicate_property(grounder:earthquake, built_in )
3357d 340 0 CALL:  prolog:strip_module(grounder:earthquake, _137153, _137154 )
3358d 340 0 CALL:  prolog:$predicate_property2(earthquake, built_in, grounder )
3359d 356 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
3360d 356 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
3361d 356 0 CALL:  prolog:$pred_exists(earthquake, grounder )
3362d 356 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
3363d 340 0 CALL:  prolog:$get_undefined_pred(earthquake, grounder, _1048221, _1048222 )
3364d 340 0 CALL:  prolog:$get_undefined_predicates(earthquake, grounder, _1048221, _1048222 )
3365d 370 0 CALL:  prolog:recorded('$import', '$import'(_137156,grounder,_137158,earthquake,_137160,_137161), _1048195 )
3366d 370 0 FAIL RETRY:  prolog:$get_undefined_predicates(earthquake, grounder, _1048221, _1048222 )
3367d 370 0 CALL:  prolog:$pred_exists(earthquake, user )
3368d 340 0 TRY_OR 
3370d 340 0 CALL:  prolog:$predicate_property(earthquake, user, user, built_in )
3371d 340 0 CALL:  prolog:$is_system_predicate(earthquake, user )
3372d 340 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(earthquake, _133018 )
3373d 331 0 CALL:  prolog:recorded(reachable, earthquake, _137152 )
3374d 331 0 CALL:  nb:nb_queue_enqueue(queue(0,['$atom'(burglary) |_133045],_133045,1), '$atom'(earthquake) )
3376d 263 0 CALL:  prolog:$imported_predicate(myclause(_137145,_137146), user, _1048256, _1048257 )
3377d 332 0 CALL:  prolog:$is_system_predicate(myclause(_137145,_137146), prolog )
3378d 332 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_137145,_137146), user, _1048256, _1048257 )
3379d 263 0 CALL:  prolog:$undefined(myclause(_137145,_137146), user )
3381d 238 0 CALL:  nb:nb_queue_close(queue(0,['$atom'(burglary),'$atom'(earthquake) |_133049],_133049,2), _133036, [] )
3382d 238 0 CALL:  prolog:\==(['$atom'(burglary),'$atom'(earthquake)], [] )
3383d 238 0 CALL:  termhandling:list_to_disjunction(['$atom'(burglary),'$atom'(earthquake)], _133015 )
+s 0x5602af233e90
 @0x7efdd88a31c8 0
+s 0x5602af2645a0
 @0x7efdd88a31c8 0
- 0x5602af2645a0
 @0x7efdd88a31c8 238
+s 0x5602af2647c0
 @0x7efdd88a31c8 0
+s 0x5602af2648a0
 @0x7efdd88a31c8 0
- 0x5602af2648a0
 @0x7efdd88a31c8 238
+s 0x5602af233f00
 @0x7efdd88a31c8 0
+s 0x5602af253c00
 @0x7efdd88a31c8 0
- 0x5602af233e90
 @0x7efdd88a31c8 238
3384d 238 0 CALL:  termhandling:list_to_disjunction(['$atom'(earthquake)], _133052 )
3385d 238 0 TRY_OR 
3386d 246 0 CALL:  prolog:$current_choice_point(_1048345 )
3387d 246 0 CALL:  termhandling:propagate_interpretation(<=>('$atom'(alarm),('$atom'(burglary);'$atom'(earthquake))), 1, _1048350 )
+s 0x5602af234000
 @0x7efdd88a31d8 0
+s 0x5602af263e00
 @0x7efdd88a31d8 0
- 0x5602af263e00
 @0x7efdd88a31d8 246
+s 0x5602af255eb0
 @0x7efdd88a31d8 0
+s 0x5602af233c10
 @0x7efdd88a31d8 0
+s 0x5602af2340f0
 @0x7efdd88a31d8 0
- 0x5602af234000
 @0x7efdd88a31d8 246
3388d 246 0 CALL:  termhandling:propagate_interpretation('$atom'(alarm), 1, _133054 )
3389d 246 0 TRY_OR 
3390d 270 0 CALL:  user:known(1, alarm, _133054 )
3391d 246 0 CALL:  termhandling:propagate_interpretation('$atom'(burglary);'$atom'(earthquake), 1, _133055 )
3392d 246 0 CALL:  termhandling:propagate_interpretation('$atom'(burglary), 1, _133057 )
3393d 246 0 TRY_OR 
3394d 270 0 CALL:  user:known(1, burglary, _133057 )
3396d 246 0 CALL:  termhandling:propagate_interpretation('$atom'(earthquake), 1, _133058 )
3397d 246 0 TRY_OR 
3398d 262 0 CALL:  user:known(1, earthquake, _133058 )
3400d 246 0 CALL:  termhandling:simplify(<=>(true,('$atom'(burglary);'$atom'(earthquake))), _1048351, _1048346 )
+s 0x5602af264950
 @0x7efdd88a31e8 0
+s 0x5602af255250
 @0x7efdd88a31e8 0
- 0x5602af264950
 @0x7efdd88a31e8 246
3401d 256 0 CALL:  termhandling:simplify_intern(<=>(true,('$atom'(burglary);'$atom'(earthquake))), _1048312, _1048311 )
+s 0x5602af234000
 @0x7efdd88a31f8 0
+s 0x5602af263e00
 @0x7efdd88a31f8 0
- 0x5602af263e00
 @0x7efdd88a31f8 256
+s 0x5602af20eb00
 @0x7efdd88a31f8 0
+s 0x5602af2341b0
 @0x7efdd88a31f8 0
+s 0x5602af234260
 @0x7efdd88a31f8 0
- 0x5602af234000
 @0x7efdd88a31f8 256
3402d 256 0 CALL:  termhandling:simplify_intern_implication(true, '$atom'(burglary);'$atom'(earthquake), _1048312, _1048311 )
+s 0x5602af234320
 @0x7efdd88a31f8 0
+s 0x5602af264db0
 @0x7efdd88a31f8 0
- 0x5602af264db0
 @0x7efdd88a31f8 256
+s 0x5602af2343d0
 @0x7efdd88a31f8 0
+s 0x5602af253600
 @0x7efdd88a31f8 0
- 0x5602af234320
 @0x7efdd88a31f8 256
3403d 256 0 CALL:  prolog:==(true, true )
3404d 246 0 CALL:  termhandling:simplify('$atom'(burglary);'$atom'(earthquake), _1048351, _133059 )
3405d 256 0 CALL:  termhandling:simplify_intern('$atom'(burglary);'$atom'(earthquake), _1048312, _1048311 )
3406d 256 0 CALL:  termhandling:simplify_intern_or('$atom'(burglary), '$atom'(earthquake), _1048312, _1048311 )
+s 0x5602af234320
 @0x7efdd88a3208 0
+s 0x5602af264ed0
 @0x7efdd88a3208 0
- 0x5602af264ed0
 @0x7efdd88a3208 256
+s 0x5602af234430
 @0x7efdd88a3208 0
+s 0x5602af264fc0
 @0x7efdd88a3208 0
- 0x5602af234320
 @0x7efdd88a3208 256
3407d 275 0 FAIL RETRY:  termhandling:simplify_intern_or('$atom'(burglary), '$atom'(earthquake), _1048312, _1048311 )
3408d 275 0 FAIL RETRY:  termhandling:simplify_intern_or('$atom'(burglary), '$atom'(earthquake), _1048312, _1048311 )
3409d 256 0 CALL:  termhandling:simplify_intern('$atom'(burglary), _133061, _1048303 )
3410d 256 0 CALL:  termhandling:simplify_intern('$atom'(earthquake), _133062, _1048304 )
3411d 256 0 CALL:  termhandling:or(false, false, _1048311 )
+s 0x5602af264950
 @0x7efdd88a3208 0
+s 0x5602af264ed0
 @0x7efdd88a3208 0
- 0x5602af264ed0
 @0x7efdd88a3208 256
+s 0x5602af234490
 @0x7efdd88a3208 0
+s 0x5602af2652e0
 @0x7efdd88a3208 0
- 0x5602af264950
 @0x7efdd88a3208 256
3412d 256 0 CALL:  prolog:==(false, true )
3413d 256 0 FAIL RETRY:  termhandling:simplify('$atom'(burglary);'$atom'(earthquake), _1048351, _133059 )
3414d 246 0 TRY_OR 
3415d 254 0 CALL:  prolog:\==('$atom'(burglary);'$atom'(earthquake), false )
3416d 254 0 CALL:  completion:record_constraint_cs_check('$atom'(burglary);'$atom'(earthquake) )
+s 0x5602af2545f0
 @0x7efdd88a3208 0
+s 0x5602af233e90
 @0x7efdd88a3208 0
- 0x5602af233e90
 @0x7efdd88a3208 254
+s 0x5602af264950
 @0x7efdd88a3208 0
+s 0x5602af234320
 @0x7efdd88a3208 0
+s 0x5602af2654a0
 @0x7efdd88a3208 0
- 0x5602af2545f0
 @0x7efdd88a3208 254
3417d 254 0 CALL:  prolog:recorda(rules, '$atom'(burglary);'$atom'(earthquake), _133060 )
+s 0x5602af2655d0
 @0x7efdd88a3208 0
3419d 181 0 TRY_OR 
3420d 229 0 CALL:  user:known(1, _1048355, _1048356 )
3421d 229 0 TRY_OR 
3422d 237 0 CALL:  prolog:recorda(known_atoms, <=>('$atom'(alarm),true), _1048357 )
+s 0x5602af265760
 @0x7efdd88a31b8 0
3424d 181 0 CALL:  logger:logger_stop_timer(train_bdd_script_generation_completion )
3425d 181 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_completion, _1048354 )
3426d 181 0 CALL:  prolog:bb_delete(logger:logger_start_time_train_bdd_script_generation_completion, _1048357 )
3427d 181 0 CALL:  prolog:statistics(walltime, [_133015,_133017] )
3428d 181 0 CALL:  prolog:$walltime(_133015, _133017 )
3429d 181 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_completion, null )
3430d 181 0 TRY_OR 
3431d 225 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation_completion )
3432d 225 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_completion, _1048343 )
3433d 225 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_completion, _1048344 )
3434d 225 0 CALL:  prolog:\=(null, null )
3436d 181 0 CALL:  logger:logger_set_variable(train_bdd_script_generation_completion, 1698 )
3437d 181 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_completion, _1048353 )
3438d 181 0 TRY_OR 
3439d 231 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_completion, null )
3440d 181 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation_completion, 1698 )
3441d 181 0 CALL:  grounder:grounder_reset
3442d 181 0 CALL:  prolog:eraseall(reachable )
- 0x5602af233f80
 @0x7efdd88a3198 181
- 0x5602af25f990
 @0x7efdd88a3198 181
- 0x5602af233be0
 @0x7efdd88a3198 181
- 0x5602af233b50
 @0x7efdd88a3198 181
- 0x5602af233a50
 @0x7efdd88a3198 181
- 0x5602af233660
 @0x7efdd88a3198 181
- 0x5602af2339c0
 @0x7efdd88a3198 181
- 0x5602af233820
 @0x7efdd88a3198 181
- 0x5602af2335d0
 @0x7efdd88a3198 181
3443d 181 0 CALL:  prolog:garbage_collect_atoms
3444d 181 0 CALL:  prolog:$atom_gc
- 0x5602aec720a0
 @0x7efdd88a3198 181
- 0x5602aec59490
 @0x7efdd88a3198 181
- 0x5602aeeded50
 @0x7efdd88a3198 181
- 0x5602aefa6d10
 @0x7efdd88a3198 181
- 0x5602aec05c40
 @0x7efdd88a3198 181
- 0x5602aec66000
 @0x7efdd88a3198 181
- 0x5602aebfdb40
 @0x7efdd88a3198 181
- 0x5602aeffcb40
 @0x7efdd88a3198 181
- 0x5602aec47a00
 @0x7efdd88a3198 181
- 0x5602aec06da0
 @0x7efdd88a3198 181
- 0x5602aec429e0
 @0x7efdd88a3198 181
- 0x5602aec41a40
 @0x7efdd88a3198 181
- 0x5602aebdd3a0
 @0x7efdd88a3198 181
- 0x5602af019d60
 @0x7efdd88a3198 181
- 0x5602aec49090
 @0x7efdd88a3198 181
- 0x5602aec4fbd0
 @0x7efdd88a3198 181
- 0x5602aec49340
 @0x7efdd88a3198 181
- 0x5602aec7c680
 @0x7efdd88a3198 181
- 0x5602aec42750
 @0x7efdd88a3198 181
- 0x5602aebdc4b0
 @0x7efdd88a3198 181
- 0x5602aeff6a60
 @0x7efdd88a3198 181
- 0x5602aec6df30
 @0x7efdd88a3198 181
- 0x5602aebe2590
 @0x7efdd88a3198 181
- 0x5602aec823a0
 @0x7efdd88a3198 181
- 0x5602af1ac120
 @0x7efdd88a3198 181
- 0x5602af1db290
 @0x7efdd88a3198 181
- 0x5602aec6ade0
 @0x7efdd88a3198 181
- 0x5602aeed9880
 @0x7efdd88a3198 181
- 0x5602aec3ca30
 @0x7efdd88a3198 181
- 0x5602aec503c0
 @0x7efdd88a3198 181
- 0x5602aebfe250
 @0x7efdd88a3198 181
- 0x5602aebe7ee0
 @0x7efdd88a3198 181
- 0x5602aebffec0
 @0x7efdd88a3198 181
- 0x5602aebe77b0
 @0x7efdd88a3198 181
- 0x5602af050f70
 @0x7efdd88a3198 181
- 0x5602aec453c0
 @0x7efdd88a3198 181
- 0x5602aec72f00
 @0x7efdd88a3198 181
- 0x5602aebf7660
 @0x7efdd88a3198 181
- 0x5602aec519a0
 @0x7efdd88a3198 181
- 0x5602aebe9e90
 @0x7efdd88a3198 181
- 0x5602aebea420
 @0x7efdd88a3198 181
- 0x5602aebff120
 @0x7efdd88a3198 181
- 0x5602aebdacf0
 @0x7efdd88a3198 181
- 0x5602aec03310
 @0x7efdd88a3198 181
- 0x5602af04d0c0
 @0x7efdd88a3198 181
- 0x5602aebf0100
 @0x7efdd88a3198 181
- 0x5602aebfe360
 @0x7efdd88a3198 181
- 0x5602aebfaf10
 @0x7efdd88a3198 181
- 0x5602aec59b30
 @0x7efdd88a3198 181
- 0x5602aec70b70
 @0x7efdd88a3198 181
- 0x5602aec57d00
 @0x7efdd88a3198 181
- 0x5602aebdab80
 @0x7efdd88a3198 181
- 0x5602aebfc8f0
 @0x7efdd88a3198 181
- 0x5602af08d430
 @0x7efdd88a3198 181
- 0x5602aec3cce0
 @0x7efdd88a3198 181
- 0x5602aec53000
 @0x7efdd88a3198 181
- 0x5602aec5dc70
 @0x7efdd88a3198 181
- 0x5602aebf0580
 @0x7efdd88a3198 181
- 0x5602aec711e0
 @0x7efdd88a3198 181
- 0x5602aec4e6f0
 @0x7efdd88a3198 181
- 0x5602aec008b0
 @0x7efdd88a3198 181
- 0x5602aebdd7f0
 @0x7efdd88a3198 181
- 0x5602aebdb5f0
 @0x7efdd88a3198 181
- 0x5602af0ef870
 @0x7efdd88a3198 181
- 0x5602af1b8070
 @0x7efdd88a3198 181
- 0x5602aec61d70
 @0x7efdd88a3198 181
- 0x5602aebff040
 @0x7efdd88a3198 181
- 0x5602aec01a60
 @0x7efdd88a3198 181
- 0x5602aec29e80
 @0x7efdd88a3198 181
- 0x5602aec7ae20
 @0x7efdd88a3198 181
- 0x5602aebfa450
 @0x7efdd88a3198 181
- 0x5602aec47320
 @0x7efdd88a3198 181
- 0x5602aec3bae0
 @0x7efdd88a3198 181
- 0x5602aec71110
 @0x7efdd88a3198 181
- 0x5602aebfcda0
 @0x7efdd88a3198 181
- 0x5602af037a30
 @0x7efdd88a3198 181
- 0x5602aebe79a0
 @0x7efdd88a3198 181
- 0x5602aec5ab90
 @0x7efdd88a3198 181
- 0x5602aec4a8b0
 @0x7efdd88a3198 181
- 0x5602af1d6290
 @0x7efdd88a3198 181
- 0x5602aec46fc0
 @0x7efdd88a3198 181
- 0x5602af1da390
 @0x7efdd88a3198 181
- 0x5602af007d60
 @0x7efdd88a3198 181
- 0x5602aeeb9da0
 @0x7efdd88a3198 181
- 0x5602aebde870
 @0x7efdd88a3198 181
- 0x5602aefa7a20
 @0x7efdd88a3198 181
- 0x5602aec816d0
 @0x7efdd88a3198 181
- 0x5602aec67f40
 @0x7efdd88a3198 181
- 0x5602aec6c7f0
 @0x7efdd88a3198 181
- 0x5602aec5e1d0
 @0x7efdd88a3198 181
- 0x5602aec62600
 @0x7efdd88a3198 181
- 0x5602aec5b860
 @0x7efdd88a3198 181
- 0x5602aec6b320
 @0x7efdd88a3198 181
- 0x5602aec001c0
 @0x7efdd88a3198 181
- 0x5602aec7bbe0
 @0x7efdd88a3198 181
- 0x5602af1bf880
 @0x7efdd88a3198 181
- 0x5602af156390
 @0x7efdd88a3198 181
- 0x5602aec7d010
 @0x7efdd88a3198 181
- 0x5602aec6eaf0
 @0x7efdd88a3198 181
- 0x5602aec798d0
 @0x7efdd88a3198 181
- 0x5602af02cbe0
 @0x7efdd88a3198 181
- 0x5602af042430
 @0x7efdd88a3198 181
- 0x5602af03b560
 @0x7efdd88a3198 181
- 0x5602aec69a00
 @0x7efdd88a3198 181
- 0x5602aec81f10
 @0x7efdd88a3198 181
- 0x5602aeee3bc0
 @0x7efdd88a3198 181
- 0x5602aeff2bd0
 @0x7efdd88a3198 181
- 0x5602aebfbc50
 @0x7efdd88a3198 181
- 0x5602aec2a2b0
 @0x7efdd88a3198 181
- 0x5602aebed730
 @0x7efdd88a3198 181
- 0x5602aec4c4f0
 @0x7efdd88a3198 181
- 0x5602aec59130
 @0x7efdd88a3198 181
- 0x5602aec5f260
 @0x7efdd88a3198 181
- 0x5602aec7d710
 @0x7efdd88a3198 181
- 0x5602af1cb050
 @0x7efdd88a3198 181
- 0x5602aec59dd0
 @0x7efdd88a3198 181
- 0x5602af0071f0
 @0x7efdd88a3198 181
- 0x5602af02a570
 @0x7efdd88a3198 181
- 0x5602aec7ad50
 @0x7efdd88a3198 181
- 0x5602aec7d8d0
 @0x7efdd88a3198 181
- 0x5602aec63b40
 @0x7efdd88a3198 181
- 0x5602af047a30
 @0x7efdd88a3198 181
- 0x5602aeb40220
 @0x7efdd88a3198 181
- 0x5602aefa12f0
 @0x7efdd88a3198 181
- 0x5602aec26030
 @0x7efdd88a3198 181
- 0x5602aef0d560
 @0x7efdd88a3198 181
- 0x5602af037940
 @0x7efdd88a3198 181
- 0x5602aec4f920
 @0x7efdd88a3198 181
- 0x5602aec68010
 @0x7efdd88a3198 181
- 0x5602af011b30
 @0x7efdd88a3198 181
- 0x5602aef1c520
 @0x7efdd88a3198 181
- 0x5602af15b770
 @0x7efdd88a3198 181
- 0x5602aec070f0
 @0x7efdd88a3198 181
- 0x5602aeecbe50
 @0x7efdd88a3198 181
- 0x5602af007d90
 @0x7efdd88a3198 181
- 0x5602aebf2300
 @0x7efdd88a3198 181
- 0x5602aebe9360
 @0x7efdd88a3198 181
- 0x5602aeea69f0
 @0x7efdd88a3198 181
- 0x5602aec02d60
 @0x7efdd88a3198 181
- 0x5602af1e43a0
 @0x7efdd88a3198 181
- 0x5602af1cd6a0
 @0x7efdd88a3198 181
- 0x5602af04d0f0
 @0x7efdd88a3198 181
- 0x5602aec626d0
 @0x7efdd88a3198 181
- 0x5602aebe2bb0
 @0x7efdd88a3198 181
- 0x5602aec616a0
 @0x7efdd88a3198 181
- 0x5602aeffa350
 @0x7efdd88a3198 181
- 0x5602af1d5fb0
 @0x7efdd88a3198 181
- 0x5602aec7eef0
 @0x7efdd88a3198 181
- 0x5602af0c99f0
 @0x7efdd88a3198 181
- 0x5602aec43100
 @0x7efdd88a3198 181
- 0x5602aebb3a70
 @0x7efdd88a3198 181
- 0x5602aec4d730
 @0x7efdd88a3198 181
- 0x5602aebf2b20
 @0x7efdd88a3198 181
- 0x5602aec4bf70
 @0x7efdd88a3198 181
- 0x5602aec7a3f0
 @0x7efdd88a3198 181
- 0x5602aec5ba40
 @0x7efdd88a3198 181
- 0x5602af084290
 @0x7efdd88a3198 181
- 0x5602aebec1b0
 @0x7efdd88a3198 181
- 0x5602aec77980
 @0x7efdd88a3198 181
- 0x5602aec24d80
 @0x7efdd88a3198 181
- 0x5602aebe4250
 @0x7efdd88a3198 181
- 0x5602af09eef0
 @0x7efdd88a3198 181
- 0x5602af055760
 @0x7efdd88a3198 181
- 0x5602af01ac60
 @0x7efdd88a3198 181
- 0x5602aec60460
 @0x7efdd88a3198 181
- 0x5602af01b2e0
 @0x7efdd88a3198 181
- 0x5602aec3d3e0
 @0x7efdd88a3198 181
- 0x5602aec8d8d0
 @0x7efdd88a3198 181
- 0x5602af02a540
 @0x7efdd88a3198 181
- 0x5602aec4d640
 @0x7efdd88a3198 181
- 0x5602aeedb080
 @0x7efdd88a3198 181
- 0x5602af1b62b0
 @0x7efdd88a3198 181
- 0x5602aef37030
 @0x7efdd88a3198 181
- 0x5602aec5a810
 @0x7efdd88a3198 181
- 0x5602aec00e70
 @0x7efdd88a3198 181
- 0x5602af046540
 @0x7efdd88a3198 181
- 0x5602aeff6750
 @0x7efdd88a3198 181
- 0x5602af027540
 @0x7efdd88a3198 181
- 0x5602aec4c5c0
 @0x7efdd88a3198 181
- 0x5602aec5dd40
 @0x7efdd88a3198 181
- 0x5602aeec2c70
 @0x7efdd88a3198 181
- 0x5602aebfc1b0
 @0x7efdd88a3198 181
- 0x5602aebf5620
 @0x7efdd88a3198 181
- 0x5602af015300
 @0x7efdd88a3198 181
- 0x5602aec511f0
 @0x7efdd88a3198 181
- 0x5602aec6f2e0
 @0x7efdd88a3198 181
- 0x5602aefce530
 @0x7efdd88a3198 181
- 0x5602aec75c70
 @0x7efdd88a3198 181
- 0x5602af024ff0
 @0x7efdd88a3198 181
- 0x5602aec71dd0
 @0x7efdd88a3198 181
- 0x5602aec46870
 @0x7efdd88a3198 181
- 0x5602aebdc250
 @0x7efdd88a3198 181
- 0x5602aec51550
 @0x7efdd88a3198 181
- 0x5602aec78f40
 @0x7efdd88a3198 181
- 0x5602aeee5ce0
 @0x7efdd88a3198 181
- 0x5602aebe2380
 @0x7efdd88a3198 181
- 0x5602aeef7c70
 @0x7efdd88a3198 181
- 0x5602aec73ec0
 @0x7efdd88a3198 181
- 0x5602aec4ca90
 @0x7efdd88a3198 181
- 0x5602aebdef60
 @0x7efdd88a3198 181
- 0x5602aeebe370
 @0x7efdd88a3198 181
- 0x5602aec775c0
 @0x7efdd88a3198 181
- 0x5602aebfaec0
 @0x7efdd88a3198 181
- 0x5602aec2ad90
 @0x7efdd88a3198 181
- 0x5602aebfddf0
 @0x7efdd88a3198 181
- 0x5602aec7dbe0
 @0x7efdd88a3198 181
- 0x5602aebdb160
 @0x7efdd88a3198 181
- 0x5602aef7c0d0
 @0x7efdd88a3198 181
- 0x5602aec01490
 @0x7efdd88a3198 181
- 0x5602aec45560
 @0x7efdd88a3198 181
- 0x5602aebe4400
 @0x7efdd88a3198 181
- 0x5602aec71870
 @0x7efdd88a3198 181
- 0x5602aebe8c00
 @0x7efdd88a3198 181
- 0x5602aebf82f0
 @0x7efdd88a3198 181
- 0x5602af01ad80
 @0x7efdd88a3198 181
- 0x5602aec3e870
 @0x7efdd88a3198 181
- 0x5602aec54fe0
 @0x7efdd88a3198 181
- 0x5602aec5de50
 @0x7efdd88a3198 181
- 0x5602aec41ed0
 @0x7efdd88a3198 181
- 0x5602aebf2a70
 @0x7efdd88a3198 181
- 0x5602af159f00
 @0x7efdd88a3198 181
- 0x5602aebad560
 @0x7efdd88a3198 181
- 0x5602aec673d0
 @0x7efdd88a3198 181
- 0x5602aefa1320
 @0x7efdd88a3198 181
- 0x5602aec3c220
 @0x7efdd88a3198 181
- 0x5602aebe47a0
 @0x7efdd88a3198 181
- 0x5602af03dc20
 @0x7efdd88a3198 181
- 0x5602aec69480
 @0x7efdd88a3198 181
- 0x5602aec6d000
 @0x7efdd88a3198 181
- 0x5602aeff4030
 @0x7efdd88a3198 181
- 0x5602aebea5e0
 @0x7efdd88a3198 181
- 0x5602aec4afb0
 @0x7efdd88a3198 181
- 0x5602aec01e60
 @0x7efdd88a3198 181
- 0x5602aefedff0
 @0x7efdd88a3198 181
- 0x5602aec4d570
 @0x7efdd88a3198 181
- 0x5602aebda380
 @0x7efdd88a3198 181
- 0x5602af0099f0
 @0x7efdd88a3198 181
- 0x5602aec64d40
 @0x7efdd88a3198 181
- 0x5602aec49410
 @0x7efdd88a3198 181
- 0x5602aec4dff0
 @0x7efdd88a3198 181
- 0x5602aec709d0
 @0x7efdd88a3198 181
- 0x5602aeedad90
 @0x7efdd88a3198 181
- 0x5602aef1bf90
 @0x7efdd88a3198 181
- 0x5602af009c80
 @0x7efdd88a3198 181
- 0x5602aec68d80
 @0x7efdd88a3198 181
- 0x5602af06b180
 @0x7efdd88a3198 181
- 0x5602aebcbe00
 @0x7efdd88a3198 181
- 0x5602aeef7c90
 @0x7efdd88a3198 181
- 0x5602aebeaa90
 @0x7efdd88a3198 181
- 0x5602aec703f0
 @0x7efdd88a3198 181
- 0x5602aec7c230
 @0x7efdd88a3198 181
- 0x5602aec533a0
 @0x7efdd88a3198 181
- 0x5602aeec6410
 @0x7efdd88a3198 181
- 0x5602aebfbc90
 @0x7efdd88a3198 181
- 0x5602aec62ff0
 @0x7efdd88a3198 181
- 0x5602aec66b30
 @0x7efdd88a3198 181
- 0x5602aec737e0
 @0x7efdd88a3198 181
- 0x5602af129df0
 @0x7efdd88a3198 181
- 0x5602aebf4030
 @0x7efdd88a3198 181
- 0x5602af057740
 @0x7efdd88a3198 181
- 0x5602aec51030
 @0x7efdd88a3198 181
- 0x5602aec78130
 @0x7efdd88a3198 181
- 0x5602af05f1d0
 @0x7efdd88a3198 181
- 0x5602aec49e90
 @0x7efdd88a3198 181
- 0x5602aec69620
 @0x7efdd88a3198 181
- 0x5602aebf0b50
 @0x7efdd88a3198 181
- 0x5602aebde540
 @0x7efdd88a3198 181
- 0x5602aebf4890
 @0x7efdd88a3198 181
- 0x5602af1da360
 @0x7efdd88a3198 181
- 0x5602aebf0850
 @0x7efdd88a3198 181
- 0x5602aec5c550
 @0x7efdd88a3198 181
- 0x5602aec57f70
 @0x7efdd88a3198 181
- 0x5602af049ca0
 @0x7efdd88a3198 181
- 0x5602aebfa2d0
 @0x7efdd88a3198 181
- 0x5602af0163f0
 @0x7efdd88a3198 181
- 0x5602aec774f0
 @0x7efdd88a3198 181
- 0x5602aebe7c70
 @0x7efdd88a3198 181
- 0x5602aebe17b0
 @0x7efdd88a3198 181
- 0x5602af01b170
 @0x7efdd88a3198 181
- 0x5602aebe5cc0
 @0x7efdd88a3198 181
- 0x5602af1e0900
 @0x7efdd88a3198 181
- 0x5602aec612e0
 @0x7efdd88a3198 181
- 0x5602aec52c80
 @0x7efdd88a3198 181
- 0x5602aebeaff0
 @0x7efdd88a3198 181
- 0x5602aec75ad0
 @0x7efdd88a3198 181
- 0x5602aebe6eb0
 @0x7efdd88a3198 181
- 0x5602aec4fca0
 @0x7efdd88a3198 181
- 0x5602af1d3740
 @0x7efdd88a3198 181
- 0x5602aec53c60
 @0x7efdd88a3198 181
- 0x5602aebffdd0
 @0x7efdd88a3198 181
- 0x5602aebfa780
 @0x7efdd88a3198 181
- 0x5602aec04e20
 @0x7efdd88a3198 181
- 0x5602af01b0e0
 @0x7efdd88a3198 181
- 0x5602aeffcca0
 @0x7efdd88a3198 181
- 0x5602aeec95f0
 @0x7efdd88a3198 181
- 0x5602af06dd50
 @0x7efdd88a3198 181
- 0x5602af16a310
 @0x7efdd88a3198 181
- 0x5602aef00670
 @0x7efdd88a3198 181
- 0x5602aec64640
 @0x7efdd88a3198 181
- 0x5602af02cbb0
 @0x7efdd88a3198 181
- 0x5602af02aeb0
 @0x7efdd88a3198 181
- 0x5602aec5bb10
 @0x7efdd88a3198 181
- 0x5602aec488b0
 @0x7efdd88a3198 181
- 0x5602aec6a230
 @0x7efdd88a3198 181
- 0x5602af000f40
 @0x7efdd88a3198 181
- 0x5602aec56870
 @0x7efdd88a3198 181
- 0x5602af05bf90
 @0x7efdd88a3198 181
- 0x5602af00fed0
 @0x7efdd88a3198 181
- 0x5602aec45630
 @0x7efdd88a3198 181
- 0x5602aec7e180
 @0x7efdd88a3198 181
- 0x5602aec62ad0
 @0x7efdd88a3198 181
- 0x5602aec56940
 @0x7efdd88a3198 181
- 0x5602aeff61f0
 @0x7efdd88a3198 181
- 0x5602aefd4d70
 @0x7efdd88a3198 181
- 0x5602af00ff60
 @0x7efdd88a3198 181
- 0x5602aebdac30
 @0x7efdd88a3198 181
- 0x5602aec60b60
 @0x7efdd88a3198 181
- 0x5602aec66a60
 @0x7efdd88a3198 181
- 0x5602aec68ab0
 @0x7efdd88a3198 181
- 0x5602af19e9f0
 @0x7efdd88a3198 181
- 0x5602aec49610
 @0x7efdd88a3198 181
- 0x5602aebea820
 @0x7efdd88a3198 181
- 0x5602aec7def0
 @0x7efdd88a3198 181
- 0x5602aebea330
 @0x7efdd88a3198 181
- 0x5602aec02160
 @0x7efdd88a3198 181
- 0x5602aeee8400
 @0x7efdd88a3198 181
- 0x5602aec4ba10
 @0x7efdd88a3198 181
- 0x5602aec82dc0
 @0x7efdd88a3198 181
- 0x5602aeff2090
 @0x7efdd88a3198 181
- 0x5602aebf65c0
 @0x7efdd88a3198 181
- 0x5602af081920
 @0x7efdd88a3198 181
- 0x5602aec52930
 @0x7efdd88a3198 181
- 0x5602aec4e550
 @0x7efdd88a3198 181
- 0x5602aebfed80
 @0x7efdd88a3198 181
- 0x5602af016420
 @0x7efdd88a3198 181
- 0x5602aeea2310
 @0x7efdd88a3198 181
- 0x5602aeff5ee0
 @0x7efdd88a3198 181
- 0x5602aebf07e0
 @0x7efdd88a3198 181
- 0x5602af039790
 @0x7efdd88a3198 181
- 0x5602aec868e0
 @0x7efdd88a3198 181
- 0x5602aec5f800
 @0x7efdd88a3198 181
- 0x5602aec55900
 @0x7efdd88a3198 181
- 0x5602aec7e630
 @0x7efdd88a3198 181
- 0x5602aec4b850
 @0x7efdd88a3198 181
- 0x5602af067ad0
 @0x7efdd88a3198 181
- 0x5602af01b1d0
 @0x7efdd88a3198 181
- 0x5602aec29d00
 @0x7efdd88a3198 181
- 0x5602af1db4f0
 @0x7efdd88a3198 181
- 0x5602af050640
 @0x7efdd88a3198 181
- 0x5602aec82f80
 @0x7efdd88a3198 181
- 0x5602aeec2690
 @0x7efdd88a3198 181
- 0x5602aec62e30
 @0x7efdd88a3198 181
- 0x5602aec248b0
 @0x7efdd88a3198 181
- 0x5602af01ac90
 @0x7efdd88a3198 181
- 0x5602aec77330
 @0x7efdd88a3198 181
- 0x5602aef37010
 @0x7efdd88a3198 181
- 0x5602aebde230
 @0x7efdd88a3198 181
- 0x5602af042620
 @0x7efdd88a3198 181
- 0x5602aeffcbe0
 @0x7efdd88a3198 181
- 0x5602aec6f210
 @0x7efdd88a3198 181
- 0x5602af0367f0
 @0x7efdd88a3198 181
- 0x5602af1db320
 @0x7efdd88a3198 181
- 0x5602aec839e0
 @0x7efdd88a3198 181
- 0x5602aec42070
 @0x7efdd88a3198 181
- 0x5602af01ae40
 @0x7efdd88a3198 181
- 0x5602aebff180
 @0x7efdd88a3198 181
- 0x5602af1cb240
 @0x7efdd88a3198 181
- 0x5602aebdd840
 @0x7efdd88a3198 181
- 0x5602aebd9730
 @0x7efdd88a3198 181
- 0x5602aebeb5a0
 @0x7efdd88a3198 181
- 0x5602af0253e0
 @0x7efdd88a3198 181
- 0x5602aec49f60
 @0x7efdd88a3198 181
- 0x5602aebdfed0
 @0x7efdd88a3198 181
- 0x5602aebddfa0
 @0x7efdd88a3198 181
- 0x5602af009cb0
 @0x7efdd88a3198 181
- 0x5602af1bf840
 @0x7efdd88a3198 181
- 0x5602aec045e0
 @0x7efdd88a3198 181
- 0x5602aec29860
 @0x7efdd88a3198 181
- 0x5602aebe8140
 @0x7efdd88a3198 181
- 0x5602aec428f0
 @0x7efdd88a3198 181
- 0x5602aec523e0
 @0x7efdd88a3198 181
- 0x5602aec27ef0
 @0x7efdd88a3198 181
- 0x5602aec64c70
 @0x7efdd88a3198 181
- 0x5602aef1c0a0
 @0x7efdd88a3198 181
- 0x5602aec5c910
 @0x7efdd88a3198 181
- 0x5602aec4a640
 @0x7efdd88a3198 181
- 0x5602aebefd40
 @0x7efdd88a3198 181
- 0x5602aec6a070
 @0x7efdd88a3198 181
- 0x5602aec69200
 @0x7efdd88a3198 181
- 0x5602aec02670
 @0x7efdd88a3198 181
- 0x5602aec62260
 @0x7efdd88a3198 181
- 0x5602af039080
 @0x7efdd88a3198 181
- 0x5602aef04f30
 @0x7efdd88a3198 181
- 0x5602aec5cf40
 @0x7efdd88a3198 181
- 0x5602aebe1b10
 @0x7efdd88a3198 181
- 0x5602aebda120
 @0x7efdd88a3198 181
- 0x5602aec74530
 @0x7efdd88a3198 181
- 0x5602aebef0f0
 @0x7efdd88a3198 181
- 0x5602aec6bf40
 @0x7efdd88a3198 181
- 0x5602af01b020
 @0x7efdd88a3198 181
- 0x5602aeff67e0
 @0x7efdd88a3198 181
- 0x5602aebec2a0
 @0x7efdd88a3198 181
- 0x5602aebe9390
 @0x7efdd88a3198 181
- 0x5602af037970
 @0x7efdd88a3198 181
- 0x5602aec64fb0
 @0x7efdd88a3198 181
- 0x5602aec48010
 @0x7efdd88a3198 181
- 0x5602aebf34c0
 @0x7efdd88a3198 181
- 0x5602aeff2aa0
 @0x7efdd88a3198 181
- 0x5602aec81510
 @0x7efdd88a3198 181
- 0x5602aebebff0
 @0x7efdd88a3198 181
- 0x5602aef8c930
 @0x7efdd88a3198 181
- 0x5602aebdc8b0
 @0x7efdd88a3198 181
- 0x5602aec46940
 @0x7efdd88a3198 181
- 0x5602aec4e620
 @0x7efdd88a3198 181
- 0x5602aec5f190
 @0x7efdd88a3198 181
- 0x5602af1db4c0
 @0x7efdd88a3198 181
- 0x5602aec05ed0
 @0x7efdd88a3198 181
- 0x5602aec4de50
 @0x7efdd88a3198 181
- 0x5602aeff9f60
 @0x7efdd88a3198 181
- 0x5602af1d6010
 @0x7efdd88a3198 181
- 0x5602aec473f0
 @0x7efdd88a3198 181
- 0x5602aec283b0
 @0x7efdd88a3198 181
- 0x5602af19ef70
 @0x7efdd88a3198 181
- 0x5602aebffab0
 @0x7efdd88a3198 181
- 0x5602aec5f8d0
 @0x7efdd88a3198 181
- 0x5602aec58940
 @0x7efdd88a3198 181
- 0x5602aebedf50
 @0x7efdd88a3198 181
- 0x5602aec4b150
 @0x7efdd88a3198 181
- 0x5602af1cd700
 @0x7efdd88a3198 181
- 0x5602aec057c0
 @0x7efdd88a3198 181
- 0x5602af037910
 @0x7efdd88a3198 181
- 0x5602aefeb5b0
 @0x7efdd88a3198 181
- 0x5602aec7c320
 @0x7efdd88a3198 181
- 0x5602aeff4090
 @0x7efdd88a3198 181
- 0x5602af0168b0
 @0x7efdd88a3198 181
- 0x5602aebea090
 @0x7efdd88a3198 181
- 0x5602aec03140
 @0x7efdd88a3198 181
- 0x5602aebda190
 @0x7efdd88a3198 181
- 0x5602af083710
 @0x7efdd88a3198 181
- 0x5602aec3b740
 @0x7efdd88a3198 181
- 0x5602af03dbf0
 @0x7efdd88a3198 181
- 0x5602aebeedf0
 @0x7efdd88a3198 181
- 0x5602af1cb020
 @0x7efdd88a3198 181
- 0x5602aec54740
 @0x7efdd88a3198 181
- 0x5602aeeb31e0
 @0x7efdd88a3198 181
- 0x5602aec52e20
 @0x7efdd88a3198 181
- 0x5602aec4cb60
 @0x7efdd88a3198 181
- 0x5602aec73460
 @0x7efdd88a3198 181
- 0x5602aec067d0
 @0x7efdd88a3198 181
- 0x5602aec4ed20
 @0x7efdd88a3198 181
- 0x5602aec7ed50
 @0x7efdd88a3198 181
- 0x5602aec7f7d0
 @0x7efdd88a3198 181
- 0x5602aec81220
 @0x7efdd88a3198 181
- 0x5602aee75c10
 @0x7efdd88a3198 181
- 0x5602aec817a0
 @0x7efdd88a3198 181
- 0x5602aec6b250
 @0x7efdd88a3198 181
- 0x5602aec4dcb0
 @0x7efdd88a3198 181
- 0x5602aec02fd0
 @0x7efdd88a3198 181
- 0x5602af053ee0
 @0x7efdd88a3198 181
- 0x5602aec2a7d0
 @0x7efdd88a3198 181
- 0x5602aec5d660
 @0x7efdd88a3198 181
- 0x5602aec7a6a0
 @0x7efdd88a3198 181
- 0x5602aec3ba10
 @0x7efdd88a3198 181
- 0x5602aefd56f0
 @0x7efdd88a3198 181
- 0x5602aec3c5c0
 @0x7efdd88a3198 181
- 0x5602aec7c160
 @0x7efdd88a3198 181
- 0x5602aebf7de0
 @0x7efdd88a3198 181
- 0x5602aefebb30
 @0x7efdd88a3198 181
- 0x5602aebdcc80
 @0x7efdd88a3198 181
- 0x5602aef27b40
 @0x7efdd88a3198 181
- 0x5602aec3e5a0
 @0x7efdd88a3198 181
- 0x5602aec52ae0
 @0x7efdd88a3198 181
- 0x5602aebf0930
 @0x7efdd88a3198 181
- 0x5602aec48620
 @0x7efdd88a3198 181
- 0x5602aec20b00
 @0x7efdd88a3198 181
- 0x5602af04f050
 @0x7efdd88a3198 181
- 0x5602aef0ecc0
 @0x7efdd88a3198 181
- 0x5602af0665a0
 @0x7efdd88a3198 181
- 0x5602aebfa120
 @0x7efdd88a3198 181
- 0x5602af01b050
 @0x7efdd88a3198 181
- 0x5602aec40eb0
 @0x7efdd88a3198 181
- 0x5602af053f10
 @0x7efdd88a3198 181
- 0x5602af1d3990
 @0x7efdd88a3198 181
- 0x5602af00ff00
 @0x7efdd88a3198 181
- 0x5602aec26570
 @0x7efdd88a3198 181
- 0x5602aebd9d60
 @0x7efdd88a3198 181
- 0x5602af158d80
 @0x7efdd88a3198 181
- 0x5602af1e0930
 @0x7efdd88a3198 181
- 0x5602af050140
 @0x7efdd88a3198 181
- 0x5602aef27b60
 @0x7efdd88a3198 181
- 0x5602aeeeb1f0
 @0x7efdd88a3198 181
- 0x5602aec4e350
 @0x7efdd88a3198 181
- 0x5602aebf5f40
 @0x7efdd88a3198 181
- 0x5602aec57b40
 @0x7efdd88a3198 181
- 0x5602af057950
 @0x7efdd88a3198 181
- 0x5602af031e10
 @0x7efdd88a3198 181
- 0x5602aec3d580
 @0x7efdd88a3198 181
- 0x5602aec53700
 @0x7efdd88a3198 181
- 0x5602aee8cc80
 @0x7efdd88a3198 181
- 0x5602aec567a0
 @0x7efdd88a3198 181
- 0x5602af045c10
 @0x7efdd88a3198 181
- 0x5602aec8e8c0
 @0x7efdd88a3198 181
- 0x5602aebe2cc0
 @0x7efdd88a3198 181
- 0x5602aec7bda0
 @0x7efdd88a3198 181
- 0x5602aec5fdd0
 @0x7efdd88a3198 181
- 0x5602aec3dbb0
 @0x7efdd88a3198 181
- 0x5602aebe6350
 @0x7efdd88a3198 181
- 0x5602aefd4bd0
 @0x7efdd88a3198 181
- 0x5602aec43eb0
 @0x7efdd88a3198 181
- 0x5602af1e0b40
 @0x7efdd88a3198 181
- 0x5602aefd4dd0
 @0x7efdd88a3198 181
- 0x5602af1b80a0
 @0x7efdd88a3198 181
- 0x5602aec5b270
 @0x7efdd88a3198 181
- 0x5602aeeb5220
 @0x7efdd88a3198 181
- 0x5602aebfc200
 @0x7efdd88a3198 181
- 0x5602aeff6b20
 @0x7efdd88a3198 181
- 0x5602aec212f0
 @0x7efdd88a3198 181
- 0x5602aec551c0
 @0x7efdd88a3198 181
- 0x5602aec725a0
 @0x7efdd88a3198 181
- 0x5602aebf0150
 @0x7efdd88a3198 181
- 0x5602aeedfd80
 @0x7efdd88a3198 181
- 0x5602aec78d60
 @0x7efdd88a3198 181
- 0x5602aef01ec0
 @0x7efdd88a3198 181
- 0x5602aec517e0
 @0x7efdd88a3198 181
- 0x5602af004a50
 @0x7efdd88a3198 181
- 0x5602af04e5e0
 @0x7efdd88a3198 181
- 0x5602aec6fdb0
 @0x7efdd88a3198 181
- 0x5602aebdbbd0
 @0x7efdd88a3198 181
- 0x5602aeffcc10
 @0x7efdd88a3198 181
- 0x5602aec27a90
 @0x7efdd88a3198 181
- 0x5602aebdede0
 @0x7efdd88a3198 181
- 0x5602aebe5950
 @0x7efdd88a3198 181
- 0x5602aec7b5f0
 @0x7efdd88a3198 181
- 0x5602aef9f2c0
 @0x7efdd88a3198 181
- 0x5602aec4d370
 @0x7efdd88a3198 181
- 0x5602af014de0
 @0x7efdd88a3198 181
- 0x5602aec44dd0
 @0x7efdd88a3198 181
- 0x5602aec05d00
 @0x7efdd88a3198 181
- 0x5602aeff6af0
 @0x7efdd88a3198 181
- 0x5602aec43030
 @0x7efdd88a3198 181
- 0x5602af03bf50
 @0x7efdd88a3198 181
- 0x5602aec5ec50
 @0x7efdd88a3198 181
- 0x5602aec7ee20
 @0x7efdd88a3198 181
- 0x5602aebe7610
 @0x7efdd88a3198 181
- 0x5602aebeb940
 @0x7efdd88a3198 181
- 0x5602aebf7520
 @0x7efdd88a3198 181
- 0x5602aec05bf0
 @0x7efdd88a3198 181
- 0x5602aec66700
 @0x7efdd88a3198 181
- 0x5602aec65730
 @0x7efdd88a3198 181
- 0x5602aeedd2a0
 @0x7efdd88a3198 181
- 0x5602af16c5d0
 @0x7efdd88a3198 181
- 0x5602aeefa420
 @0x7efdd88a3198 181
- 0x5602aec40de0
 @0x7efdd88a3198 181
- 0x5602aeebd140
 @0x7efdd88a3198 181
- 0x5602af189b50
 @0x7efdd88a3198 181
- 0x5602af1d6440
 @0x7efdd88a3198 181
- 0x5602aec513b0
 @0x7efdd88a3198 181
- 0x5602aec74130
 @0x7efdd88a3198 181
- 0x5602af1b61c0
 @0x7efdd88a3198 181
- 0x5602aebf3320
 @0x7efdd88a3198 181
- 0x5602aec6ef40
 @0x7efdd88a3198 181
- 0x5602aec58870
 @0x7efdd88a3198 181
- 0x5602af14ba40
 @0x7efdd88a3198 181
- 0x5602aec00340
 @0x7efdd88a3198 181
- 0x5602aec5d8f0
 @0x7efdd88a3198 181
- 0x5602af04b4c0
 @0x7efdd88a3198 181
- 0x5602aec460c0
 @0x7efdd88a3198 181
- 0x5602aebae370
 @0x7efdd88a3198 181
- 0x5602af066570
 @0x7efdd88a3198 181
- 0x5602af01af30
 @0x7efdd88a3198 181
- 0x5602aec24db0
 @0x7efdd88a3198 181
- 0x5602aec01520
 @0x7efdd88a3198 181
- 0x5602aebf20e0
 @0x7efdd88a3198 181
- 0x5602aebc4b60
 @0x7efdd88a3198 181
- 0x5602aec43770
 @0x7efdd88a3198 181
- 0x5602aebfe0c0
 @0x7efdd88a3198 181
- 0x5602aebe1560
 @0x7efdd88a3198 181
- 0x5602aec025b0
 @0x7efdd88a3198 181
- 0x5602aec55740
 @0x7efdd88a3198 181
- 0x5602aeee6f80
 @0x7efdd88a3198 181
- 0x5602aebf96b0
 @0x7efdd88a3198 181
- 0x5602aebe2b00
 @0x7efdd88a3198 181
- 0x5602aebef970
 @0x7efdd88a3198 181
- 0x5602af14bbb0
 @0x7efdd88a3198 181
- 0x5602aeffa320
 @0x7efdd88a3198 181
- 0x5602aee9ac30
 @0x7efdd88a3198 181
- 0x5602aec58040
 @0x7efdd88a3198 181
- 0x5602af179b00
 @0x7efdd88a3198 181
- 0x5602aec688f0
 @0x7efdd88a3198 181
- 0x5602af1d5fe0
 @0x7efdd88a3198 181
- 0x5602aec4f330
 @0x7efdd88a3198 181
- 0x5602aec50cb0
 @0x7efdd88a3198 181
- 0x5602aec3c960
 @0x7efdd88a3198 181
- 0x5602aec45130
 @0x7efdd88a3198 181
- 0x5602aec25800
 @0x7efdd88a3198 181
- 0x5602aee8e630
 @0x7efdd88a3198 181
- 0x5602aec6b6c0
 @0x7efdd88a3198 181
- 0x5602af01af90
 @0x7efdd88a3198 181
- 0x5602aec73b60
 @0x7efdd88a3198 181
- 0x5602aefa1340
 @0x7efdd88a3198 181
- 0x5602af19eaf0
 @0x7efdd88a3198 181
- 0x5602aebef7f0
 @0x7efdd88a3198 181
- 0x5602aec5b6c0
 @0x7efdd88a3198 181
- 0x5602af007190
 @0x7efdd88a3198 181
- 0x5602aec66ed0
 @0x7efdd88a3198 181
- 0x5602aec71d00
 @0x7efdd88a3198 181
- 0x5602aeff9f30
 @0x7efdd88a3198 181
- 0x5602aec630c0
 @0x7efdd88a3198 181
- 0x5602af01af60
 @0x7efdd88a3198 181
- 0x5602aebebaf0
 @0x7efdd88a3198 181
- 0x5602aebf0680
 @0x7efdd88a3198 181
- 0x5602aee8ef10
 @0x7efdd88a3198 181
- 0x5602aebda300
 @0x7efdd88a3198 181
- 0x5602aec68f60
 @0x7efdd88a3198 181
- 0x5602af1d6330
 @0x7efdd88a3198 181
- 0x5602aec7c910
 @0x7efdd88a3198 181
- 0x5602af19efa0
 @0x7efdd88a3198 181
- 0x5602aebfc9a0
 @0x7efdd88a3198 181
- 0x5602af082d90
 @0x7efdd88a3198 181
- 0x5602aebf2c00
 @0x7efdd88a3198 181
- 0x5602aec7d1b0
 @0x7efdd88a3198 181
- 0x5602af009c50
 @0x7efdd88a3198 181
- 0x5602af1a5250
 @0x7efdd88a3198 181
- 0x5602af0c74d0
 @0x7efdd88a3198 181
- 0x5602aec51c30
 @0x7efdd88a3198 181
- 0x5602aec3ce80
 @0x7efdd88a3198 181
- 0x5602aec7f8a0
 @0x7efdd88a3198 181
- 0x5602aeff1e90
 @0x7efdd88a3198 181
- 0x5602af20beb0
 @0x7efdd88a3198 181
- 0x5602aebe97f0
 @0x7efdd88a3198 181
- 0x5602aec7d0e0
 @0x7efdd88a3198 181
- 0x5602af050fd0
 @0x7efdd88a3198 181
- 0x5602aec7f610
 @0x7efdd88a3198 181
- 0x5602aec3b550
 @0x7efdd88a3198 181
- 0x5602aebe00c0
 @0x7efdd88a3198 181
- 0x5602af045b50
 @0x7efdd88a3198 181
- 0x5602aec506a0
 @0x7efdd88a3198 181
- 0x5602aec63d20
 @0x7efdd88a3198 181
- 0x5602af1ac0c0
 @0x7efdd88a3198 181
- 0x5602af1ac0f0
 @0x7efdd88a3198 181
- 0x5602af193990
 @0x7efdd88a3198 181
- 0x5602af055790
 @0x7efdd88a3198 181
- 0x5602aebe16e0
 @0x7efdd88a3198 181
- 0x5602aebd9990
 @0x7efdd88a3198 181
- 0x5602af01b3a0
 @0x7efdd88a3198 181
- 0x5602aec822b0
 @0x7efdd88a3198 181
- 0x5602aec7b270
 @0x7efdd88a3198 181
- 0x5602aee9dd60
 @0x7efdd88a3198 181
- 0x5602aec7aef0
 @0x7efdd88a3198 181
- 0x5602aec74060
 @0x7efdd88a3198 181
- 0x5602aebf6a50
 @0x7efdd88a3198 181
- 0x5602aebf9110
 @0x7efdd88a3198 181
- 0x5602af11ba10
 @0x7efdd88a3198 181
- 0x5602aec01220
 @0x7efdd88a3198 181
- 0x5602af1592c0
 @0x7efdd88a3198 181
- 0x5602aec4fb00
 @0x7efdd88a3198 181
- 0x5602aec548e0
 @0x7efdd88a3198 181
- 0x5602aec58110
 @0x7efdd88a3198 181
- 0x5602aec476a0
 @0x7efdd88a3198 181
- 0x5602aec043e0
 @0x7efdd88a3198 181
- 0x5602af1cb2a0
 @0x7efdd88a3198 181
- 0x5602aec01b60
 @0x7efdd88a3198 181
- 0x5602aec66c00
 @0x7efdd88a3198 181
- 0x5602aefa0360
 @0x7efdd88a3198 181
- 0x5602aec5d9c0
 @0x7efdd88a3198 181
- 0x5602aec2aef0
 @0x7efdd88a3198 181
- 0x5602aec63330
 @0x7efdd88a3198 181
- 0x5602aec67160
 @0x7efdd88a3198 181
- 0x5602aec04030
 @0x7efdd88a3198 181
- 0x5602aef0e700
 @0x7efdd88a3198 181
- 0x5602af007dc0
 @0x7efdd88a3198 181
- 0x5602aeffa3a0
 @0x7efdd88a3198 181
- 0x5602af08cd10
 @0x7efdd88a3198 181
- 0x5602aec2a800
 @0x7efdd88a3198 181
- 0x5602aee7f7f0
 @0x7efdd88a3198 181
- 0x5602af1aeec0
 @0x7efdd88a3198 181
- 0x5602aec5f440
 @0x7efdd88a3198 181
- 0x5602aebfbfa0
 @0x7efdd88a3198 181
- 0x5602af1062e0
 @0x7efdd88a3198 181
- 0x5602aec3bc80
 @0x7efdd88a3198 181
- 0x5602aeebc720
 @0x7efdd88a3198 181
- 0x5602aec6ab50
 @0x7efdd88a3198 181
- 0x5602aec67230
 @0x7efdd88a3198 181
- 0x5602aefa6dd0
 @0x7efdd88a3198 181
- 0x5602aec51ec0
 @0x7efdd88a3198 181
- 0x5602aec29350
 @0x7efdd88a3198 181
- 0x5602aec5eb80
 @0x7efdd88a3198 181
- 0x5602af21ae10
 @0x7efdd88a3198 181
- 0x5602af00ff90
 @0x7efdd88a3198 181
- 0x5602aec789a0
 @0x7efdd88a3198 181
- 0x5602aebed1e0
 @0x7efdd88a3198 181
- 0x5602af1db490
 @0x7efdd88a3198 181
- 0x5602aec3fd50
 @0x7efdd88a3198 181
- 0x5602aec5d820
 @0x7efdd88a3198 181
- 0x5602aec518b0
 @0x7efdd88a3198 181
- 0x5602af1a5550
 @0x7efdd88a3198 181
- 0x5602aebfb730
 @0x7efdd88a3198 181
- 0x5602af1b6160
 @0x7efdd88a3198 181
- 0x5602aebdccb0
 @0x7efdd88a3198 181
- 0x5602aec6be20
 @0x7efdd88a3198 181
- 0x5602aef0d530
 @0x7efdd88a3198 181
- 0x5602aec4a3b0
 @0x7efdd88a3198 181
- 0x5602aebe9cb0
 @0x7efdd88a3198 181
- 0x5602af1d6260
 @0x7efdd88a3198 181
- 0x5602aebe8b70
 @0x7efdd88a3198 181
- 0x5602aebeb160
 @0x7efdd88a3198 181
- 0x5602aec60c30
 @0x7efdd88a3198 181
- 0x5602aec42820
 @0x7efdd88a3198 181
- 0x5602af1cb270
 @0x7efdd88a3198 181
- 0x5602af1e7c20
 @0x7efdd88a3198 181
- 0x5602aebe4b50
 @0x7efdd88a3198 181
- 0x5602aec75010
 @0x7efdd88a3198 181
- 0x5602aec3b480
 @0x7efdd88a3198 181
- 0x5602aec52830
 @0x7efdd88a3198 181
- 0x5602af19eed0
 @0x7efdd88a3198 181
- 0x5602aec6d2b0
 @0x7efdd88a3198 181
- 0x5602af03bf80
 @0x7efdd88a3198 181
- 0x5602aec3f770
 @0x7efdd88a3198 181
- 0x5602aec73d00
 @0x7efdd88a3198 181
- 0x5602aec77c10
 @0x7efdd88a3198 181
- 0x5602aec3fe20
 @0x7efdd88a3198 181
- 0x5602aec4b2f0
 @0x7efdd88a3198 181
- 0x5602af01b140
 @0x7efdd88a3198 181
- 0x5602af1de4b0
 @0x7efdd88a3198 181
- 0x5602af0425f0
 @0x7efdd88a3198 181
- 0x5602af0379d0
 @0x7efdd88a3198 181
- 0x5602aebe2680
 @0x7efdd88a3198 181
- 0x5602af03e1d0
 @0x7efdd88a3198 181
- 0x5602af1780b0
 @0x7efdd88a3198 181
- 0x5602af15f0b0
 @0x7efdd88a3198 181
- 0x5602aec8cb20
 @0x7efdd88a3198 181
- 0x5602af1d38c0
 @0x7efdd88a3198 181
- 0x5602aec705b0
 @0x7efdd88a3198 181
- 0x5602aebe7650
 @0x7efdd88a3198 181
- 0x5602af03a8c0
 @0x7efdd88a3198 181
- 0x5602aec5fb60
 @0x7efdd88a3198 181
- 0x5602aebe1150
 @0x7efdd88a3198 181
- 0x5602af11e670
 @0x7efdd88a3198 181
- 0x5602aec5c620
 @0x7efdd88a3198 181
- 0x5602aec1fcd0
 @0x7efdd88a3198 181
- 0x5602af01aea0
 @0x7efdd88a3198 181
- 0x5602aebf4cd0
 @0x7efdd88a3198 181
- 0x5602aec44890
 @0x7efdd88a3198 181
- 0x5602aec45b60
 @0x7efdd88a3198 181
- 0x5602aebe0eb0
 @0x7efdd88a3198 181
- 0x5602aec03db0
 @0x7efdd88a3198 181
- 0x5602aebf8b00
 @0x7efdd88a3198 181
- 0x5602af0379a0
 @0x7efdd88a3198 181
- 0x5602aebda820
 @0x7efdd88a3198 181
- 0x5602aebd8f60
 @0x7efdd88a3198 181
- 0x5602af1b6220
 @0x7efdd88a3198 181
- 0x5602af1b2590
 @0x7efdd88a3198 181
- 0x5602aec634d0
 @0x7efdd88a3198 181
- 0x5602af1a8990
 @0x7efdd88a3198 181
- 0x5602aec5a8e0
 @0x7efdd88a3198 181
- 0x5602aec2af20
 @0x7efdd88a3198 181
- 0x5602aec79390
 @0x7efdd88a3198 181
- 0x5602aebf7d90
 @0x7efdd88a3198 181
- 0x5602aec066b0
 @0x7efdd88a3198 181
- 0x5602aebf8120
 @0x7efdd88a3198 181
- 0x5602af1e0990
 @0x7efdd88a3198 181
- 0x5602aec80490
 @0x7efdd88a3198 181
- 0x5602aec74330
 @0x7efdd88a3198 181
- 0x5602af055730
 @0x7efdd88a3198 181
- 0x5602aebfe980
 @0x7efdd88a3198 181
- 0x5602aebf6f90
 @0x7efdd88a3198 181
- 0x5602aebeddf0
 @0x7efdd88a3198 181
- 0x5602af01b200
 @0x7efdd88a3198 181
- 0x5602af029c40
 @0x7efdd88a3198 181
- 0x5602af156a90
 @0x7efdd88a3198 181
- 0x5602aec27ec0
 @0x7efdd88a3198 181
- 0x5602aebe9d70
 @0x7efdd88a3198 181
- 0x5602aec42b80
 @0x7efdd88a3198 181
- 0x5602af193a00
 @0x7efdd88a3198 181
- 0x5602af11e850
 @0x7efdd88a3198 181
- 0x5602aebe63e0
 @0x7efdd88a3198 181
- 0x5602aebf5e80
 @0x7efdd88a3198 181
- 0x5602af028f00
 @0x7efdd88a3198 181
- 0x5602aeff67b0
 @0x7efdd88a3198 181
- 0x5602aec6cd70
 @0x7efdd88a3198 181
- 0x5602aeea6a20
 @0x7efdd88a3198 181
- 0x5602aebeb820
 @0x7efdd88a3198 181
- 0x5602af0665d0
 @0x7efdd88a3198 181
- 0x5602aec609c0
 @0x7efdd88a3198 181
- 0x5602af1c54c0
 @0x7efdd88a3198 181
- 0x5602aebede30
 @0x7efdd88a3198 181
- 0x5602af1acd10
 @0x7efdd88a3198 181
- 0x5602aebe3e50
 @0x7efdd88a3198 181
- 0x5602aec7b1a0
 @0x7efdd88a3198 181
- 0x5602aebf37b0
 @0x7efdd88a3198 181
- 0x5602aec53560
 @0x7efdd88a3198 181
- 0x5602af067750
 @0x7efdd88a3198 181
- 0x5602aec48fc0
 @0x7efdd88a3198 181
- 0x5602aeff2310
 @0x7efdd88a3198 181
- 0x5602aeeac590
 @0x7efdd88a3198 181
- 0x5602aec52bb0
 @0x7efdd88a3198 181
- 0x5602aec7fe00
 @0x7efdd88a3198 181
- 0x5602aebedc30
 @0x7efdd88a3198 181
- 0x5602aec73c30
 @0x7efdd88a3198 181
- 0x5602aec5e550
 @0x7efdd88a3198 181
- 0x5602aec55e60
 @0x7efdd88a3198 181
- 0x5602aec6fcb0
 @0x7efdd88a3198 181
- 0x5602aec803c0
 @0x7efdd88a3198 181
- 0x5602af0ae410
 @0x7efdd88a3198 181
- 0x5602aec7cd80
 @0x7efdd88a3198 181
- 0x5602af000ee0
 @0x7efdd88a3198 181
- 0x5602af16a340
 @0x7efdd88a3198 181
- 0x5602aec5d4a0
 @0x7efdd88a3198 181
- 0x5602af031e70
 @0x7efdd88a3198 181
- 0x5602aec60530
 @0x7efdd88a3198 181
- 0x5602aec72400
 @0x7efdd88a3198 181
- 0x5602aebfd890
 @0x7efdd88a3198 181
- 0x5602aec3f3b0
 @0x7efdd88a3198 181
- 0x5602aeedc3b0
 @0x7efdd88a3198 181
- 0x5602aec20010
 @0x7efdd88a3198 181
- 0x5602aec74a70
 @0x7efdd88a3198 181
- 0x5602aee82460
 @0x7efdd88a3198 181
- 0x5602aec47930
 @0x7efdd88a3198 181
- 0x5602aec770c0
 @0x7efdd88a3198 181
- 0x5602aee9ac60
 @0x7efdd88a3198 181
- 0x5602aec4f4f0
 @0x7efdd88a3198 181
- 0x5602aec61210
 @0x7efdd88a3198 181
- 0x5602aebed5e0
 @0x7efdd88a3198 181
- 0x5602aebdcab0
 @0x7efdd88a3198 181
- 0x5602aebe5c70
 @0x7efdd88a3198 181
- 0x5602aebf5670
 @0x7efdd88a3198 181
- 0x5602aec562b0
 @0x7efdd88a3198 181
- 0x5602aebe10c0
 @0x7efdd88a3198 181
- 0x5602aebdaa40
 @0x7efdd88a3198 181
- 0x5602aec65b30
 @0x7efdd88a3198 181
- 0x5602aebf5bf0
 @0x7efdd88a3198 181
- 0x5602aec6a860
 @0x7efdd88a3198 181
- 0x5602af19f000
 @0x7efdd88a3198 181
- 0x5602aebecd20
 @0x7efdd88a3198 181
- 0x5602af003df0
 @0x7efdd88a3198 181
- 0x5602aeffcd10
 @0x7efdd88a3198 181
- 0x5602af1db630
 @0x7efdd88a3198 181
- 0x5602aec4b220
 @0x7efdd88a3198 181
- 0x5602aefa7a40
 @0x7efdd88a3198 181
- 0x5602aec74e50
 @0x7efdd88a3198 181
- 0x5602aec7a230
 @0x7efdd88a3198 181
- 0x5602aec4b490
 @0x7efdd88a3198 181
- 0x5602af23deb0
 @0x7efdd88a3198 181
- 0x5602aec5d010
 @0x7efdd88a3198 181
- 0x5602aeeac5c0
 @0x7efdd88a3198 181
- 0x5602aec4f260
 @0x7efdd88a3198 181
- 0x5602aebf0440
 @0x7efdd88a3198 181
- 0x5602aebe3590
 @0x7efdd88a3198 181
- 0x5602af182a20
 @0x7efdd88a3198 181
- 0x5602aec7ffc0
 @0x7efdd88a3198 181
- 0x5602aec65950
 @0x7efdd88a3198 181
- 0x5602aec43840
 @0x7efdd88a3198 181
- 0x5602aec4d800
 @0x7efdd88a3198 181
- 0x5602aec7bea0
 @0x7efdd88a3198 181
- 0x5602aebe6970
 @0x7efdd88a3198 181
- 0x5602af01b460
 @0x7efdd88a3198 181
- 0x5602aec206b0
 @0x7efdd88a3198 181
- 0x5602aec592f0
 @0x7efdd88a3198 181
- 0x5602aeee9a90
 @0x7efdd88a3198 181
- 0x5602af083440
 @0x7efdd88a3198 181
- 0x5602af011aa0
 @0x7efdd88a3198 181
- 0x5602aec48e20
 @0x7efdd88a3198 181
- 0x5602aebfe610
 @0x7efdd88a3198 181
- 0x5602aebee450
 @0x7efdd88a3198 181
- 0x5602aebe1dc0
 @0x7efdd88a3198 181
- 0x5602af08ab30
 @0x7efdd88a3198 181
- 0x5602af02a0d0
 @0x7efdd88a3198 181
- 0x5602aebf6c50
 @0x7efdd88a3198 181
- 0x5602aec66e00
 @0x7efdd88a3198 181
- 0x5602aec20cc0
 @0x7efdd88a3198 181
- 0x5602aebd3e20
 @0x7efdd88a3198 181
- 0x5602aee84e90
 @0x7efdd88a3198 181
- 0x5602aebda9f0
 @0x7efdd88a3198 181
- 0x5602aec80560
 @0x7efdd88a3198 181
- 0x5602aec54810
 @0x7efdd88a3198 181
- 0x5602aec7d280
 @0x7efdd88a3198 181
- 0x5602aec23600
 @0x7efdd88a3198 181
- 0x5602aeea60e0
 @0x7efdd88a3198 181
- 0x5602aebe91e0
 @0x7efdd88a3198 181
- 0x5602aec5ac60
 @0x7efdd88a3198 181
- 0x5602aeee8430
 @0x7efdd88a3198 181
- 0x5602aebe18a0
 @0x7efdd88a3198 181
- 0x5602af1c3390
 @0x7efdd88a3198 181
- 0x5602aebf0300
 @0x7efdd88a3198 181
- 0x5602aec6a790
 @0x7efdd88a3198 181
- 0x5602aec57ea0
 @0x7efdd88a3198 181
- 0x5602af18fbe0
 @0x7efdd88a3198 181
- 0x5602aec3f840
 @0x7efdd88a3198 181
- 0x5602aec51480
 @0x7efdd88a3198 181
- 0x5602aec46ce0
 @0x7efdd88a3198 181
- 0x5602aebf12e0
 @0x7efdd88a3198 181
- 0x5602aec768f0
 @0x7efdd88a3198 181
- 0x5602aec06500
 @0x7efdd88a3198 181
- 0x5602aebde340
 @0x7efdd88a3198 181
- 0x5602af067b60
 @0x7efdd88a3198 181
- 0x5602aebfa8c0
 @0x7efdd88a3198 181
- 0x5602aec498c0
 @0x7efdd88a3198 181
- 0x5602aec41270
 @0x7efdd88a3198 181
- 0x5602af19eea0
 @0x7efdd88a3198 181
- 0x5602af1e09f0
 @0x7efdd88a3198 181
- 0x5602aef7f5c0
 @0x7efdd88a3198 181
- 0x5602af08ccb0
 @0x7efdd88a3198 181
- 0x5602af038680
 @0x7efdd88a3198 181
- 0x5602aec747e0
 @0x7efdd88a3198 181
- 0x5602af1e4290
 @0x7efdd88a3198 181
- 0x5602aef9fbd0
 @0x7efdd88a3198 181
- 0x5602aec4b780
 @0x7efdd88a3198 181
- 0x5602aebfd850
 @0x7efdd88a3198 181
- 0x5602af0557c0
 @0x7efdd88a3198 181
- 0x5602aebef790
 @0x7efdd88a3198 181
- 0x5602aec4f5c0
 @0x7efdd88a3198 181
- 0x5602aec5f510
 @0x7efdd88a3198 181
- 0x5602aec83ba0
 @0x7efdd88a3198 181
- 0x5602aec74d80
 @0x7efdd88a3198 181
- 0x5602aee830e0
 @0x7efdd88a3198 181
- 0x5602aec62530
 @0x7efdd88a3198 181
- 0x5602aec04940
 @0x7efdd88a3198 181
- 0x5602aec3a9d0
 @0x7efdd88a3198 181
- 0x5602aebf22a0
 @0x7efdd88a3198 181
- 0x5602af066500
 @0x7efdd88a3198 181
- 0x5602af009e20
 @0x7efdd88a3198 181
- 0x5602aec3fef0
 @0x7efdd88a3198 181
- 0x5602aec4fe60
 @0x7efdd88a3198 181
- 0x5602af01a000
 @0x7efdd88a3198 181
- 0x5602aee9e120
 @0x7efdd88a3198 181
- 0x5602aec84010
 @0x7efdd88a3198 181
- 0x5602aebe8810
 @0x7efdd88a3198 181
- 0x5602af09ef50
 @0x7efdd88a3198 181
- 0x5602aec67af0
 @0x7efdd88a3198 181
- 0x5602af1cb1b0
 @0x7efdd88a3198 181
- 0x5602aebe0c20
 @0x7efdd88a3198 181
- 0x5602aec72330
 @0x7efdd88a3198 181
- 0x5602aebe69a0
 @0x7efdd88a3198 181
- 0x5602af018bc0
 @0x7efdd88a3198 181
- 0x5602af1c54f0
 @0x7efdd88a3198 181
- 0x5602aeedd320
 @0x7efdd88a3198 181
- 0x5602af0253b0
 @0x7efdd88a3198 181
- 0x5602aec3c2f0
 @0x7efdd88a3198 181
- 0x5602aec51710
 @0x7efdd88a3198 181
- 0x5602aec480e0
 @0x7efdd88a3198 181
- 0x5602aeef98c0
 @0x7efdd88a3198 181
- 0x5602af19f120
 @0x7efdd88a3198 181
- 0x5602af051000
 @0x7efdd88a3198 181
- 0x5602af01aed0
 @0x7efdd88a3198 181
- 0x5602af1de4e0
 @0x7efdd88a3198 181
- 0x5602af19f150
 @0x7efdd88a3198 181
- 0x5602aec5cab0
 @0x7efdd88a3198 181
- 0x5602aec82540
 @0x7efdd88a3198 181
- 0x5602aebe0f00
 @0x7efdd88a3198 181
- 0x5602af01b490
 @0x7efdd88a3198 181
- 0x5602aec424a0
 @0x7efdd88a3198 181
- 0x5602aec67300
 @0x7efdd88a3198 181
- 0x5602aec68370
 @0x7efdd88a3198 181
- 0x5602aeff2920
 @0x7efdd88a3198 181
- 0x5602aeff6780
 @0x7efdd88a3198 181
- 0x5602af01aff0
 @0x7efdd88a3198 181
- 0x5602aebf45e0
 @0x7efdd88a3198 181
- 0x5602aee94410
 @0x7efdd88a3198 181
- 0x5602aebdee80
 @0x7efdd88a3198 181
- 0x5602af029410
 @0x7efdd88a3198 181
- 0x5602aec3c3c0
 @0x7efdd88a3198 181
- 0x5602aebda940
 @0x7efdd88a3198 181
- 0x5602af083470
 @0x7efdd88a3198 181
- 0x5602aec7c5b0
 @0x7efdd88a3198 181
- 0x5602af08cce0
 @0x7efdd88a3198 181
- 0x5602aec4df20
 @0x7efdd88a3198 181
- 0x5602af025050
 @0x7efdd88a3198 181
- 0x5602aec52d50
 @0x7efdd88a3198 181
- 0x5602af01b0b0
 @0x7efdd88a3198 181
- 0x5602aec77a50
 @0x7efdd88a3198 181
- 0x5602af067b30
 @0x7efdd88a3198 181
- 0x5602af1b6100
 @0x7efdd88a3198 181
- 0x5602af01b1a0
 @0x7efdd88a3198 181
- 0x5602aec58bf0
 @0x7efdd88a3198 181
- 0x5602aec4d0e0
 @0x7efdd88a3198 181
- 0x5602af1a8db0
 @0x7efdd88a3198 181
- 0x5602aec04f10
 @0x7efdd88a3198 181
- 0x5602aebe5f00
 @0x7efdd88a3198 181
- 0x5602aef7f5e0
 @0x7efdd88a3198 181
- 0x5602aebfcc00
 @0x7efdd88a3198 181
- 0x5602aeffa110
 @0x7efdd88a3198 181
- 0x5602aeff85d0
 @0x7efdd88a3198 181
- 0x5602af01abf0
 @0x7efdd88a3198 181
- 0x5602aebdbaa0
 @0x7efdd88a3198 181
- 0x5602aec61500
 @0x7efdd88a3198 181
- 0x5602af189b80
 @0x7efdd88a3198 181
- 0x5602aec70e20
 @0x7efdd88a3198 181
- 0x5602aec486f0
 @0x7efdd88a3198 181
- 0x5602aec3e400
 @0x7efdd88a3198 181
- 0x5602af03b590
 @0x7efdd88a3198 181
- 0x5602aec08890
 @0x7efdd88a3198 181
- 0x5602aebf46c0
 @0x7efdd88a3198 181
- 0x5602aec02070
 @0x7efdd88a3198 181
- 0x5602aec7e340
 @0x7efdd88a3198 181
- 0x5602af15e3a0
 @0x7efdd88a3198 181
- 0x5602aec738d0
 @0x7efdd88a3198 181
- 0x5602af04b490
 @0x7efdd88a3198 181
- 0x5602aebdfdd0
 @0x7efdd88a3198 181
- 0x5602af1d5f20
 @0x7efdd88a3198 181
- 0x5602aebe6740
 @0x7efdd88a3198 181
- 0x5602af0836e0
 @0x7efdd88a3198 181
- 0x5602af00d240
 @0x7efdd88a3198 181
- 0x5602aeffcd70
 @0x7efdd88a3198 181
- 0x5602aefd4c00
 @0x7efdd88a3198 181
- 0x5602aec45d20
 @0x7efdd88a3198 181
- 0x5602af002230
 @0x7efdd88a3198 181
- 0x5602aec4b080
 @0x7efdd88a3198 181
- 0x5602aec63a70
 @0x7efdd88a3198 181
- 0x5602af159650
 @0x7efdd88a3198 181
- 0x5602af192650
 @0x7efdd88a3198 181
- 0x5602aebc6bd0
 @0x7efdd88a3198 181
- 0x5602aec481b0
 @0x7efdd88a3198 181
- 0x5602aeff5f10
 @0x7efdd88a3198 181
- 0x5602af04a530
 @0x7efdd88a3198 181
- 0x5602af1e4370
 @0x7efdd88a3198 181
- 0x5602aebf3d60
 @0x7efdd88a3198 181
- 0x5602aebfee10
 @0x7efdd88a3198 181
- 0x5602aec5a560
 @0x7efdd88a3198 181
- 0x5602aec581e0
 @0x7efdd88a3198 181
- 0x5602aec5b4e0
 @0x7efdd88a3198 181
- 0x5602aec5f9a0
 @0x7efdd88a3198 181
- 0x5602af1b5100
 @0x7efdd88a3198 181
- 0x5602aef032e0
 @0x7efdd88a3198 181
- 0x5602af06bfe0
 @0x7efdd88a3198 181
- 0x5602aec436a0
 @0x7efdd88a3198 181
- 0x5602aebfd800
 @0x7efdd88a3198 181
- 0x5602aec79dc0
 @0x7efdd88a3198 181
- 0x5602aec064b0
 @0x7efdd88a3198 181
- 0x5602af05bff0
 @0x7efdd88a3198 181
- 0x5602aebe7410
 @0x7efdd88a3198 181
- 0x5602af040980
 @0x7efdd88a3198 181
- 0x5602aeff2270
 @0x7efdd88a3198 181
- 0x5602af15aec0
 @0x7efdd88a3198 181
- 0x5602aec584f0
 @0x7efdd88a3198 181
- 0x5602aec7b790
 @0x7efdd88a3198 181
- 0x5602aec4a4a0
 @0x7efdd88a3198 181
- 0x5602aec57550
 @0x7efdd88a3198 181
- 0x5602aec5ce70
 @0x7efdd88a3198 181
- 0x5602aee8ef40
 @0x7efdd88a3198 181
- 0x5602aec76620
 @0x7efdd88a3198 181
- 0x5602af1b6190
 @0x7efdd88a3198 181
- 0x5602aebdec30
 @0x7efdd88a3198 181
- 0x5602aebeefa0
 @0x7efdd88a3198 181
- 0x5602aebdd0c0
 @0x7efdd88a3198 181
- 0x5602aebeb380
 @0x7efdd88a3198 181
- 0x5602aec5b090
 @0x7efdd88a3198 181
- 0x5602af14bf20
 @0x7efdd88a3198 181
- 0x5602aec58a10
 @0x7efdd88a3198 181
- 0x5602aeee1470
 @0x7efdd88a3198 181
- 0x5602aeeb31c0
 @0x7efdd88a3198 181
- 0x5602aebe07d0
 @0x7efdd88a3198 181
- 0x5602aec56a10
 @0x7efdd88a3198 181
- 0x5602aec6e820
 @0x7efdd88a3198 181
- 0x5602aec422e0
 @0x7efdd88a3198 181
- 0x5602aec4a7e0
 @0x7efdd88a3198 181
- 0x5602aec4a570
 @0x7efdd88a3198 181
- 0x5602aec5a3a0
 @0x7efdd88a3198 181
- 0x5602aec543a0
 @0x7efdd88a3198 181
- 0x5602aec48d30
 @0x7efdd88a3198 181
- 0x5602aeeb1d80
 @0x7efdd88a3198 181
- 0x5602aec6f570
 @0x7efdd88a3198 181
- 0x5602aec6ecd0
 @0x7efdd88a3198 181
- 0x5602aec21e10
 @0x7efdd88a3198 181
- 0x5602af1a4db0
 @0x7efdd88a3198 181
- 0x5602aec7bb10
 @0x7efdd88a3198 181
- 0x5602aeea5100
 @0x7efdd88a3198 181
- 0x5602aec6d560
 @0x7efdd88a3198 181
- 0x5602aef9f2e0
 @0x7efdd88a3198 181
- 0x5602aec50020
 @0x7efdd88a3198 181
- 0x5602af1d5f80
 @0x7efdd88a3198 181
- 0x5602af01af00
 @0x7efdd88a3198 181
- 0x5602aec01f30
 @0x7efdd88a3198 181
- 0x5602aec48ac0
 @0x7efdd88a3198 181
- 0x5602aebd3e50
 @0x7efdd88a3198 181
- 0x5602aec64ee0
 @0x7efdd88a3198 181
- 0x5602aebe8970
 @0x7efdd88a3198 181
- 0x5602aec593c0
 @0x7efdd88a3198 181
- 0x5602aebf5b10
 @0x7efdd88a3198 181
- 0x5602af1b7560
 @0x7efdd88a3198 181
- 0x5602af1b7590
 @0x7efdd88a3198 181
- 0x5602aec5bbe0
 @0x7efdd88a3198 181
- 0x5602aec615d0
 @0x7efdd88a3198 181
- 0x5602af011b00
 @0x7efdd88a3198 181
- 0x5602aec63400
 @0x7efdd88a3198 181
- 0x5602af0c7ff0
 @0x7efdd88a3198 181
- 0x5602aec46260
 @0x7efdd88a3198 181
- 0x5602aec661a0
 @0x7efdd88a3198 181
- 0x5602aec7eb70
 @0x7efdd88a3198 181
- 0x5602aec4a980
 @0x7efdd88a3198 181
- 0x5602aebe7950
 @0x7efdd88a3198 181
- 0x5602aebece40
 @0x7efdd88a3198 181
- 0x5602aec67d80
 @0x7efdd88a3198 181
- 0x5602aef12fe0
 @0x7efdd88a3198 181
- 0x5602aeee0020
 @0x7efdd88a3198 181
- 0x5602aec79530
 @0x7efdd88a3198 181
- 0x5602aeedd340
 @0x7efdd88a3198 181
- 0x5602aec3f910
 @0x7efdd88a3198 181
- 0x5602af19ea70
 @0x7efdd88a3198 181
- 0x5602af01afc0
 @0x7efdd88a3198 181
- 0x5602aebd8cd0
 @0x7efdd88a3198 181
- 0x5602aeff8600
 @0x7efdd88a3198 181
- 0x5602aebfe7b0
 @0x7efdd88a3198 181
- 0x5602aec40d10
 @0x7efdd88a3198 181
- 0x5602af09ef20
 @0x7efdd88a3198 181
- 0x5602aebf40e0
 @0x7efdd88a3198 181
- 0x5602aeff20d0
 @0x7efdd88a3198 181
- 0x5602aec40610
 @0x7efdd88a3198 181
- 0x5602aefd2420
 @0x7efdd88a3198 181
- 0x5602aec72d00
 @0x7efdd88a3198 181
- 0x5602af04b520
 @0x7efdd88a3198 181
- 0x5602aec55670
 @0x7efdd88a3198 181
- 0x5602aebe5150
 @0x7efdd88a3198 181
- 0x5602aeec3830
 @0x7efdd88a3198 181
- 0x5602aec3b3b0
 @0x7efdd88a3198 181
- 0x5602aeff1e50
 @0x7efdd88a3198 181
- 0x5602aec40f80
 @0x7efdd88a3198 181
- 0x5602aec748d0
 @0x7efdd88a3198 181
- 0x5602aec03fe0
 @0x7efdd88a3198 181
- 0x5602aec46a10
 @0x7efdd88a3198 181
- 0x5602aec6ee70
 @0x7efdd88a3198 181
- 0x5602aeff07e0
 @0x7efdd88a3198 181
- 0x5602aec6fd80
 @0x7efdd88a3198 181
- 0x5602af1e08d0
 @0x7efdd88a3198 181
- 0x5602aec48460
 @0x7efdd88a3198 181
- 0x5602aec46db0
 @0x7efdd88a3198 181
- 0x5602aebdc310
 @0x7efdd88a3198 181
- 0x5602af09ef80
 @0x7efdd88a3198 181
- 0x5602aec576f0
 @0x7efdd88a3198 181
- 0x5602aeffcc40
 @0x7efdd88a3198 181
- 0x5602aec04430
 @0x7efdd88a3198 181
- 0x5602aebf2730
 @0x7efdd88a3198 181
- 0x5602af01adb0
 @0x7efdd88a3198 181
- 0x5602aec3cf50
 @0x7efdd88a3198 181
- 0x5602af14dfa0
 @0x7efdd88a3198 181
- 0x5602aebe24e0
 @0x7efdd88a3198 181
- 0x5602aec05fa0
 @0x7efdd88a3198 181
- 0x5602af14bf40
 @0x7efdd88a3198 181
- 0x5602af03bf20
 @0x7efdd88a3198 181
- 0x5602af1b6280
 @0x7efdd88a3198 181
- 0x5602aebe8610
 @0x7efdd88a3198 181
- 0x5602aebf86a0
 @0x7efdd88a3198 181
- 0x5602aec3b050
 @0x7efdd88a3198 181
- 0x5602aebf7a70
 @0x7efdd88a3198 181
- 0x5602aec52900
 @0x7efdd88a3198 181
- 0x5602af1db2f0
 @0x7efdd88a3198 181
- 0x5602aebded90
 @0x7efdd88a3198 181
- 0x5602aec713c0
 @0x7efdd88a3198 181
- 0x5602aebedda0
 @0x7efdd88a3198 181
- 0x5602aec67750
 @0x7efdd88a3198 181
- 0x5602aec466d0
 @0x7efdd88a3198 181
- 0x5602aebfc110
 @0x7efdd88a3198 181
- 0x5602aebf6210
 @0x7efdd88a3198 181
- 0x5602aebfeca0
 @0x7efdd88a3198 181
- 0x5602aec4bbd0
 @0x7efdd88a3198 181
- 0x5602af000f10
 @0x7efdd88a3198 181
- 0x5602aeeb5420
 @0x7efdd88a3198 181
- 0x5602aec48b90
 @0x7efdd88a3198 181
- 0x5602aebe8da0
 @0x7efdd88a3198 181
- 0x5602af01b310
 @0x7efdd88a3198 181
- 0x5602aebf8930
 @0x7efdd88a3198 181
- 0x5602aec80f90
 @0x7efdd88a3198 181
- 0x5602aec67bc0
 @0x7efdd88a3198 181
- 0x5602aec46190
 @0x7efdd88a3198 181
- 0x5602aec57620
 @0x7efdd88a3198 181
- 0x5602aec05810
 @0x7efdd88a3198 181
- 0x5602aec6ba40
 @0x7efdd88a3198 181
- 0x5602aec6ac20
 @0x7efdd88a3198 181
- 0x5602aebfa1d0
 @0x7efdd88a3198 181
- 0x5602aebe5850
 @0x7efdd88a3198 181
- 0x5602aebded50
 @0x7efdd88a3198 181
- 0x5602aec6dc80
 @0x7efdd88a3198 181
- 0x5602af147e20
 @0x7efdd88a3198 181
- 0x5602aec76c50
 @0x7efdd88a3198 181
- 0x5602aeff6720
 @0x7efdd88a3198 181
- 0x5602af016aa0
 @0x7efdd88a3198 181
- 0x5602aec73530
 @0x7efdd88a3198 181
- 0x5602aebeee20
 @0x7efdd88a3198 181
- 0x5602aec41410
 @0x7efdd88a3198 181
- 0x5602aeeb6f50
 @0x7efdd88a3198 181
- 0x5602af029470
 @0x7efdd88a3198 181
- 0x5602aec792c0
 @0x7efdd88a3198 181
- 0x5602aec27280
 @0x7efdd88a3198 181
- 0x5602aec55d90
 @0x7efdd88a3198 181
- 0x5602aebe44f0
 @0x7efdd88a3198 181
- 0x5602aec56ae0
 @0x7efdd88a3198 181
- 0x5602aec6b970
 @0x7efdd88a3198 181
- 0x5602aec4bea0
 @0x7efdd88a3198 181
- 0x5602aec75480
 @0x7efdd88a3198 181
- 0x5602aec2a740
 @0x7efdd88a3198 181
- 0x5602aec63260
 @0x7efdd88a3198 181
- 0x5602aec73f90
 @0x7efdd88a3198 181
- 0x5602aebdac80
 @0x7efdd88a3198 181
- 0x5602aec5dac0
 @0x7efdd88a3198 181
- 0x5602aebf9900
 @0x7efdd88a3198 181
- 0x5602af05f210
 @0x7efdd88a3198 181
- 0x5602af1ac060
 @0x7efdd88a3198 181
- 0x5602aebdb210
 @0x7efdd88a3198 181
- 0x5602aec57480
 @0x7efdd88a3198 181
- 0x5602aec7a770
 @0x7efdd88a3198 181
- 0x5602af050fa0
 @0x7efdd88a3198 181
- 0x5602aebd8a20
 @0x7efdd88a3198 181
- 0x5602aebf63f0
 @0x7efdd88a3198 181
- 0x5602aec72260
 @0x7efdd88a3198 181
- 0x5602aec7f540
 @0x7efdd88a3198 181
- 0x5602aec059a0
 @0x7efdd88a3198 181
- 0x5602aec840e0
 @0x7efdd88a3198 181
- 0x5602aec75e30
 @0x7efdd88a3198 181
- 0x5602aec43bc0
 @0x7efdd88a3198 181
- 0x5602aec40090
 @0x7efdd88a3198 181
- 0x5602aec3f6a0
 @0x7efdd88a3198 181
- 0x5602aec82470
 @0x7efdd88a3198 181
- 0x5602aec06ee0
 @0x7efdd88a3198 181
- 0x5602aec6ffc0
 @0x7efdd88a3198 181
- 0x5602aec66360
 @0x7efdd88a3198 181
- 0x5602aec691d0
 @0x7efdd88a3198 181
- 0x5602af1b6250
 @0x7efdd88a3198 181
- 0x5602aec3cdb0
 @0x7efdd88a3198 181
- 0x5602aebe7f80
 @0x7efdd88a3198 181
- 0x5602aec66630
 @0x7efdd88a3198 181
- 0x5602aec47250
 @0x7efdd88a3198 181
- 0x5602aec81d70
 @0x7efdd88a3198 181
- 0x5602aec82a60
 @0x7efdd88a3198 181
- 0x5602aec4ec50
 @0x7efdd88a3198 181
- 0x5602aebebfa0
 @0x7efdd88a3198 181
- 0x5602aec004f0
 @0x7efdd88a3198 181
- 0x5602aebc0800
 @0x7efdd88a3198 181
- 0x5602aec7c9e0
 @0x7efdd88a3198 181
- 0x5602af1b25f0
 @0x7efdd88a3198 181
- 0x5602aebf2220
 @0x7efdd88a3198 181
- 0x5602aebffd90
 @0x7efdd88a3198 181
- 0x5602aeec6440
 @0x7efdd88a3198 181
- 0x5602af173100
 @0x7efdd88a3198 181
- 0x5602aebf4a30
 @0x7efdd88a3198 181
- 0x5602aec65460
 @0x7efdd88a3198 181
- 0x5602aec68570
 @0x7efdd88a3198 181
- 0x5602aec50950
 @0x7efdd88a3198 181
- 0x5602aec5ae00
 @0x7efdd88a3198 181
- 0x5602aec3d110
 @0x7efdd88a3198 181
- 0x5602aec77ce0
 @0x7efdd88a3198 181
- 0x5602aec782d0
 @0x7efdd88a3198 181
- 0x5602aec6e200
 @0x7efdd88a3198 181
- 0x5602aec6c410
 @0x7efdd88a3198 181
- 0x5602aec01d60
 @0x7efdd88a3198 181
- 0x5602aec4eee0
 @0x7efdd88a3198 181
- 0x5602aec59f90
 @0x7efdd88a3198 181
- 0x5602aebe7320
 @0x7efdd88a3198 181
- 0x5602aebfab80
 @0x7efdd88a3198 181
- 0x5602aeeeb220
 @0x7efdd88a3198 181
- 0x5602aebfe1b0
 @0x7efdd88a3198 181
- 0x5602af01b3d0
 @0x7efdd88a3198 181
- 0x5602aeeac770
 @0x7efdd88a3198 181
- 0x5602aebe3650
 @0x7efdd88a3198 181
- 0x5602aebf2780
 @0x7efdd88a3198 181
- 0x5602aebea2a0
 @0x7efdd88a3198 181
- 0x5602aec7f0b0
 @0x7efdd88a3198 181
- 0x5602aebf2e60
 @0x7efdd88a3198 181
- 0x5602aeea6a50
 @0x7efdd88a3198 181
- 0x5602aec3d870
 @0x7efdd88a3198 181
- 0x5602aec69bc0
 @0x7efdd88a3198 181
- 0x5602aee80950
 @0x7efdd88a3198 181
- 0x5602aec761d0
 @0x7efdd88a3198 181
- 0x5602af037a00
 @0x7efdd88a3198 181
- 0x5602aec46330
 @0x7efdd88a3198 181
- 0x5602af05bfc0
 @0x7efdd88a3198 181
- 0x5602aec3bbb0
 @0x7efdd88a3198 181
- 0x5602aec682a0
 @0x7efdd88a3198 181
- 0x5602af1b5130
 @0x7efdd88a3198 181
- 0x5602aec6d8e0
 @0x7efdd88a3198 181
- 0x5602aec572c0
 @0x7efdd88a3198 181
- 0x5602aebe97c0
 @0x7efdd88a3198 181
- 0x5602aec69030
 @0x7efdd88a3198 181
- 0x5602aee7fcc0
 @0x7efdd88a3198 181
- 0x5602aec639a0
 @0x7efdd88a3198 181
- 0x5602aec442c0
 @0x7efdd88a3198 181
- 0x5602aebf1360
 @0x7efdd88a3198 181
- 0x5602aebff4a0
 @0x7efdd88a3198 181
- 0x5602aec77db0
 @0x7efdd88a3198 181
- 0x5602aeeb5610
 @0x7efdd88a3198 181
- 0x5602af1da3c0
 @0x7efdd88a3198 181
- 0x5602aec3af80
 @0x7efdd88a3198 181
- 0x5602af1caff0
 @0x7efdd88a3198 181
- 0x5602aebfef50
 @0x7efdd88a3198 181
- 0x5602aec64380
 @0x7efdd88a3198 181
- 0x5602aec67930
 @0x7efdd88a3198 181
- 0x5602af01b340
 @0x7efdd88a3198 181
- 0x5602aec40160
 @0x7efdd88a3198 181
- 0x5602aebdf7e0
 @0x7efdd88a3198 181
- 0x5602aeebe390
 @0x7efdd88a3198 181
- 0x5602aec45ff0
 @0x7efdd88a3198 181
- 0x5602af01acc0
 @0x7efdd88a3198 181
- 0x5602af0071c0
 @0x7efdd88a3198 181
- 0x5602aec3ef20
 @0x7efdd88a3198 181
- 0x5602af19cd20
 @0x7efdd88a3198 181
- 0x5602aebeca30
 @0x7efdd88a3198 181
- 0x5602aebf33b0
 @0x7efdd88a3198 181
- 0x5602aebd9040
 @0x7efdd88a3198 181
- 0x5602aec61030
 @0x7efdd88a3198 181
- 0x5602aec71fb0
 @0x7efdd88a3198 181
- 0x5602aec48c60
 @0x7efdd88a3198 181
- 0x5602aebf2660
 @0x7efdd88a3198 181
- 0x5602aec06d40
 @0x7efdd88a3198 181
- 0x5602aefcb510
 @0x7efdd88a3198 181
- 0x5602aec7b6c0
 @0x7efdd88a3198 181
- 0x5602aebe6ab0
 @0x7efdd88a3198 181
- 0x5602aeb42150
 @0x7efdd88a3198 181
- 0x5602af009dc0
 @0x7efdd88a3198 181
- 0x5602aec87320
 @0x7efdd88a3198 181
- 0x5602af15ec40
 @0x7efdd88a3198 181
- 0x5602aec431d0
 @0x7efdd88a3198 181
- 0x5602aec3be60
 @0x7efdd88a3198 181
- 0x5602aec49990
 @0x7efdd88a3198 181
- 0x5602aec434c0
 @0x7efdd88a3198 181
- 0x5602aec47770
 @0x7efdd88a3198 181
- 0x5602af1d3b50
 @0x7efdd88a3198 181
- 0x5602aec83e50
 @0x7efdd88a3198 181
- 0x5602aec78200
 @0x7efdd88a3198 181
- 0x5602aec44d00
 @0x7efdd88a3198 181
- 0x5602aec43a20
 @0x7efdd88a3198 181
- 0x5602aec5d1f0
 @0x7efdd88a3198 181
- 0x5602aebefe20
 @0x7efdd88a3198 181
- 0x5602aec4d2a0
 @0x7efdd88a3198 181
- 0x5602aec55cc0
 @0x7efdd88a3198 181
- 0x5602aec6d630
 @0x7efdd88a3198 181
- 0x5602aec53fe0
 @0x7efdd88a3198 181
- 0x5602aebf1650
 @0x7efdd88a3198 181
- 0x5602aec70230
 @0x7efdd88a3198 181
- 0x5602aec7be70
 @0x7efdd88a3198 181
- 0x5602aec74710
 @0x7efdd88a3198 181
- 0x5602aec6fbe0
 @0x7efdd88a3198 181
- 0x5602aec5aac0
 @0x7efdd88a3198 181
- 0x5602aee86400
 @0x7efdd88a3198 181
- 0x5602aee863d0
 @0x7efdd88a3198 181
- 0x5602aebfd190
 @0x7efdd88a3198 181
- 0x5602aebfcbb0
 @0x7efdd88a3198 181
- 0x5602aeec3490
 @0x7efdd88a3198 181
- 0x5602aec42210
 @0x7efdd88a3198 181
- 0x5602aebeb320
 @0x7efdd88a3198 181
- 0x5602af036650
 @0x7efdd88a3198 181
- 0x5602aec76440
 @0x7efdd88a3198 181
- 0x5602aec75fd0
 @0x7efdd88a3198 181
- 0x5602aec48ef0
 @0x7efdd88a3198 181
- 0x5602aec77260
 @0x7efdd88a3198 181
- 0x5602aec52170
 @0x7efdd88a3198 181
- 0x5602aebfda10
 @0x7efdd88a3198 181
- 0x5602aebeaf90
 @0x7efdd88a3198 181
- 0x5602aebebce0
 @0x7efdd88a3198 181
- 0x5602af141980
 @0x7efdd88a3198 181
- 0x5602aebed040
 @0x7efdd88a3198 181
- 0x5602af1e4260
 @0x7efdd88a3198 181
- 0x5602af1ac030
 @0x7efdd88a3198 181
- 0x5602aec724d0
 @0x7efdd88a3198 181
- 0x5602aebff2b0
 @0x7efdd88a3198 181
- 0x5602af1cb1e0
 @0x7efdd88a3198 181
- 0x5602af1cd670
 @0x7efdd88a3198 181
- 0x5602aec59d00
 @0x7efdd88a3198 181
- 0x5602aebee0b0
 @0x7efdd88a3198 181
- 0x5602aebed5a0
 @0x7efdd88a3198 181
- 0x5602aec5fc30
 @0x7efdd88a3198 181
- 0x5602aec3b2e0
 @0x7efdd88a3198 181
- 0x5602aebe7800
 @0x7efdd88a3198 181
- 0x5602aec06270
 @0x7efdd88a3198 181
- 0x5602aec564b0
 @0x7efdd88a3198 181
- 0x5602aec7dfc0
 @0x7efdd88a3198 181
- 0x5602aec5bff0
 @0x7efdd88a3198 181
- 0x5602aebe98a0
 @0x7efdd88a3198 181
- 0x5602aec3d4b0
 @0x7efdd88a3198 181
- 0x5602aec00860
 @0x7efdd88a3198 181
- 0x5602af1db350
 @0x7efdd88a3198 181
- 0x5602aebf2a40
 @0x7efdd88a3198 181
- 0x5602aec80ce0
 @0x7efdd88a3198 181
- 0x5602aec63190
 @0x7efdd88a3198 181
- 0x5602aec538e0
 @0x7efdd88a3198 181
- 0x5602aec47da0
 @0x7efdd88a3198 181
- 0x5602aec01670
 @0x7efdd88a3198 181
- 0x5602aec49cd0
 @0x7efdd88a3198 181
- 0x5602aebd98b0
 @0x7efdd88a3198 181
- 0x5602aebf3400
 @0x7efdd88a3198 181
- 0x5602af051f10
 @0x7efdd88a3198 181
- 0x5602aec5e9c0
 @0x7efdd88a3198 181
- 0x5602aec4e1b0
 @0x7efdd88a3198 181
- 0x5602aec5cc70
 @0x7efdd88a3198 181
- 0x5602aeea6110
 @0x7efdd88a3198 181
- 0x5602aebf07a0
 @0x7efdd88a3198 181
- 0x5602af175960
 @0x7efdd88a3198 181
- 0x5602aec5ad30
 @0x7efdd88a3198 181
- 0x5602af1d3710
 @0x7efdd88a3198 181
- 0x5602aec6aeb0
 @0x7efdd88a3198 181
- 0x5602aec51df0
 @0x7efdd88a3198 181
- 0x5602af0386b0
 @0x7efdd88a3198 181
- 0x5602aec4cf00
 @0x7efdd88a3198 181
- 0x5602af1cf800
 @0x7efdd88a3198 181
- 0x5602aec7f970
 @0x7efdd88a3198 181
- 0x5602aec668a0
 @0x7efdd88a3198 181
- 0x5602aebefc40
 @0x7efdd88a3198 181
- 0x5602aec5bd80
 @0x7efdd88a3198 181
- 0x5602aeec6470
 @0x7efdd88a3198 181
- 0x5602aec64280
 @0x7efdd88a3198 181
- 0x5602aec559d0
 @0x7efdd88a3198 181
- 0x5602aebe3d10
 @0x7efdd88a3198 181
- 0x5602aec62c70
 @0x7efdd88a3198 181
- 0x5602aec82cf0
 @0x7efdd88a3198 181
- 0x5602af1c3450
 @0x7efdd88a3198 181
- 0x5602aebf3060
 @0x7efdd88a3198 181
- 0x5602aebfeaa0
 @0x7efdd88a3198 181
- 0x5602aec04670
 @0x7efdd88a3198 181
- 0x5602aec2b320
 @0x7efdd88a3198 181
- 0x5602aebf3020
 @0x7efdd88a3198 181
- 0x5602aec5ffd0
 @0x7efdd88a3198 181
- 0x5602aebe0360
 @0x7efdd88a3198 181
- 0x5602aec58f70
 @0x7efdd88a3198 181
- 0x5602af1b7fa0
 @0x7efdd88a3198 181
- 0x5602aec217b0
 @0x7efdd88a3198 181
- 0x5602aec5efb0
 @0x7efdd88a3198 181
- 0x5602aebd9a60
 @0x7efdd88a3198 181
- 0x5602aebeab50
 @0x7efdd88a3198 181
- 0x5602aebe9f20
 @0x7efdd88a3198 181
- 0x5602aec539b0
 @0x7efdd88a3198 181
- 0x5602af1de3e0
 @0x7efdd88a3198 181
- 0x5602aebdee30
 @0x7efdd88a3198 181
- 0x5602aebf56f0
 @0x7efdd88a3198 181
- 0x5602aec52310
 @0x7efdd88a3198 181
- 0x5602aee899e0
 @0x7efdd88a3198 181
- 0x5602aebde010
 @0x7efdd88a3198 181
- 0x5602aeebe100
 @0x7efdd88a3198 181
- 0x5602af08ab50
 @0x7efdd88a3198 181
- 0x5602aebff880
 @0x7efdd88a3198 181
- 0x5602aebe4640
 @0x7efdd88a3198 181
- 0x5602af001a10
 @0x7efdd88a3198 181
- 0x5602aefce550
 @0x7efdd88a3198 181
- 0x5602aec44390
 @0x7efdd88a3198 181
- 0x5602aec6e5e0
 @0x7efdd88a3198 181
- 0x5602aebfbd20
 @0x7efdd88a3198 181
- 0x5602aec60170
 @0x7efdd88a3198 181
- 0x5602aec5c9e0
 @0x7efdd88a3198 181
- 0x5602aebf9530
 @0x7efdd88a3198 181
- 0x5602aebf0970
 @0x7efdd88a3198 181
- 0x5602aebf7990
 @0x7efdd88a3198 181
- 0x5602aec3ffc0
 @0x7efdd88a3198 181
- 0x5602af02cdf0
 @0x7efdd88a3198 181
- 0x5602aec59a30
 @0x7efdd88a3198 181
- 0x5602af19eb70
 @0x7efdd88a3198 181
- 0x5602aec3f0e0
 @0x7efdd88a3198 181
- 0x5602aefa6da0
 @0x7efdd88a3198 181
- 0x5602aec4ad20
 @0x7efdd88a3198 181
- 0x5602aec5be50
 @0x7efdd88a3198 181
- 0x5602aebf17f0
 @0x7efdd88a3198 181
- 0x5602aec60a90
 @0x7efdd88a3198 181
- 0x5602aec81150
 @0x7efdd88a3198 181
- 0x5602aebdcea0
 @0x7efdd88a3198 181
- 0x5602aec54670
 @0x7efdd88a3198 181
- 0x5602aebf8fd0
 @0x7efdd88a3198 181
- 0x5602aebf4db0
 @0x7efdd88a3198 181
- 0x5602aef04f60
 @0x7efdd88a3198 181
- 0x5602aebf8e30
 @0x7efdd88a3198 181
- 0x5602af066600
 @0x7efdd88a3198 181
- 0x5602aec7f360
 @0x7efdd88a3198 181
- 0x5602aefcb530
 @0x7efdd88a3198 181
- 0x5602aebdc1d0
 @0x7efdd88a3198 181
- 0x5602aec7c840
 @0x7efdd88a3198 181
- 0x5602af19ebf0
 @0x7efdd88a3198 181
- 0x5602af1b61f0
 @0x7efdd88a3198 181
- 0x5602aec53630
 @0x7efdd88a3198 181
- 0x5602aec4dd80
 @0x7efdd88a3198 181
- 0x5602aec47f40
 @0x7efdd88a3198 181
- 0x5602aec53d30
 @0x7efdd88a3198 181
- 0x5602aec5a740
 @0x7efdd88a3198 181
- 0x5602aec3e240
 @0x7efdd88a3198 181
- 0x5602af086c20
 @0x7efdd88a3198 181
- 0x5602aec7e7f0
 @0x7efdd88a3198 181
- 0x5602af1b7ee0
 @0x7efdd88a3198 181
- 0x5602aec587a0
 @0x7efdd88a3198 181
- 0x5602af093760
 @0x7efdd88a3198 181
- 0x5602aec79460
 @0x7efdd88a3198 181
- 0x5602aeea2650
 @0x7efdd88a3198 181
- 0x5602aebec370
 @0x7efdd88a3198 181
- 0x5602aebe9650
 @0x7efdd88a3198 181
- 0x5602aec78060
 @0x7efdd88a3198 181
- 0x5602aebff300
 @0x7efdd88a3198 181
- 0x5602aeea2630
 @0x7efdd88a3198 181
- 0x5602af08d8a0
 @0x7efdd88a3198 181
- 0x5602aec69550
 @0x7efdd88a3198 181
- 0x5602aec5df20
 @0x7efdd88a3198 181
- 0x5602aebe19f0
 @0x7efdd88a3198 181
- 0x5602aebfeb80
 @0x7efdd88a3198 181
- 0x5602aec5e620
 @0x7efdd88a3198 181
- 0x5602aec82610
 @0x7efdd88a3198 181
- 0x5602aec8ed70
 @0x7efdd88a3198 181
- 0x5602aec44460
 @0x7efdd88a3198 181
- 0x5602aeef2df0
 @0x7efdd88a3198 181
- 0x5602aec70d50
 @0x7efdd88a3198 181
- 0x5602aec56580
 @0x7efdd88a3198 181
- 0x5602aec502f0
 @0x7efdd88a3198 181
- 0x5602aec6f930
 @0x7efdd88a3198 181
- 0x5602aec01760
 @0x7efdd88a3198 181
- 0x5602aebf3ff0
 @0x7efdd88a3198 181
- 0x5602aec65660
 @0x7efdd88a3198 181
- 0x5602aec55360
 @0x7efdd88a3198 181
- 0x5602aef03810
 @0x7efdd88a3198 181
- 0x5602aec71940
 @0x7efdd88a3198 181
- 0x5602aec47090
 @0x7efdd88a3198 181
- 0x5602aebdc4f0
 @0x7efdd88a3198 181
- 0x5602aec72b60
 @0x7efdd88a3198 181
- 0x5602aec02b40
 @0x7efdd88a3198 181
- 0x5602aec769c0
 @0x7efdd88a3198 181
- 0x5602aec44c30
 @0x7efdd88a3198 181
- 0x5602aebda4d0
 @0x7efdd88a3198 181
- 0x5602aec022a0
 @0x7efdd88a3198 181
- 0x5602aec66fa0
 @0x7efdd88a3198 181
- 0x5602aec57dd0
 @0x7efdd88a3198 181
- 0x5602aec61f90
 @0x7efdd88a3198 181
- 0x5602aec3e040
 @0x7efdd88a3198 181
- 0x5602aec5c390
 @0x7efdd88a3198 181
- 0x5602aec04a60
 @0x7efdd88a3198 181
- 0x5602af00ff30
 @0x7efdd88a3198 181
- 0x5602aec4e8b0
 @0x7efdd88a3198 181
- 0x5602aec73280
 @0x7efdd88a3198 181
- 0x5602aebe34e0
 @0x7efdd88a3198 181
- 0x5602af167b70
 @0x7efdd88a3198 181
- 0x5602aec76710
 @0x7efdd88a3198 181
- 0x5602af19e970
 @0x7efdd88a3198 181
- 0x5602aec1bbe0
 @0x7efdd88a3198 181
- 0x5602aebe6560
 @0x7efdd88a3198 181
- 0x5602aec5d2c0
 @0x7efdd88a3198 181
- 0x5602aec828a0
 @0x7efdd88a3198 181
- 0x5602aec4efb0
 @0x7efdd88a3198 181
- 0x5602af148fa0
 @0x7efdd88a3198 181
- 0x5602aebf1830
 @0x7efdd88a3198 181
- 0x5602aec6bb30
 @0x7efdd88a3198 181
- 0x5602aec796f0
 @0x7efdd88a3198 181
- 0x5602aec3cc10
 @0x7efdd88a3198 181
- 0x5602aec7dcb0
 @0x7efdd88a3198 181
- 0x5602aec50d80
 @0x7efdd88a3198 181
- 0x5602af009c20
 @0x7efdd88a3198 181
- 0x5602aec4c200
 @0x7efdd88a3198 181
- 0x5602aebd96a0
 @0x7efdd88a3198 181
- 0x5602af0397c0
 @0x7efdd88a3198 181
- 0x5602aec4c040
 @0x7efdd88a3198 181
- 0x5602aec7a070
 @0x7efdd88a3198 181
- 0x5602aec827d0
 @0x7efdd88a3198 181
- 0x5602aec5afc0
 @0x7efdd88a3198 181
- 0x5602aec68820
 @0x7efdd88a3198 181
- 0x5602af03bef0
 @0x7efdd88a3198 181
- 0x5602aebe6df0
 @0x7efdd88a3198 181
- 0x5602aec6f3b0
 @0x7efdd88a3198 181
- 0x5602aec61860
 @0x7efdd88a3198 181
- 0x5602aec51a70
 @0x7efdd88a3198 181
- 0x5602aec1f9d0
 @0x7efdd88a3198 181
- 0x5602aec7b520
 @0x7efdd88a3198 181
- 0x5602aebe6d20
 @0x7efdd88a3198 181
- 0x5602af0664d0
 @0x7efdd88a3198 181
- 0x5602aec42140
 @0x7efdd88a3198 181
- 0x5602aec83120
 @0x7efdd88a3198 181
- 0x5602af192680
 @0x7efdd88a3198 181
- 0x5602aec50a20
 @0x7efdd88a3198 181
- 0x5602aec418a0
 @0x7efdd88a3198 181
- 0x5602aec3e4d0
 @0x7efdd88a3198 181
- 0x5602aeeab190
 @0x7efdd88a3198 181
- 0x5602aebf10b0
 @0x7efdd88a3198 181
- 0x5602aec8b3d0
 @0x7efdd88a3198 181
- 0x5602af0bade0
 @0x7efdd88a3198 181
- 0x5602aebec320
 @0x7efdd88a3198 181
- 0x5602af025020
 @0x7efdd88a3198 181
- 0x5602aec5fd00
 @0x7efdd88a3198 181
- 0x5602aec5bcb0
 @0x7efdd88a3198 181
- 0x5602aec520a0
 @0x7efdd88a3198 181
- 0x5602aec74f40
 @0x7efdd88a3198 181
- 0x5602aec693b0
 @0x7efdd88a3198 181
- 0x5602aebd9650
 @0x7efdd88a3198 181
- 0x5602aec6b8a0
 @0x7efdd88a3198 181
- 0x5602aec73a70
 @0x7efdd88a3198 181
- 0x5602aec4b3c0
 @0x7efdd88a3198 181
- 0x5602aec54d10
 @0x7efdd88a3198 181
- 0x5602aee82e30
 @0x7efdd88a3198 181
- 0x5602aebe7010
 @0x7efdd88a3198 181
- 0x5602af02cdc0
 @0x7efdd88a3198 181
- 0x5602af01ad50
 @0x7efdd88a3198 181
- 0x5602aec44050
 @0x7efdd88a3198 181
- 0x5602aec64760
 @0x7efdd88a3198 181
- 0x5602aebf5080
 @0x7efdd88a3198 181
- 0x5602af1019b0
 @0x7efdd88a3198 181
- 0x5602af03be90
 @0x7efdd88a3198 181
- 0x5602aec640e0
 @0x7efdd88a3198 181
- 0x5602aeffcc70
 @0x7efdd88a3198 181
- 0x5602aec83710
 @0x7efdd88a3198 181
- 0x5602aec433f0
 @0x7efdd88a3198 181
- 0x5602af1e7ab0
 @0x7efdd88a3198 181
- 0x5602aebdf500
 @0x7efdd88a3198 181
- 0x5602aebda3c0
 @0x7efdd88a3198 181
- 0x5602af01b370
 @0x7efdd88a3198 181
- 0x5602aec83480
 @0x7efdd88a3198 181
- 0x5602aec58cc0
 @0x7efdd88a3198 181
- 0x5602af01ade0
 @0x7efdd88a3198 181
- 0x5602aef037f0
 @0x7efdd88a3198 181
- 0x5602aec411a0
 @0x7efdd88a3198 181
- 0x5602af15f950
 @0x7efdd88a3198 181
- 0x5602aebfdf70
 @0x7efdd88a3198 181
- 0x5602aec3b620
 @0x7efdd88a3198 181
- 0x5602aec83550
 @0x7efdd88a3198 181
- 0x5602aefeaa80
 @0x7efdd88a3198 181
- 0x5602aec45060
 @0x7efdd88a3198 181
- 0x5602aec787e0
 @0x7efdd88a3198 181
- 0x5602aebe8f60
 @0x7efdd88a3198 181
- 0x5602aebf7290
 @0x7efdd88a3198 181
- 0x5602aec44ea0
 @0x7efdd88a3198 181
- 0x5602aec70090
 @0x7efdd88a3198 181
- 0x5602aec05ff0
 @0x7efdd88a3198 181
- 0x5602af057920
 @0x7efdd88a3198 181
- 0x5602af02ae80
 @0x7efdd88a3198 181
- 0x5602af01b230
 @0x7efdd88a3198 181
- 0x5602aec1f700
 @0x7efdd88a3198 181
3445d 181 0 CALL:  flags:problog_flag(propagate_known, _1048367 )
3446d 181 0 CALL:  gflags:flag_get(propagate_known, _1048367 )
3447d 181 0 CALL:  prolog:recorded(flag_values, flag(propagate_known,_133027), _133028 )
3448d 181 0 TRY_OR 
3449d 216 0 CALL:  prolog:==(true, true )
3450d 181 0 CALL:  logger:logger_start_timer(train_bdd_script_generation_propagation )
3451d 181 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_propagation, _1048359 )
3452d 181 0 TRY_OR 
3453d 225 0 CALL:  prolog:bb_get(logger:logger_start_time_train_bdd_script_generation_propagation, null )
3454d 181 0 CALL:  prolog:statistics(walltime, [_133032,_133034] )
3455d 181 0 CALL:  prolog:$walltime(_133032, _133034 )
3456d 181 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_propagation, 304606 )
3457d 181 0 CALL:  print_learning:format_learning(5, p, [] )
3458d 217 0 CALL:  flags:problog_flag(verbosity_learning, _1048349 )
3459d 217 0 CALL:  gflags:flag_get(verbosity_learning, _1048349 )
3460d 217 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_133041), _133042 )
3461d 217 0 CALL:  prolog:>=(5, 5 )
3462d 181 0 CALL:  prolog:format(p, print_learning:[] )
3463d 181 0 CALL:  prolog:flush_output(user )
p3464d 181 0 CALL:  prolog:$current_choice_point(_1048368 )
3465d 181 0 CALL:  completion:propagate
+s 0x5602af267ff0
 @0x7efdd88a31a8 0
+s 0x5602aef9fbd0
 @0x7efdd88a31a8 0
- 0x5602af267ff0
 @0x7efdd88a31a8 181
3466d 215 0 CALL:  flags:problog_flag(propagate_det, true )
3467d 215 0 CALL:  gflags:flag_get(propagate_det, true )
3468d 215 0 CALL:  prolog:recorded(flag_values, flag(propagate_det,true), _133049 )
3469d 181 0 TRY_OR 
3470d 232 0 CALL:  prolog:$current_choice_point(_1048351 )
3471d 232 0 CALL:  completion:propagate_intern_known(_1048352 )
+s 0x5602af267ff0
 @0x7efdd88a31c8 0
+s 0x5602af233660
 @0x7efdd88a31c8 0
- 0x5602af267ff0
 @0x7efdd88a31c8 232
3472d 240 0 CALL:  prolog:recorded(unpropagated_rules, <=>(_133051,_133052), _1048315 )
3473d 240 0 FAIL RETRY:  completion:propagate_intern_known(_1048352 )
3474d 232 0 CALL:  prolog:==(false, false )
3475d 232 0 CALL:  prolog:$current_choice_point(_1048353 )
3476d 232 0 CALL:  completion:propagate_intern_deterministic(_1048354 )
+s 0x5602af267ff0
 @0x7efdd88a31e8 0
+s 0x5602af03bef0
 @0x7efdd88a31e8 0
- 0x5602af267ff0
 @0x7efdd88a31e8 232
3477d 240 0 CALL:  prolog:recorded(rules, <=>(_133051,_133052), _1048317 )
3478d 240 0 FAIL RETRY:  completion:propagate_intern_deterministic(_1048354 )
3479d 232 0 CALL:  prolog:==(false, false )
3480d 181 0 CALL:  logger:logger_stop_timer(train_bdd_script_generation_propagation )
3481d 181 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_propagation, _1048357 )
3482d 181 0 CALL:  prolog:bb_delete(logger:logger_start_time_train_bdd_script_generation_propagation, _1048360 )
3483d 181 0 CALL:  prolog:statistics(walltime, [_133053,_133055] )
3484d 181 0 CALL:  prolog:$walltime(_133053, _133055 )
3485d 181 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_propagation, null )
3486d 181 0 TRY_OR 
3487d 222 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation_propagation )
3488d 222 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_propagation, _1048346 )
3489d 222 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_propagation, _1048347 )
3490d 222 0 CALL:  prolog:\=(null, null )
3492d 181 0 CALL:  logger:logger_set_variable(train_bdd_script_generation_propagation, 167 )
3493d 181 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_propagation, _1048356 )
3494d 181 0 TRY_OR 
3495d 228 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_propagation, null )
3496d 181 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation_propagation, 167 )
3497d 181 0 CALL:  flags:problog_flag(split_bdds, _1048370 )
3498d 181 0 CALL:  gflags:flag_get(split_bdds, _1048370 )
3499d 181 0 CALL:  prolog:recorded(flag_values, flag(split_bdds,_133065), _133066 )
3500d 181 0 CALL:  print_learning:format_learning(5, 'S', [] )
3501d 215 0 CALL:  flags:problog_flag(verbosity_learning, _1048351 )
3502d 215 0 CALL:  gflags:flag_get(verbosity_learning, _1048351 )
3503d 215 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_133069), _133070 )
3504d 215 0 CALL:  prolog:>=(5, 5 )
3505d 181 0 CALL:  prolog:format('S', print_learning:[] )
3506d 181 0 CALL:  prolog:flush_output(user )
S3507d 181 0 TRY_OR 
3508d 213 0 CALL:  prolog:==(true, false )
3510d 181 0 CALL:  logger:logger_start_timer(train_bdd_script_generation_splitting )
3511d 181 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_splitting, _1048363 )
3512d 181 0 TRY_OR 
3513d 221 0 CALL:  prolog:bb_get(logger:logger_start_time_train_bdd_script_generation_splitting, null )
3514d 181 0 CALL:  prolog:statistics(walltime, [_133077,_133079] )
3515d 181 0 CALL:  prolog:$walltime(_133077, _133079 )
3516d 181 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_splitting, 304913 )
3517d 181 0 CALL:  completion:split_rules(_1048373 )
3518d 181 0 CALL:  prolog:eraseall(cluster )
+s 0x5602af066570
 @0x7efdd88a31c8 0
3519d 181 0 TRY_OR 
3520d 224 0 CALL:  prolog:recorded(rules, _1048361, _1048362 )
3521d 224 0 TRY_OR 
3522d 232 0 CALL:  completion:include_in_clusters('$atom'(burglary);'$atom'(earthquake), '$dbref'(0x5602af2655d0,0) )
3523d 232 0 TRY_OR 
3524d 262 0 CALL:  prolog:setof(_133084, completion: ('$atom'(burglary);'$atom'(earthquake))^term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048322 )
3525d 262 0 CALL:  prolog:$is_list_or_partial_list(_1048322 )
3526d 262 0 CALL:  prolog:$bagof(_133084, completion: ('$atom'(burglary);'$atom'(earthquake))^term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048306 )
3527d 262 0 CALL:  prolog:$free_variables_in_term(_133084^ (completion: ('$atom'(burglary);'$atom'(earthquake))^term_element(('$atom'(burglary);'$atom'(earthquake)),_133084)), _1048298, _1048296 )
3528d 262 0 TRY_OR 
3529d 290 0 CALL:  prolog:\==($, $ )
3531d 262 0 CALL:  prolog:$findall(_133084, completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), [], _1048300 )
3532d 262 0 CALL:  nb:nb_queue(_1048291 )
3533d 262 0 TRY_OR 
3534d 294 0 CALL:  prolog:$execute(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084) )
+s 0x5602af009c20
 @0x7efdd88a31f8 0
3535d 294 0 CALL:  prolog:$call(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), 294, completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), user )
3536d 305 0 FAIL RETRY:  prolog:$call(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), 294, completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), user )
3537d 294 0 CALL:  prolog:$call(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), 294, completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), completion )
3538d 316 0 FAIL RETRY:  prolog:$call(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), 294, completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), completion )
3539d 294 0 CALL:  prolog:$execute0(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), completion )
3540d 294 0 CALL:  completion:term_element('$atom'(burglary);'$atom'(earthquake), _133084 )
3541d 294 0 CALL:  prolog:$undefp([completion|term_element(('$atom'(burglary);'$atom'(earthquake)),_133084)], error )
3542d 294 0 CALL:  prolog:yap_flag(unknown, error, fail )
3543d 294 0 CALL:  prolog:$stop_creeping(_1048257 )
3544d 294 0 TRY_OR 
3545d 329 0 CALL:  prolog:$undefp_search(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137211:_137212 )
3546d 338 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_137214,_137215,_137216,_137217), user )
3547d 338 0 FAIL RETRY:  prolog:$undefp_search(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137211:_137212 )
3548d 329 0 CALL:  prolog:expand_goal(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137211:_137212 )
3549d 329 0 CALL:  prolog:$expand_meta_call(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), [], _137211:_137212 )
3550d 329 0 CALL:  prolog:source_module(_137213 )
3551d 329 0 CALL:  prolog:$yap_strip_module(user:completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048237, _137217 )
3552d 329 0 CALL:  prolog:$expand_goals(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048236, _1048238, completion, user, completion, []- (completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084)) )
3553d 353 0 FAIL RETRY:  prolog:$expand_goals(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048236, _1048238, completion, user, completion, []- (completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084)) )
3554d 353 0 FAIL RETRY:  prolog:$expand_goals(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048236, _1048238, completion, user, completion, []- (completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084)) )
3555d 353 0 FAIL RETRY:  prolog:$expand_goals(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048236, _1048238, completion, user, completion, []- (completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084)) )
3556d 329 0 CALL:  prolog:$yap_strip_module(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137224, _137225 )
3557d 329 0 CALL:  prolog:$expand_goal(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048236, _1048238, completion, user, completion, []- (completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084)) )
3558d 329 0 CALL:  prolog:$yap_strip_module(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137229, _137230 )
3559d 329 0 CALL:  prolog:$user_expansion(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137235:_137236 )
3560d 363 0 CALL:  prolog:_user_expand_goal(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137238:_137239 )
3564d 363 0 FAIL RETRY:  prolog:$user_expansion(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137235:_137236 )
3565d 329 0 CALL:  prolog:$import_expansion(completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137238:_137239 )
3566d 362 0 CALL:  prolog:$imported_predicate(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), completion, _137239, _137238 )
3567d 378 0 CALL:  prolog:$is_system_predicate(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), prolog )
3568d 378 0 FAIL RETRY:  prolog:$imported_predicate(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), completion, _137239, _137238 )
3569d 362 0 CALL:  prolog:$undefined(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), completion )
3570d 362 0 CALL:  prolog:$get_undefined_predicates(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), completion, _137239, _137238 )
3571d 385 0 CALL:  prolog:recorded('$import', '$import'(_137241,completion,_137243,term_element(('$atom'(burglary);'$atom'(earthquake)),_133084),_137245,_137246), _1048180 )
3572d 385 0 CALL:  prolog:$continue_imported(_137238, termhandling, _137239, term_element(('$atom'(burglary);'$atom'(earthquake)),_133084) )
3573d 396 0 CALL:  prolog:$pred_exists(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), termhandling )
3574d 385 0 CALL:  prolog:\=(termhandling, completion )
3575d 329 0 CALL:  prolog:$meta_expansion(termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), completion, [], _1048225 )
3576d 361 0 CALL:  prolog:$yap_strip_module(termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137261, _1048204 )
3577d 361 0 CALL:  prolog:functor(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137264, _137265 )
3578d 361 0 CALL:  prolog:$meta_predicate(term_element, termhandling, 2, _1048205 )
3579d 361 0 FAIL RETRY:  prolog:$meta_expansion(termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), completion, [], _1048225 )
3580d 329 0 CALL:  prolog:$yap_strip_module(termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137261, _137262 )
3581d 329 0 CALL:  prolog:$yap_strip_module(termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137263, _137264 )
3582d 329 0 CALL:  prolog:$end_goal_expansion(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048236, _1048238, completion, user, termhandling, completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084) )
3583d 329 0 CALL:  prolog:$match_mod(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), completion, user, termhandling, _1048236 )
3584d 329 0 CALL:  prolog:$is_system_predicate(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), termhandling )
3585d 329 0 TRY_OR 
3586d 367 0 CALL:  prolog:==(termhandling, completion )
3588d 329 0 CALL:  prolog:$c_built_in(termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), termhandling, completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048227 )
3589d 360 0 CALL:  prolog:get_value('$c_arith', true )
3590d 329 0 CALL:  prolog:do_c_built_in(termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), termhandling, completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048227 )
3591d 371 0 CALL:  prolog:$yap_strip_module(termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137268, _137269 )
3592d 371 0 FAIL RETRY:  prolog:do_c_built_in(termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), termhandling, completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048227 )
3593d 371 0 CALL:  prolog:$compop(termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048189, _1048190, _1048192 )
3594d 371 0 FAIL RETRY:  prolog:do_c_built_in(termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), termhandling, completion:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _1048227 )
3595d 371 0 CALL:  prolog:$yap_strip_module(termhandling:termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137271, _137272 )
3596d 371 0 CALL:  prolog:$match_mod(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), completion, user, termhandling, _1048238 )
3597d 371 0 CALL:  prolog:$is_system_predicate(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), termhandling )
3598d 371 0 TRY_OR 
3599d 387 0 CALL:  prolog:==(termhandling, completion )
3601d 371 0 CALL:  prolog:$yap_strip_module(completion:termhandling:term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), _137211, _137212 )
3602d 371 0 TRY_OR 
3603d 379 0 CALL:  prolog:\==(completion, termhandling )
3604d 371 0 CALL:  prolog:\=(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), fail )
3605d 294 0 CALL:  prolog:yap_flag(unknown, _1048256, error )
3606d 294 0 TRY_OR 
3607d 326 0 CALL:  prolog:==(false, true )
3609d 294 0 CALL:  prolog:$execute0(term_element(('$atom'(burglary);'$atom'(earthquake)),_133084), termhandling )
3610d 294 0 CALL:  termhandling:term_element('$atom'(burglary);'$atom'(earthquake), _133084 )
+s 0x5602af01ad50
 @0x7efdd88a3208 0
+s 0x5602af26bb30
 @0x7efdd88a3208 0
- 0x5602af26bb30
 @0x7efdd88a3208 294
+s 0x5602af055730
 @0x7efdd88a3208 0
+s 0x5602af269210
 @0x7efdd88a3208 0
- 0x5602af01ad50
 @0x7efdd88a3208 294
3611d 294 0 TRY_OR 
3612d 309 0 CALL:  termhandling:term_element('$atom'(burglary), _133084 )
3613d 309 0 CALL:  prolog:\==(burglary, true )
3614d 309 0 CALL:  prolog:\==(burglary, false )
3615d 309 0 CALL:  nb:nb_queue_enqueue(queue(0,0,0,0), '$atom'(burglary) )
3617d 294 0 CALL:  termhandling:term_element('$atom'(earthquake), _133084 )
3618d 294 0 CALL:  prolog:\==(earthquake, true )
3619d 294 0 CALL:  prolog:\==(earthquake, false )
3620d 294 0 CALL:  nb:nb_queue_enqueue(queue(0,['$atom'(burglary) |_133109],_133109,1), '$atom'(earthquake) )
3622d 262 0 CALL:  nb:nb_queue_close(queue(0,['$atom'(burglary),'$atom'(earthquake) |_133113],_133113,2), _1048300, [] )
3623d 262 0 CALL:  prolog:\==(['$atom'(burglary),'$atom'(earthquake)], [] )
3624d 262 0 CALL:  prolog:$sort(['$atom'(burglary),'$atom'(earthquake)], _1048322 )
3625d 232 0 CALL:  prolog:bb_put(completion:facts, ['$atom'(burglary),'$atom'(earthquake)] )
+s 0x5602af26c150
 @0x7efdd88a31f8 0
+s 0x5602af2545f0
 @0x7efdd88a31f8 0
3626d 232 0 CALL:  prolog:bb_put(completion:rule_keys, ['$dbref'(0x5602af2655d0,0)] )
+s 0x5602af26c1a0
 @0x7efdd88a31f8 0
+s 0x5602af09eef0
 @0x7efdd88a31f8 0
3627d 232 0 TRY_OR 
3628d 259 0 CALL:  prolog:recorded(cluster, c(_133127,_133128), _1048324 )
3630d 232 0 CALL:  prolog:bb_delete(completion:facts, _1048336 )
3631d 232 0 CALL:  prolog:bb_delete(completion:rule_keys, _1048337 )
3632d 232 0 CALL:  prolog:recorda(cluster, c(['$atom'(burglary),'$atom'(earthquake)],['$dbref'(0x5602af2655d0,1)]), _133129 )
+s 0x5602af01b2e0
 @0x7efdd88a3218 0
- 0x5602af09eef0
 @0x7efdd88a3228 224
- 0x5602af2545f0
 @0x7efdd88a3228 224
3634d 181 0 TRY_OR 
3635d 222 0 CALL:  prolog:recorded(unpropagated_rules, _1048361, _1048362 )
3637d 181 0 CALL:  prolog:garbage_collect_atoms
3638d 181 0 CALL:  prolog:$atom_gc
3639d 181 0 TRY_OR 
3640d 218 0 CALL:  completion:merge_cluster(_1048365 )
+s 0x5602af26c2d0
 @0x7efdd88a31c8 0
+s 0x5602af1d5f80
 @0x7efdd88a31c8 0
- 0x5602af26c2d0
 @0x7efdd88a31c8 218
3641d 226 0 CALL:  prolog:recorded(cluster, c(_133085,_133086), _1048335 )
3642d 226 0 CALL:  prolog:recorded(cluster, c(_133088,_133089), _1048336 )
3643d 226 0 CALL:  prolog:@<('$dbref'(0x5602af01b2e0,0), '$dbref'(0x5602af01b2e0,0) )
3644d 226 0 FAIL RETRY:  completion:merge_cluster(_1048365 )
3645d 218 0 CALL:  prolog:==(false, false )
3646d 181 0 CALL:  prolog:findall(_133084, completion:recorded(cluster,c(_133093,_133084),_133091), _1048373 )
3647d 181 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048373 )
3648d 225 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048373 )
3649d 181 0 TRY_OR 
3650d 232 0 CALL:  error:has_type(list_or_partial_list, _1048373 )
3651d 232 0 CALL:  error:is_list_or_partial_list(_1048373 )
3652d 232 0 CALL:  prolog:$skip_list(_133095, _1048373, _133096 )
3653d 181 0 CALL:  prolog:$findall(_133084, completion:recorded(cluster,c(_133093,_133084),_133091), [], _133096 )
3654d 181 0 CALL:  nb:nb_queue(_1048359 )
3655d 181 0 TRY_OR 
3656d 226 0 CALL:  prolog:$execute(completion:recorded(cluster,c(_133093,_133084),_133091) )
3657d 226 0 CALL:  prolog:recorded(cluster, c(_133093,_133084), _133091 )
3658d 226 0 CALL:  prolog:recorded(cluster, c(_133093,_133084), _133091 )
3659d 226 0 CALL:  nb:nb_queue_enqueue(queue(0,0,0,0), ['$dbref'(0x5602af2655d0,1)] )
3661d 181 0 CALL:  nb:nb_queue_close(queue(0,[['$dbref'(0x5602af2655d0,1)] |_133105],_133105,1), _133096, [] )
3662d 181 0 CALL:  prolog:eraseall(cluster )
- 0x5602af01b2e0
 @0x7efdd88a31c8 181
3663d 181 0 CALL:  prolog:garbage_collect_atoms
3664d 181 0 CALL:  prolog:$atom_gc
3665d 181 0 CALL:  logger:logger_stop_timer(train_bdd_script_generation_splitting )
3666d 181 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_splitting, _1048360 )
3667d 181 0 CALL:  prolog:bb_delete(logger:logger_start_time_train_bdd_script_generation_splitting, _1048363 )
3668d 181 0 CALL:  prolog:statistics(walltime, [_133109,_133111] )
3669d 181 0 CALL:  prolog:$walltime(_133109, _133111 )
3670d 181 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_splitting, null )
3671d 181 0 TRY_OR 
3672d 219 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation_splitting )
3673d 219 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_splitting, _1048349 )
3674d 219 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_splitting, _1048350 )
3675d 219 0 CALL:  prolog:\=(null, null )
3677d 181 0 CALL:  logger:logger_set_variable(train_bdd_script_generation_splitting, 14936 )
3678d 181 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_splitting, _1048359 )
3679d 181 0 TRY_OR 
3680d 225 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_splitting, null )
3681d 181 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation_splitting, 14936 )
3682d 181 0 CALL:  print_learning:format_learning(5, s, [] )
3683d 212 0 CALL:  flags:problog_flag(verbosity_learning, _1048354 )
3684d 212 0 CALL:  gflags:flag_get(verbosity_learning, _1048354 )
3685d 212 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_133121), _133122 )
3686d 212 0 CALL:  prolog:>=(5, 5 )
3687d 181 0 CALL:  prolog:format(s, print_learning:[] )
3688d 181 0 CALL:  prolog:flush_output(user )
s3689d 181 0 CALL:  completion:print_script_per_cluster([['$dbref'(0x5602af2655d0,0)]], 1, 1, 0, _1048379, [], _1048375 )
+s 0x5602af26ce40
 @0x7efdd88a31c8 0
+s 0x5602af26d0a0
 @0x7efdd88a31c8 0
- 0x5602af26d0a0
 @0x7efdd88a31c8 181
+s 0x5602af182a20
 @0x7efdd88a31c8 0
+s 0x5602aeff2270
 @0x7efdd88a31c8 0
- 0x5602af182a20
 @0x7efdd88a31c8 181
- 0x5602af26ce40
 @0x7efdd88a31c8 181
3690d 181 0 CALL:  utils_learning:create_bdd_file_name(1, 1, _1048359 )
3691d 181 0 CALL:  flags:problog_flag(output_directory, _1048350 )
3692d 181 0 CALL:  gflags:flag_get(output_directory, _1048350 )
3693d 181 0 CALL:  prolog:recorded(flag_values, flag(output_directory,_133128), _133129 )
3694d 181 0 CALL:  prolog:atomic_concat([',_query_',1,'_cluster_',1], _1048351 )
3695d 181 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output', ',_query_1_cluster_1', _1048359 )
3696d 181 0 CALL:  os:path_separator(_1048350 )
3697d 234 0 CALL:  prolog:current_prolog_flag(windows, true )
3698d 234 0 FAIL RETRY:  os:path_separator(_1048350 )
3699d 181 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,',_query_1_cluster_1'], _1048359 )
3700d 181 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,',_query_1_cluster_1'], _1048359 )
3701d 181 0 CALL:  prolog:$current_choice_point(_1048360 )
3702d 181 0 CALL:  completion:print_simplecudd_script(['$dbref'(0x5602af2655d0,0)], '/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', _1048362 )
3703d 181 0 CALL:  prolog:retractall(completion:seen_atom(_133148,_133149,_133150,_133151) )
3704d 181 0 CALL:  prolog:$retractall(seen_atom(_133148,_133149,_133150,_133151), completion )
3705d 263 0 FAIL RETRY:  prolog:$retractall(seen_atom(_133148,_133149,_133150,_133151), completion )
3706d 181 0 CALL:  prolog:functor(seen_atom(_133148,_133149,_133150,_133151), _133153, _133154 )
3707d 181 0 CALL:  prolog:$is_log_updatable(seen_atom(_133148,_133149,_133150,_133151), completion )
3708d 181 0 CALL:  prolog:$is_multifile(seen_atom(_133148,_133149,_133150,_133151), completion )
3709d 181 0 CALL:  prolog:$retractall_lu(seen_atom(_133148,_133149,_133150,_133151), completion )
3710d 255 0 CALL:  prolog:$free_arguments(seen_atom(_133148,_133149,_133150,_133151) )
3711d 181 0 TRY_OR 
3712d 270 0 CALL:  prolog:$purge_clauses(seen_atom(_133148,_133149,_133150,_133151), completion )
3714d 181 0 CALL:  prolog:retractall(completion:script_hash(_133156,_133157) )
3715d 181 0 CALL:  prolog:$retractall(script_hash(_133156,_133157), completion )
3716d 263 0 FAIL RETRY:  prolog:$retractall(script_hash(_133156,_133157), completion )
3717d 181 0 CALL:  prolog:functor(script_hash(_133156,_133157), _133159, _133160 )
3718d 181 0 CALL:  prolog:$is_log_updatable(script_hash(_133156,_133157), completion )
3719d 181 0 TRY_OR 
3720d 273 0 TRY_OR 
3721d 281 0 CALL:  prolog:callable(script_hash(_133156,_133157) )
3723d 273 0 CALL:  prolog:$undefined(script_hash(_133156,_133157), completion )
3724d 181 0 CALL:  prolog:$dynamic(script_hash/2, completion )
3725d 273 0 FAIL RETRY:  prolog:$dynamic(script_hash/2, completion )
3726d 181 0 CALL:  prolog:functor(_133161, script_hash, 2 )
3727d 181 0 CALL:  prolog:$mk_dynamic(script_hash(_133162,_133163), completion )
3728d 181 0 CALL:  prolog:bb_put(completion:counter, 0 )
+s 0x5602af26dc60
 @0x7efdd88a31c8 0
3729d 181 0 CALL:  prolog:bb_put(completion:det_counter, 0 )
+s 0x5602af25f990
 @0x7efdd88a31c8 0
3730d 181 0 CALL:  prolog:bb_put(completion:grounding_counter, 0 )
+s 0x5602af26dd30
 @0x7efdd88a31c8 0
3731d 181 0 CALL:  operating_system_support:tmpnam(_1048339 )
3732d 181 0 CALL:  operating_system_support:tmpnam(_1048339, _1048322 )
3733d 181 0 CALL:  operating_system_support:handle_system_internal(_133173, off, tmpnam('/tmp/YAP_tmpXXRZOJ5R') )
3734d 181 0 CALL:  prolog:open('/tmp/YAP_tmpXXRZOJ5R', write, _1048335 )
3735d 181 0 CALL:  prolog:findall(_133197, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,_133185),print_expression(_133192,'$stream'(3),_133197)), _1048329 )
3736d 181 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048329 )
3737d 263 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048329 )
3738d 181 0 TRY_OR 
3739d 270 0 CALL:  error:has_type(list_or_partial_list, _1048329 )
3740d 270 0 CALL:  error:is_list_or_partial_list(_1048329 )
3741d 270 0 CALL:  prolog:$skip_list(_133198, _1048329, _133199 )
3742d 181 0 CALL:  prolog:$findall(_133197, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,_133185),print_expression(_133192,'$stream'(3),_133197)), [], _133199 )
3743d 181 0 CALL:  nb:nb_queue(_1048321 )
3744d 181 0 TRY_OR 
3745d 264 0 CALL:  prolog:$execute(completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,_133185),print_expression(_133192,'$stream'(3),_133197)) )
3746d 264 0 CALL:  prolog:$call(completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,_133185),print_expression(_133192,'$stream'(3),_133197)), 264, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,_133185),print_expression(_133192,'$stream'(3),_133197)), user )
3747d 275 0 FAIL RETRY:  prolog:$call(completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,_133185),print_expression(_133192,'$stream'(3),_133197)), 264, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,_133185),print_expression(_133192,'$stream'(3),_133197)), user )
3748d 264 0 CALL:  prolog:$call(member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,_133185),print_expression(_133192,'$stream'(3),_133197), 264, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,_133185),print_expression(_133192,'$stream'(3),_133197)), completion )
3749d 264 0 CALL:  prolog:$call(member(_133185,['$dbref'(0x5602af2655d0,0)]), 264, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,_133185),print_expression(_133192,'$stream'(3),_133197)), completion )
3750d 306 0 FAIL RETRY:  prolog:$call(member(_133185,['$dbref'(0x5602af2655d0,0)]), 264, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,_133185),print_expression(_133192,'$stream'(3),_133197)), completion )
3751d 264 0 CALL:  prolog:$execute0(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion )
+s 0x5602af050f70
 @0x7efdd88a31c8 0
3752d 264 0 CALL:  completion:member(_133185, ['$dbref'(0x5602af2655d0,0)] )
3753d 264 0 CALL:  prolog:$undefp([completion|member(_133185,['$dbref'(0x5602af2655d0,0)])], error )
3754d 264 0 CALL:  prolog:yap_flag(unknown, error, fail )
3755d 264 0 CALL:  prolog:$stop_creeping(_1048267 )
3756d 264 0 TRY_OR 
3757d 319 0 CALL:  prolog:$undefp_search(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137310:_137311 )
3758d 328 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_137313,_137314,_137315,_137316), user )
3759d 328 0 FAIL RETRY:  prolog:$undefp_search(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137310:_137311 )
3760d 319 0 CALL:  prolog:expand_goal(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137310:_137311 )
3761d 319 0 CALL:  prolog:$expand_meta_call(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), [], _137310:_137311 )
3762d 319 0 CALL:  prolog:source_module(_137312 )
3763d 319 0 CALL:  prolog:$yap_strip_module(user:completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048247, _137316 )
3764d 319 0 CALL:  prolog:$expand_goals(member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048246, _1048248, completion, user, completion, []- (completion:member(_133185,['$dbref'(0x5602af2655d0,0)])) )
3765d 343 0 FAIL RETRY:  prolog:$expand_goals(member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048246, _1048248, completion, user, completion, []- (completion:member(_133185,['$dbref'(0x5602af2655d0,0)])) )
3766d 343 0 FAIL RETRY:  prolog:$expand_goals(member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048246, _1048248, completion, user, completion, []- (completion:member(_133185,['$dbref'(0x5602af2655d0,0)])) )
3767d 343 0 FAIL RETRY:  prolog:$expand_goals(member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048246, _1048248, completion, user, completion, []- (completion:member(_133185,['$dbref'(0x5602af2655d0,0)])) )
3768d 319 0 CALL:  prolog:$yap_strip_module(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137323, _137324 )
3769d 319 0 CALL:  prolog:$expand_goal(member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048246, _1048248, completion, user, completion, []- (completion:member(_133185,['$dbref'(0x5602af2655d0,0)])) )
3770d 319 0 CALL:  prolog:$yap_strip_module(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137328, _137329 )
3771d 319 0 CALL:  prolog:$user_expansion(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137334:_137335 )
3772d 353 0 CALL:  prolog:_user_expand_goal(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137337:_137338 )
3776d 353 0 FAIL RETRY:  prolog:$user_expansion(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137334:_137335 )
3777d 319 0 CALL:  prolog:$import_expansion(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137337:_137338 )
3778d 352 0 CALL:  prolog:$imported_predicate(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, _137338, _137337 )
3779d 368 0 CALL:  prolog:$is_system_predicate(member(_133185,['$dbref'(0x5602af2655d0,0)]), prolog )
3780d 368 0 FAIL RETRY:  prolog:$imported_predicate(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, _137338, _137337 )
3781d 352 0 CALL:  prolog:$undefined(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion )
3782d 352 0 CALL:  prolog:$get_undefined_predicates(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, _137338, _137337 )
3783d 375 0 CALL:  prolog:recorded('$import', '$import'(_137340,completion,_137342,member(_133185,['$dbref'(0x5602af2655d0,0)]),_137344,_137345), _1048190 )
3784d 375 0 CALL:  prolog:$continue_imported(_137337, lists, _137338, member(_133185,['$dbref'(0x5602af2655d0,0)]) )
3785d 386 0 CALL:  prolog:$pred_exists(member(_133185,['$dbref'(0x5602af2655d0,0)]), lists )
3786d 375 0 CALL:  prolog:\=(lists, completion )
3787d 319 0 CALL:  prolog:$meta_expansion(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, [], _1048235 )
3788d 351 0 CALL:  prolog:$yap_strip_module(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137360, _1048214 )
3789d 351 0 CALL:  prolog:functor(member(_133185,['$dbref'(0x5602af2655d0,0)]), _137363, _137364 )
3790d 351 0 CALL:  prolog:$meta_predicate(member, lists, 2, _1048215 )
3791d 351 0 FAIL RETRY:  prolog:$meta_expansion(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, [], _1048235 )
3792d 319 0 CALL:  prolog:$yap_strip_module(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137360, _137361 )
3793d 319 0 CALL:  prolog:$yap_strip_module(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137362, _137363 )
3794d 319 0 CALL:  prolog:$end_goal_expansion(member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048246, _1048248, completion, user, lists, completion:member(_133185,['$dbref'(0x5602af2655d0,0)]) )
3795d 319 0 CALL:  prolog:$match_mod(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, user, lists, _1048246 )
3796d 319 0 CALL:  prolog:$is_system_predicate(member(_133185,['$dbref'(0x5602af2655d0,0)]), lists )
3797d 319 0 TRY_OR 
3798d 357 0 CALL:  prolog:==(lists, completion )
3800d 319 0 CALL:  prolog:$c_built_in(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), lists, completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048237 )
3801d 350 0 CALL:  prolog:get_value('$c_arith', true )
3802d 319 0 CALL:  prolog:do_c_built_in(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), lists, completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048237 )
3803d 361 0 CALL:  prolog:$yap_strip_module(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137367, _137368 )
3804d 361 0 FAIL RETRY:  prolog:do_c_built_in(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), lists, completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048237 )
3805d 361 0 CALL:  prolog:$compop(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048199, _1048200, _1048202 )
3806d 361 0 FAIL RETRY:  prolog:do_c_built_in(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), lists, completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048237 )
3807d 361 0 CALL:  prolog:$yap_strip_module(lists:lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137370, _137371 )
3808d 361 0 CALL:  prolog:$match_mod(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, user, lists, _1048248 )
3809d 361 0 CALL:  prolog:$is_system_predicate(member(_133185,['$dbref'(0x5602af2655d0,0)]), lists )
3810d 361 0 TRY_OR 
3811d 377 0 CALL:  prolog:==(lists, completion )
3813d 361 0 CALL:  prolog:$yap_strip_module(completion:lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137310, _137311 )
3814d 361 0 TRY_OR 
3815d 369 0 CALL:  prolog:\==(completion, lists )
3816d 361 0 CALL:  prolog:\=(member(_133185,['$dbref'(0x5602af2655d0,0)]), fail )
3817d 264 0 CALL:  prolog:yap_flag(unknown, _1048266, error )
3818d 264 0 TRY_OR 
3819d 316 0 CALL:  prolog:==(false, true )
3821d 264 0 CALL:  prolog:$execute0(member(_133185,['$dbref'(0x5602af2655d0,0)]), lists )
3822d 264 0 CALL:  lists:member(_133185, ['$dbref'(0x5602af2655d0,0)] )
3823d 304 0 CALL:  prolog:$call(recorded(_133191,_133192,'$dbref'(0x5602af2655d0,0)),print_expression(_133192,'$stream'(3),_133197), 264, completion: (member('$dbref'(0x5602af2655d0,0),['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,'$dbref'(0x5602af2655d0,0)),print_expression(_133192,'$stream'(3),_133197)), completion )
3824d 304 0 CALL:  prolog:$call(recorded(_133191,_133192,'$dbref'(0x5602af2655d0,0)), 264, completion: (member('$dbref'(0x5602af2655d0,0),['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,'$dbref'(0x5602af2655d0,0)),print_expression(_133192,'$stream'(3),_133197)), completion )
3825d 335 0 FAIL RETRY:  prolog:$call(recorded(_133191,_133192,'$dbref'(0x5602af2655d0,0)), 264, completion: (member('$dbref'(0x5602af2655d0,0),['$dbref'(0x5602af2655d0,0)]),recorded(_133191,_133192,'$dbref'(0x5602af2655d0,0)),print_expression(_133192,'$stream'(3),_133197)), completion )
3826d 304 0 CALL:  prolog:$execute0(recorded(_133191,_133192,'$dbref'(0x5602af2655d0,0)), completion )
3827d 304 0 CALL:  prolog:recorded(_133191, _133192, '$dbref'(0x5602af2655d0,0) )
3828d 304 0 CALL:  prolog:recorded(_133191, _133192, '$dbref'(0x5602af2655d0,0) )
3829d 304 0 CALL:  prolog:$call(print_expression(('$atom'(burglary);'$atom'(earthquake)),'$stream'(3),_133197), 264, completion: (member('$dbref'(0x5602af2655d0,0),['$dbref'(0x5602af2655d0,0)]),recorded(rules,('$atom'(burglary);'$atom'(earthquake)),'$dbref'(0x5602af2655d0,0)),print_expression(('$atom'(burglary);'$atom'(earthquake)),'$stream'(3),_133197)), completion )
3830d 315 0 FAIL RETRY:  prolog:$call(print_expression(('$atom'(burglary);'$atom'(earthquake)),'$stream'(3),_133197), 264, completion: (member('$dbref'(0x5602af2655d0,0),['$dbref'(0x5602af2655d0,0)]),recorded(rules,('$atom'(burglary);'$atom'(earthquake)),'$dbref'(0x5602af2655d0,0)),print_expression(('$atom'(burglary);'$atom'(earthquake)),'$stream'(3),_133197)), completion )
3831d 304 0 CALL:  prolog:$execute0(print_expression(('$atom'(burglary);'$atom'(earthquake)),'$stream'(3),_133197), completion )
3832d 304 0 CALL:  completion:print_expression('$atom'(burglary);'$atom'(earthquake), '$stream'(3), _133197 )
+s 0x5602af2338b0
 @0x7efdd88a3218 0
+s 0x5602af26aa30
 @0x7efdd88a3218 0
- 0x5602af26aa30
 @0x7efdd88a3218 304
+s 0x5602af2711f0
 @0x7efdd88a3218 0
+s 0x5602aeffa320
 @0x7efdd88a3218 0
+s 0x5602af2710d0
 @0x7efdd88a3218 0
- 0x5602af2338b0
 @0x7efdd88a3218 304
3833d 314 0 CALL:  completion:script_hash('$atom'(burglary);'$atom'(earthquake), _133197 )
3834d 314 0 FAIL RETRY:  completion:print_expression('$atom'(burglary);'$atom'(earthquake), '$stream'(3), _133197 )
3835d 304 0 CALL:  completion:print_expression_or('$atom'(burglary);'$atom'(earthquake), '$stream'(3), '', _133197 )
+s 0x5602af270700
 @0x7efdd88a3218 0
+s 0x5602af26aa30
 @0x7efdd88a3218 0
- 0x5602af270700
 @0x7efdd88a3218 304
3836d 304 0 CALL:  completion:print_expression('$atom'(burglary), '$stream'(3), _1048243 )
3837d 343 0 CALL:  completion:script_hash('$atom'(burglary), _1048243 )
3838d 343 0 FAIL RETRY:  completion:print_expression('$atom'(burglary), '$stream'(3), _1048243 )
3839d 304 0 CALL:  completion:remember(burglary, _1048243 )
+s 0x5602af26e560
 @0x7efdd88a3218 0
+s 0x5602af26e850
 @0x7efdd88a3218 0
- 0x5602af26e560
 @0x7efdd88a3218 304
3840d 342 0 CALL:  completion:seen_atom(burglary, _1048243, _1048226, _1048227 )
3841d 342 0 FAIL RETRY:  completion:remember(burglary, _1048243 )
3842d 342 0 CALL:  prolog:atom_codes(burglary, [76|_137379] )
3843d 342 0 FAIL RETRY:  completion:remember(burglary, _1048243 )
3844d 342 0 CALL:  problog:probabilistic_fact(_1048227, burglary, _1048226 )
3845d 363 0 CALL:  prolog:ground(burglary )
3846d 342 0 CALL:  prolog:=..(burglary, [_137378|_137379] )
3847d 342 0 CALL:  prolog:atomic_concat(problog_, burglary, _1048202 )
3848d 342 0 CALL:  lists:append([_137382], [_137384], _1048201 )
3849d 342 0 CALL:  lists:append([], [_137384], _137387 )
3850d 342 0 CALL:  prolog:=..(_1048204, [problog_burglary,_137382,_137384] )
3851d 342 0 CALL:  prolog:length([_137382,_137384], _1048203 )
3852d 342 0 CALL:  prolog:$skip_list([_137382,_137384], _1048203, _137393, _137394 )
3853d 342 0 CALL:  prolog:==([], [] )
3854d 342 0 CALL:  prolog:current_predicate(problog:problog_burglary/2 )
3855d 342 0 CALL:  prolog:$yap_strip_module(problog:problog_burglary/2, _1048198, _1048197 )
3856d 342 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_burglary/2 )
3857d 342 0 TRY_OR 
3858d 394 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_burglary/2 )
3859d 403 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_burglary/2 )
3860d 394 0 TRY_OR 
3862d 394 0 CALL:  error:may_bind_to_type(atom, problog_burglary )
3863d 411 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_burglary )
3864d 394 0 CALL:  error:may_bind_to_type(integer, 2 )
3865d 403 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
3866d 342 0 CALL:  prolog:$c_i_predicate(problog_burglary/2, problog )
3867d 342 0 TRY_OR 
3868d 388 0 CALL:  prolog:ground(problog_burglary/2 )
3869d 342 0 CALL:  prolog:functor(_137401, problog_burglary, 2 )
3870d 342 0 CALL:  prolog:current_predicate(problog_burglary, problog:problog_burglary(_137402,_137403) )
3871d 342 0 CALL:  prolog:$yap_strip_module(problog:problog_burglary(_137402,_137403), _1048194, _1048193 )
3872d 342 0 CALL:  prolog:functor(problog_burglary(_137402,_137403), problog_burglary, _1048192 )
3873d 342 0 TRY_OR 
3874d 390 0 CALL:  prolog:$current_predicate(problog_burglary, problog, problog_burglary(_137402,_137403), user )
3875d 390 0 CALL:  problog:problog_burglary(_137382, _137384 )
3876d 390 0 CALL:  prolog:is(_1048227, 3, -1.249826789005093 )
3877d 304 0 TRY_OR 
3878d 361 0 CALL:  problog:non_ground_fact(0 )
3880d 304 0 CALL:  prolog:atomic_concat([x,0], _1048243 )
3881d 304 0 CALL:  prolog:assertz(completion:seen_atom(burglary,x0,0,0.2865544269392134) )
3882d 304 0 CALL:  prolog:$assert(completion:seen_atom(burglary,x0,0,0.2865544269392134), assertz, _137422 )
3883d 304 0 CALL:  prolog:$yap_strip_clause(completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048231, _1048232 )
3884d 304 0 CALL:  prolog:$expand_clause(completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048235, _1048233 )
3885d 354 0 CALL:  prolog:source_module(_137423 )
3886d 354 0 CALL:  prolog:$yap_strip_clause(user:completion:seen_atom(burglary,x0,0,0.2865544269392134), _137427, _137428 )
3887d 354 0 CALL:  prolog:$expand_a_clause(completion:seen_atom(burglary,x0,0,0.2865544269392134), user, _1048235, _1048233 )
3888d 354 0 CALL:  prolog:$yap_strip_module(user:completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048202, _137435 )
3889d 354 0 CALL:  prolog:$head_and_body(seen_atom(burglary,x0,0,0.2865544269392134), _1048201, _1048203 )
3890d 384 0 FAIL RETRY:  prolog:$head_and_body(seen_atom(burglary,x0,0,0.2865544269392134), _1048201, _1048203 )
3891d 354 0 CALL:  prolog:$yap_strip_module(completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048204, _1048205 )
3892d 354 0 CALL:  prolog:$not_imported(seen_atom(burglary,x0,0,0.2865544269392134), completion )
3893d 382 0 CALL:  prolog:recorded('$import', '$import'(_137440,completion,_137442,seen_atom(burglary,x0,0,0.2865544269392134),_137444,_137445), _1048187 )
3894d 382 0 FAIL RETRY:  prolog:$not_imported(seen_atom(burglary,x0,0,0.2865544269392134), completion )
3895d 354 0 CALL:  prolog:$yap_strip_module(completion:true, _137442, _137443 )
3896d 354 0 CALL:  prolog:$expand_clause_body(true, seen_atom(burglary,x0,0,0.2865544269392134), completion, user, completion, _1048207, _1048209 )
3897d 354 0 CALL:  prolog:$build_up(completion, seen_atom(burglary,x0,0,0.2865544269392134), user, true, _1048235, true, _1048233 )
3898d 373 0 CALL:  prolog:==(completion, user )
3899d 373 0 FAIL RETRY:  prolog:$build_up(completion, seen_atom(burglary,x0,0,0.2865544269392134), user, true, _1048235, true, _1048233 )
3900d 304 0 CALL:  prolog:$$compile(completion:seen_atom(burglary,x0,0,0.2865544269392134), assertz, completion:seen_atom(burglary,x0,0,0.2865544269392134), _137422 )
3901d 304 0 CALL:  prolog:$head_and_body(completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048230, _1048232 )
3902d 355 0 FAIL RETRY:  prolog:$head_and_body(completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048230, _1048232 )
3903d 304 0 CALL:  prolog:strip_module(completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048235, _1048231 )
3904d 304 0 CALL:  prolog:$undefined(seen_atom(burglary,x0,0,0.2865544269392134), completion )
3905d 304 0 CALL:  prolog:$compile(seen_atom(burglary,x0,0,0.2865544269392134):-true, assertz, completion:seen_atom(burglary,x0,0,0.2865544269392134), completion, _137422 )
+s 0x5602af2545f0
 @0x7efdd88a3228 0
3906d 304 0 CALL:  prolog:atomic_concat(['',x0,' + '], _1048246 )
3907d 304 0 CALL:  completion:print_expression_or('$atom'(earthquake), '$stream'(3), 'x0 + ', _133197 )
3908d 322 0 FAIL RETRY:  completion:print_expression_or('$atom'(earthquake), '$stream'(3), 'x0 + ', _133197 )
3909d 304 0 CALL:  completion:print_expression('$atom'(earthquake), '$stream'(3), _1048258 )
3910d 330 0 CALL:  completion:script_hash('$atom'(earthquake), _1048258 )
3911d 330 0 FAIL RETRY:  completion:print_expression('$atom'(earthquake), '$stream'(3), _1048258 )
3912d 304 0 CALL:  completion:remember(earthquake, _1048258 )
3913d 329 0 CALL:  completion:seen_atom(earthquake, _1048258, _1048239, _1048240 )
3914d 329 0 FAIL RETRY:  completion:remember(earthquake, _1048258 )
3915d 329 0 CALL:  prolog:atom_codes(earthquake, [76|_137457] )
3916d 329 0 FAIL RETRY:  completion:remember(earthquake, _1048258 )
3917d 329 0 CALL:  problog:probabilistic_fact(_1048240, earthquake, _1048239 )
3918d 350 0 CALL:  prolog:ground(earthquake )
3919d 329 0 CALL:  prolog:=..(earthquake, [_137456|_137457] )
3920d 329 0 CALL:  prolog:atomic_concat(problog_, earthquake, _1048215 )
3921d 329 0 CALL:  lists:append([_137460], [_137462], _1048214 )
3922d 329 0 CALL:  lists:append([], [_137462], _137465 )
3923d 329 0 CALL:  prolog:=..(_1048217, [problog_earthquake,_137460,_137462] )
3924d 329 0 CALL:  prolog:length([_137460,_137462], _1048216 )
3925d 329 0 CALL:  prolog:$skip_list([_137460,_137462], _1048216, _137471, _137472 )
3926d 329 0 CALL:  prolog:==([], [] )
3927d 329 0 CALL:  prolog:current_predicate(problog:problog_earthquake/2 )
3928d 329 0 CALL:  prolog:$yap_strip_module(problog:problog_earthquake/2, _1048211, _1048210 )
3929d 329 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_earthquake/2 )
3930d 329 0 TRY_OR 
3931d 381 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_earthquake/2 )
3932d 390 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_earthquake/2 )
3933d 381 0 TRY_OR 
3935d 381 0 CALL:  error:may_bind_to_type(atom, problog_earthquake )
3936d 398 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_earthquake )
3937d 381 0 CALL:  error:may_bind_to_type(integer, 2 )
3938d 390 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
3939d 329 0 CALL:  prolog:$c_i_predicate(problog_earthquake/2, problog )
3940d 329 0 TRY_OR 
3941d 375 0 CALL:  prolog:ground(problog_earthquake/2 )
3942d 329 0 CALL:  prolog:functor(_137479, problog_earthquake, 2 )
3943d 329 0 CALL:  prolog:current_predicate(problog_earthquake, problog:problog_earthquake(_137480,_137481) )
3944d 329 0 CALL:  prolog:$yap_strip_module(problog:problog_earthquake(_137480,_137481), _1048207, _1048206 )
3945d 329 0 CALL:  prolog:functor(problog_earthquake(_137480,_137481), problog_earthquake, _1048205 )
3946d 329 0 TRY_OR 
3947d 377 0 CALL:  prolog:$current_predicate(problog_earthquake, problog, problog_earthquake(_137480,_137481), user )
3948d 377 0 CALL:  problog:problog_earthquake(_137460, _137462 )
3949d 377 0 CALL:  prolog:is(_1048240, 3, -0.6596650473806767 )
3950d 304 0 TRY_OR 
3951d 348 0 CALL:  problog:non_ground_fact(1 )
3953d 304 0 CALL:  prolog:atomic_concat([x,1], _1048258 )
3954d 304 0 CALL:  prolog:assertz(completion:seen_atom(earthquake,x1,1,0.5170244841968428) )
3955d 304 0 CALL:  prolog:$assert(completion:seen_atom(earthquake,x1,1,0.5170244841968428), assertz, _137500 )
3956d 304 0 CALL:  prolog:$yap_strip_clause(completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048244, _1048245 )
3957d 304 0 CALL:  prolog:$expand_clause(completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048248, _1048246 )
3958d 341 0 CALL:  prolog:source_module(_137501 )
3959d 341 0 CALL:  prolog:$yap_strip_clause(user:completion:seen_atom(earthquake,x1,1,0.5170244841968428), _137505, _137506 )
3960d 341 0 CALL:  prolog:$expand_a_clause(completion:seen_atom(earthquake,x1,1,0.5170244841968428), user, _1048248, _1048246 )
3961d 341 0 CALL:  prolog:$yap_strip_module(user:completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048215, _137513 )
3962d 341 0 CALL:  prolog:$head_and_body(seen_atom(earthquake,x1,1,0.5170244841968428), _1048214, _1048216 )
3963d 371 0 FAIL RETRY:  prolog:$head_and_body(seen_atom(earthquake,x1,1,0.5170244841968428), _1048214, _1048216 )
3964d 341 0 CALL:  prolog:$yap_strip_module(completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048217, _1048218 )
3965d 341 0 CALL:  prolog:$not_imported(seen_atom(earthquake,x1,1,0.5170244841968428), completion )
3966d 369 0 CALL:  prolog:recorded('$import', '$import'(_137518,completion,_137520,seen_atom(earthquake,x1,1,0.5170244841968428),_137522,_137523), _1048200 )
3967d 369 0 FAIL RETRY:  prolog:$not_imported(seen_atom(earthquake,x1,1,0.5170244841968428), completion )
3968d 341 0 CALL:  prolog:$yap_strip_module(completion:true, _137520, _137521 )
3969d 341 0 CALL:  prolog:$expand_clause_body(true, seen_atom(earthquake,x1,1,0.5170244841968428), completion, user, completion, _1048220, _1048222 )
3970d 341 0 CALL:  prolog:$build_up(completion, seen_atom(earthquake,x1,1,0.5170244841968428), user, true, _1048248, true, _1048246 )
3971d 360 0 CALL:  prolog:==(completion, user )
3972d 360 0 FAIL RETRY:  prolog:$build_up(completion, seen_atom(earthquake,x1,1,0.5170244841968428), user, true, _1048248, true, _1048246 )
3973d 304 0 CALL:  prolog:$$compile(completion:seen_atom(earthquake,x1,1,0.5170244841968428), assertz, completion:seen_atom(earthquake,x1,1,0.5170244841968428), _137500 )
3974d 304 0 CALL:  prolog:$head_and_body(completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048243, _1048245 )
3975d 342 0 FAIL RETRY:  prolog:$head_and_body(completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048243, _1048245 )
3976d 304 0 CALL:  prolog:strip_module(completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048248, _1048244 )
3977d 304 0 CALL:  prolog:$undefined(seen_atom(earthquake,x1,1,0.5170244841968428), completion )
3978d 304 0 CALL:  prolog:$compile(seen_atom(earthquake,x1,1,0.5170244841968428):-true, assertz, completion:seen_atom(earthquake,x1,1,0.5170244841968428), completion, _137500 )
+s 0x5602aeffcbe0
 @0x7efdd88a3258 0
3979d 304 0 CALL:  completion:next_counter(_133197 )
3980d 304 0 CALL:  prolog:bb_get(completion:counter, _1048246 )
3981d 304 0 CALL:  prolog:atomic_concat(['L',1], _133197 )
3982d 304 0 CALL:  prolog:bb_put(completion:counter, 1 )
3983d 304 0 CALL:  prolog:format('$stream'(3), '~w = ~w~w~n', completion:['L1','x0 + ',x1] )
3984d 304 0 CALL:  prolog:assert(completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1') )
3985d 304 0 CALL:  prolog:$assert(completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), assertz, _137553 )
3986d 304 0 CALL:  prolog:$yap_strip_clause(completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), _1048260, _1048261 )
3987d 304 0 CALL:  prolog:$expand_clause(completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), _1048264, _1048262 )
3988d 325 0 CALL:  prolog:source_module(_137554 )
3989d 325 0 CALL:  prolog:$yap_strip_clause(user:completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), _137558, _137559 )
3990d 325 0 CALL:  prolog:$expand_a_clause(completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), user, _1048264, _1048262 )
3991d 325 0 CALL:  prolog:$yap_strip_module(user:completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), _1048231, _137566 )
3992d 325 0 CALL:  prolog:$head_and_body(script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), _1048230, _1048232 )
3993d 355 0 FAIL RETRY:  prolog:$head_and_body(script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), _1048230, _1048232 )
3994d 325 0 CALL:  prolog:$yap_strip_module(completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), _1048233, _1048234 )
3995d 325 0 CALL:  prolog:$not_imported(script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), completion )
3996d 353 0 CALL:  prolog:recorded('$import', '$import'(_137571,completion,_137573,script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'),_137575,_137576), _1048216 )
3997d 353 0 FAIL RETRY:  prolog:$not_imported(script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), completion )
3998d 325 0 CALL:  prolog:$yap_strip_module(completion:true, _137573, _137574 )
3999d 325 0 CALL:  prolog:$expand_clause_body(true, script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), completion, user, completion, _1048236, _1048238 )
4000d 325 0 CALL:  prolog:$build_up(completion, script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), user, true, _1048264, true, _1048262 )
4001d 344 0 CALL:  prolog:==(completion, user )
4002d 344 0 FAIL RETRY:  prolog:$build_up(completion, script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), user, true, _1048264, true, _1048262 )
4003d 304 0 CALL:  prolog:$$compile(completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), assertz, completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), _137553 )
4004d 304 0 CALL:  prolog:$head_and_body(completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), _1048259, _1048261 )
4005d 326 0 FAIL RETRY:  prolog:$head_and_body(completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), _1048259, _1048261 )
4006d 304 0 CALL:  prolog:strip_module(completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), _1048264, _1048260 )
4007d 304 0 CALL:  prolog:$undefined(script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), completion )
4008d 304 0 CALL:  prolog:$compile(script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'):-true, assertz, completion:script_hash(('$atom'(burglary);'$atom'(earthquake)),'L1'), completion, _137553 )
+s 0x5602af037910
 @0x7efdd88a3288 0
4009d 304 0 CALL:  nb:nb_queue_enqueue(queue(0,0,0,0), 'L1' )
4010d 304 0 FAIL RETRY:  lists:member(_133185, ['$dbref'(0x5602af2655d0,0)] )
4011d 264 0 CALL:  lists:member(_133185, [] )
4013d 181 0 CALL:  nb:nb_queue_close(queue(0,['L1'|_133206],_133206,1), _133199, [] )
4014d 181 0 CALL:  lists:reverse(['L1'], _1048330 )
4015d 181 0 CALL:  lists:reverse(['L1'], [], _1048330 )
+s 0x5602af275900
 @0x7efdd88a31c8 0
+s 0x5602af275a60
 @0x7efdd88a31c8 0
- 0x5602af275a60
 @0x7efdd88a31c8 181
+s 0x5602af182a20
 @0x7efdd88a31c8 0
+s 0x5602af274080
 @0x7efdd88a31c8 0
- 0x5602af182a20
 @0x7efdd88a31c8 181
- 0x5602af275900
 @0x7efdd88a31c8 181
4016d 181 0 CALL:  lists:reverse([], ['L1'], _1048330 )
4017d 181 0 CALL:  termhandling:list_to_conjunction(['L1'], _1048331 )
+s 0x5602af233e90
 @0x7efdd88a31c8 0
+s 0x5602af272d10
 @0x7efdd88a31c8 0
- 0x5602af272d10
 @0x7efdd88a31c8 181
+s 0x5602af275900
 @0x7efdd88a31c8 0
+s 0x5602af275a60
 @0x7efdd88a31c8 0
- 0x5602af275a60
 @0x7efdd88a31c8 181
+s 0x5602af182a20
 @0x7efdd88a31c8 0
+s 0x5602af234000
 @0x7efdd88a31c8 0
- 0x5602af233e90
 @0x7efdd88a31c8 181
4018d 181 0 CALL:  completion:print_expression_and_final('L1', '$stream'(3), '', _1048333 )
+s 0x5602af233e90
 @0x7efdd88a31c8 0
+s 0x5602af275a60
 @0x7efdd88a31c8 0
- 0x5602af275a60
 @0x7efdd88a31c8 181
+s 0x5602aeff2aa0
 @0x7efdd88a31c8 0
+s 0x5602af159f00
 @0x7efdd88a31c8 0
+s 0x5602af2338b0
 @0x7efdd88a31c8 0
- 0x5602af233e90
 @0x7efdd88a31c8 181
4019d 254 0 FAIL RETRY:  completion:print_expression_and_final('L1', '$stream'(3), '', _1048333 )
4020d 181 0 CALL:  completion:next_counter(_1048333 )
4021d 181 0 CALL:  prolog:bb_get(completion:counter, _1048314 )
4022d 181 0 CALL:  prolog:atomic_concat(['L',2], _1048333 )
4023d 181 0 CALL:  prolog:bb_put(completion:counter, 2 )
4024d 181 0 CALL:  prolog:format('$stream'(3), '~w = ~w~w~n', completion:['L2','','L1'] )
4025d 181 0 TRY_OR 
4026d 251 0 CALL:  prolog:atom_codes('L2', [76|_133229] )
4027d 181 0 CALL:  prolog:format('$stream'(3), '~w~n', completion:['L2'] )
4028d 181 0 CALL:  prolog:close('$stream'(3) )
4029d 181 0 CALL:  utils:succeeds_n_times(completion:seen_atom(_133245,_133246,_133247,_133248), _1048362 )
4030d 181 0 TRY_OR 
4031d 254 0 CALL:  prolog:call(completion:seen_atom(_133245,_133246,_133247,_133248) )
4032d 254 0 CALL:  prolog:$execute(completion:seen_atom(_133245,_133246,_133247,_133248) )
4033d 254 0 CALL:  completion:seen_atom(_133245, _133246, _133247, _133248 )
+s 0x5602af15b770
 @0x7efdd88a31c8 0
+s 0x5602af233710
 @0x7efdd88a31c8 0
+s 0x5602af271e90
 @0x7efdd88a31c8 0
+s 0x5602af275e30
 @0x7efdd88a31c8 0
- 0x5602af15b770
 @0x7efdd88a31c8 254
4034d 266 0 CALL:  prolog:arg(1, counter(0), _133253 )
4035d 266 0 CALL:  prolog:nb_setarg(1, counter(0), 1 )
4036d 266 0 FAIL RETRY:  completion:seen_atom(_133245, _133246, _133247, _133248 )
4037d 254 0 CALL:  prolog:arg(1, counter(1), _133253 )
4038d 254 0 CALL:  prolog:nb_setarg(1, counter(1), 2 )
4040d 181 0 CALL:  prolog:arg(1, counter(2), _133253 )
4041d 181 0 CALL:  prolog:bb_get(completion:counter, _1048338 )
4042d 181 0 CALL:  utils:prefix_bdd_file_with_header('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', 2, 2, '/tmp/YAP_tmpXXRZOJ5R' )
4043d 181 0 CALL:  prolog:open('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', write, _1048333 )
4044d 181 0 CALL:  prolog:format('$stream'(3), '@BDD1~n~w~n0~n~w~n', utils:[2,2] )
4045d 181 0 CALL:  prolog:open('/tmp/YAP_tmpXXRZOJ5R', read, _1048332 )
4046d 181 0 TRY_OR 
4047d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4048d 251 0 CALL:  prolog:put_code('$stream'(3), 76 )
4049d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4051d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4052d 251 0 CALL:  prolog:put_code('$stream'(3), 49 )
4053d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4055d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4056d 251 0 CALL:  prolog:put_code('$stream'(3), 32 )
4057d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4059d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4060d 251 0 CALL:  prolog:put_code('$stream'(3), 61 )
4061d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4063d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4064d 251 0 CALL:  prolog:put_code('$stream'(3), 32 )
4065d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4067d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4068d 251 0 CALL:  prolog:put_code('$stream'(3), 120 )
4069d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4071d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4072d 251 0 CALL:  prolog:put_code('$stream'(3), 48 )
4073d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4075d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4076d 251 0 CALL:  prolog:put_code('$stream'(3), 32 )
4077d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4079d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4080d 251 0 CALL:  prolog:put_code('$stream'(3), 43 )
4081d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4083d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4084d 251 0 CALL:  prolog:put_code('$stream'(3), 32 )
4085d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4087d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4088d 251 0 CALL:  prolog:put_code('$stream'(3), 120 )
4089d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4091d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4092d 251 0 CALL:  prolog:put_code('$stream'(3), 49 )
4093d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4095d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4096d 251 0 CALL:  prolog:put_code('$stream'(3), 10 )
4097d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4099d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4100d 251 0 CALL:  prolog:put_code('$stream'(3), 76 )
4101d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4103d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4104d 251 0 CALL:  prolog:put_code('$stream'(3), 50 )
4105d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4107d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4108d 251 0 CALL:  prolog:put_code('$stream'(3), 32 )
4109d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4111d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4112d 251 0 CALL:  prolog:put_code('$stream'(3), 61 )
4113d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4115d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4116d 251 0 CALL:  prolog:put_code('$stream'(3), 32 )
4117d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4119d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4120d 251 0 CALL:  prolog:put_code('$stream'(3), 76 )
4121d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4123d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4124d 251 0 CALL:  prolog:put_code('$stream'(3), 49 )
4125d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4127d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4128d 251 0 CALL:  prolog:put_code('$stream'(3), 10 )
4129d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4131d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4132d 251 0 CALL:  prolog:put_code('$stream'(3), 76 )
4133d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4135d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4136d 251 0 CALL:  prolog:put_code('$stream'(3), 50 )
4137d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4139d 251 0 CALL:  prolog:get_code('$stream'(4), _133264 )
4140d 251 0 CALL:  prolog:put_code('$stream'(3), 10 )
4141d 251 0 CALL:  prolog:at_end_of_stream('$stream'(4) )
4142d 181 0 CALL:  prolog:close('$stream'(4) )
4143d 181 0 CALL:  prolog:close('$stream'(3) )
4144d 181 0 CALL:  utils:delete_file_silently('/tmp/YAP_tmpXXRZOJ5R' )
4145d 243 0 CALL:  prolog:catch(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048326, utils:fail )
4146d 243 0 CALL:  prolog:$catch(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048326, utils:fail )
4147d 259 0 CALL:  prolog:$execute(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R') )
4148d 259 0 CALL:  prolog:$call(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), 259, utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), user )
4149d 276 0 FAIL RETRY:  prolog:$call(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), 259, utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), user )
4150d 259 0 CALL:  prolog:$call(delete_file('/tmp/YAP_tmpXXRZOJ5R'), 259, utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), utils )
4151d 287 0 FAIL RETRY:  prolog:$call(delete_file('/tmp/YAP_tmpXXRZOJ5R'), 259, utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), utils )
4152d 259 0 CALL:  prolog:$execute0(delete_file('/tmp/YAP_tmpXXRZOJ5R'), utils )
4153d 259 0 CALL:  utils:delete_file('/tmp/YAP_tmpXXRZOJ5R' )
4154d 259 0 CALL:  prolog:$undefp([utils|delete_file('/tmp/YAP_tmpXXRZOJ5R')], error )
4155d 259 0 CALL:  prolog:yap_flag(unknown, error, fail )
4156d 259 0 CALL:  prolog:$stop_creeping(_1048286 )
4157d 259 0 TRY_OR 
4158d 300 0 CALL:  prolog:$undefp_search(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133281:_133282 )
4159d 309 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_133284,_133285,_133286,_133287), user )
4160d 309 0 FAIL RETRY:  prolog:$undefp_search(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133281:_133282 )
4161d 300 0 CALL:  prolog:expand_goal(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133281:_133282 )
4162d 300 0 CALL:  prolog:$expand_meta_call(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), [], _133281:_133282 )
4163d 300 0 CALL:  prolog:source_module(_133283 )
4164d 300 0 CALL:  prolog:$yap_strip_module(user:utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048266, _133287 )
4165d 300 0 CALL:  prolog:$expand_goals(delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048265, _1048267, utils, user, utils, []- (utils:delete_file('/tmp/YAP_tmpXXRZOJ5R')) )
4166d 324 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048265, _1048267, utils, user, utils, []- (utils:delete_file('/tmp/YAP_tmpXXRZOJ5R')) )
4167d 324 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048265, _1048267, utils, user, utils, []- (utils:delete_file('/tmp/YAP_tmpXXRZOJ5R')) )
4168d 324 0 FAIL RETRY:  prolog:$expand_goals(delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048265, _1048267, utils, user, utils, []- (utils:delete_file('/tmp/YAP_tmpXXRZOJ5R')) )
4169d 300 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133294, _133295 )
4170d 300 0 CALL:  prolog:$expand_goal(delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048265, _1048267, utils, user, utils, []- (utils:delete_file('/tmp/YAP_tmpXXRZOJ5R')) )
4171d 300 0 CALL:  prolog:$yap_strip_module(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133299, _133300 )
4172d 300 0 CALL:  prolog:$user_expansion(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133305:_133306 )
4173d 334 0 CALL:  prolog:_user_expand_goal(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133308:_133309 )
4177d 334 0 FAIL RETRY:  prolog:$user_expansion(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133305:_133306 )
4178d 300 0 CALL:  prolog:$import_expansion(utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133308:_133309 )
4179d 333 0 CALL:  prolog:$imported_predicate(delete_file('/tmp/YAP_tmpXXRZOJ5R'), utils, _133309, _133308 )
4180d 349 0 CALL:  prolog:$is_system_predicate(delete_file('/tmp/YAP_tmpXXRZOJ5R'), prolog )
4181d 349 0 FAIL RETRY:  prolog:$imported_predicate(delete_file('/tmp/YAP_tmpXXRZOJ5R'), utils, _133309, _133308 )
4182d 333 0 CALL:  prolog:$undefined(delete_file('/tmp/YAP_tmpXXRZOJ5R'), utils )
4183d 333 0 CALL:  prolog:$get_undefined_predicates(delete_file('/tmp/YAP_tmpXXRZOJ5R'), utils, _133309, _133308 )
4184d 356 0 CALL:  prolog:recorded('$import', '$import'(_133311,utils,_133313,delete_file('/tmp/YAP_tmpXXRZOJ5R'),_133315,_133316), _1048209 )
4185d 356 0 CALL:  prolog:$continue_imported(_133308, operating_system_support, _133309, delete_file('/tmp/YAP_tmpXXRZOJ5R') )
4186d 367 0 CALL:  prolog:$pred_exists(delete_file('/tmp/YAP_tmpXXRZOJ5R'), operating_system_support )
4187d 356 0 CALL:  prolog:\=(operating_system_support, utils )
4188d 300 0 CALL:  prolog:$meta_expansion(operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), utils, [], _1048254 )
4189d 332 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133329, _1048233 )
4190d 332 0 CALL:  prolog:functor(delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133332, _133333 )
4191d 332 0 CALL:  prolog:$meta_predicate(delete_file, operating_system_support, 1, _1048234 )
4192d 332 0 FAIL RETRY:  prolog:$meta_expansion(operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), utils, [], _1048254 )
4193d 300 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133329, _133330 )
4194d 300 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133331, _133332 )
4195d 300 0 CALL:  prolog:$end_goal_expansion(delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048265, _1048267, utils, user, operating_system_support, utils:delete_file('/tmp/YAP_tmpXXRZOJ5R') )
4196d 300 0 CALL:  prolog:$match_mod(delete_file('/tmp/YAP_tmpXXRZOJ5R'), utils, user, operating_system_support, _1048265 )
4197d 300 0 CALL:  prolog:$is_system_predicate(delete_file('/tmp/YAP_tmpXXRZOJ5R'), operating_system_support )
4198d 300 0 TRY_OR 
4199d 338 0 CALL:  prolog:==(operating_system_support, utils )
4201d 300 0 CALL:  prolog:$c_built_in(operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), operating_system_support, utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048256 )
4202d 331 0 CALL:  prolog:get_value('$c_arith', true )
4203d 300 0 CALL:  prolog:do_c_built_in(operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), operating_system_support, utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048256 )
4204d 342 0 CALL:  prolog:$yap_strip_module(operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133336, _133337 )
4205d 342 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), operating_system_support, utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048256 )
4206d 342 0 CALL:  prolog:$compop(operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048218, _1048219, _1048221 )
4207d 342 0 FAIL RETRY:  prolog:do_c_built_in(operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), operating_system_support, utils:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _1048256 )
4208d 342 0 CALL:  prolog:$yap_strip_module(operating_system_support:operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133339, _133340 )
4209d 342 0 CALL:  prolog:$match_mod(delete_file('/tmp/YAP_tmpXXRZOJ5R'), utils, user, operating_system_support, _1048267 )
4210d 342 0 CALL:  prolog:$is_system_predicate(delete_file('/tmp/YAP_tmpXXRZOJ5R'), operating_system_support )
4211d 342 0 TRY_OR 
4212d 358 0 CALL:  prolog:==(operating_system_support, utils )
4214d 342 0 CALL:  prolog:$yap_strip_module(utils:operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R'), _133281, _133282 )
4215d 342 0 TRY_OR 
4216d 350 0 CALL:  prolog:\==(utils, operating_system_support )
4217d 342 0 CALL:  prolog:\=(delete_file('/tmp/YAP_tmpXXRZOJ5R'), fail )
4218d 259 0 CALL:  prolog:yap_flag(unknown, _1048285, error )
4219d 259 0 TRY_OR 
4220d 297 0 CALL:  prolog:==(false, true )
4222d 259 0 CALL:  prolog:$execute0(delete_file('/tmp/YAP_tmpXXRZOJ5R'), operating_system_support )
4223d 259 0 CALL:  operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R' )
4224d 259 0 CALL:  prolog:true_file_name('/tmp/YAP_tmpXXRZOJ5R', _1048304 )
4225d 259 0 CALL:  operating_system_support:delete_file('/tmp/YAP_tmpXXRZOJ5R', off, on, off )
4226d 259 0 CALL:  prolog:true_file_name('/tmp/YAP_tmpXXRZOJ5R', _1048301 )
4227d 259 0 CALL:  operating_system_support:file_property('/tmp/YAP_tmpXXRZOJ5R', _1048300, _1048296, _1048297, _1048298, _1048299, off )
4228d 259 0 CALL:  operating_system_support:delete_file(regular, '/tmp/YAP_tmpXXRZOJ5R', off, on, off )
4229d 277 0 FAIL RETRY:  operating_system_support:delete_file(regular, '/tmp/YAP_tmpXXRZOJ5R', off, on, off )
4230d 277 0 FAIL RETRY:  operating_system_support:delete_file(regular, '/tmp/YAP_tmpXXRZOJ5R', off, on, off )
4231d 259 0 CALL:  operating_system_support:unlink_file('/tmp/YAP_tmpXXRZOJ5R', off )
4232d 259 0 CALL:  prolog:true_file_name('/tmp/YAP_tmpXXRZOJ5R', _1048304 )
4233d 259 0 CALL:  operating_system_support:unlink('/tmp/YAP_tmpXXRZOJ5R', _1048302 )
4234d 259 0 CALL:  operating_system_support:handle_system_internal(_133347, off, delete_file('/tmp/YAP_tmpXXRZOJ5R') )
4235d 259 0 TRY_OR 
4236d 273 0 CALL:  prolog:==(259, 259 )
4237d 181 0 CALL:  flags:problog_flag(output_dot_files, _1048340 )
4238d 181 0 CALL:  gflags:flag_get(output_dot_files, _1048340 )
4239d 181 0 CALL:  prolog:recorded(flag_values, flag(output_dot_files,_133352), _133353 )
4240d 181 0 TRY_OR 
4241d 243 0 CALL:  prolog:==(true, true )
4242d 181 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1','.dot'], _1048342 )
4243d 181 0 CALL:  prolog:open('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1.dot', write, _1048354 )
4244d 181 0 CALL:  prolog:format('$stream'(3), 'digraph d{~n', completion:[] )
4245d 181 0 TRY_OR 
4246d 240 0 CALL:  completion:seen_atom(_1048345, _1048346, _1048343, _1048344 )
4247d 252 0 TRY_OR 
4248d 260 0 CALL:  prolog:format('$stream'(3), '~q [label="~q\\n~q", style="filled", color="lightblue"];~n', completion:[x0,burglary,x0] )
4249d 252 0 FAIL RETRY:  completion:seen_atom(_1048345, _1048346, _1048343, _1048344 )
4250d 240 0 TRY_OR 
4251d 248 0 CALL:  prolog:format('$stream'(3), '~q [label="~q\\n~q", style="filled", color="lightblue"];~n', completion:[x1,earthquake,x1] )
4253d 181 0 CALL:  prolog:findall(_133197, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,_133185),print_dot_expression(_133192,'$stream'(3),_133197)), _1048353 )
4254d 181 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048353 )
4255d 239 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048353 )
4256d 181 0 TRY_OR 
4257d 246 0 CALL:  error:has_type(list_or_partial_list, _1048353 )
4258d 246 0 CALL:  error:is_list_or_partial_list(_1048353 )
4259d 246 0 CALL:  prolog:$skip_list(_133383, _1048353, _133384 )
4260d 181 0 CALL:  prolog:$findall(_133197, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,_133185),print_dot_expression(_133192,'$stream'(3),_133197)), [], _133384 )
4261d 181 0 CALL:  nb:nb_queue(_1048345 )
4262d 181 0 TRY_OR 
4263d 240 0 CALL:  prolog:$execute(completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,_133185),print_dot_expression(_133192,'$stream'(3),_133197)) )
4264d 240 0 CALL:  prolog:$call(completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,_133185),print_dot_expression(_133192,'$stream'(3),_133197)), 240, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,_133185),print_dot_expression(_133192,'$stream'(3),_133197)), user )
4265d 251 0 FAIL RETRY:  prolog:$call(completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,_133185),print_dot_expression(_133192,'$stream'(3),_133197)), 240, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,_133185),print_dot_expression(_133192,'$stream'(3),_133197)), user )
4266d 240 0 CALL:  prolog:$call(member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,_133185),print_dot_expression(_133192,'$stream'(3),_133197), 240, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,_133185),print_dot_expression(_133192,'$stream'(3),_133197)), completion )
4267d 240 0 CALL:  prolog:$call(member(_133185,['$dbref'(0x5602af2655d0,0)]), 240, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,_133185),print_dot_expression(_133192,'$stream'(3),_133197)), completion )
4268d 282 0 FAIL RETRY:  prolog:$call(member(_133185,['$dbref'(0x5602af2655d0,0)]), 240, completion: (member(_133185,['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,_133185),print_dot_expression(_133192,'$stream'(3),_133197)), completion )
4269d 240 0 CALL:  prolog:$execute0(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion )
4270d 240 0 CALL:  completion:member(_133185, ['$dbref'(0x5602af2655d0,0)] )
4271d 240 0 CALL:  prolog:$undefp([completion|member(_133185,['$dbref'(0x5602af2655d0,0)])], error )
4272d 240 0 CALL:  prolog:yap_flag(unknown, error, fail )
4273d 240 0 CALL:  prolog:$stop_creeping(_1048291 )
4274d 240 0 TRY_OR 
4275d 295 0 CALL:  prolog:$undefp_search(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137495:_137496 )
4276d 304 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_137498,_137499,_137500,_137501), user )
4277d 304 0 FAIL RETRY:  prolog:$undefp_search(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137495:_137496 )
4278d 295 0 CALL:  prolog:expand_goal(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137495:_137496 )
4279d 295 0 CALL:  prolog:$expand_meta_call(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), [], _137495:_137496 )
4280d 295 0 CALL:  prolog:source_module(_137497 )
4281d 295 0 CALL:  prolog:$yap_strip_module(user:completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048271, _137501 )
4282d 295 0 CALL:  prolog:$expand_goals(member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048270, _1048272, completion, user, completion, []- (completion:member(_133185,['$dbref'(0x5602af2655d0,0)])) )
4283d 319 0 FAIL RETRY:  prolog:$expand_goals(member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048270, _1048272, completion, user, completion, []- (completion:member(_133185,['$dbref'(0x5602af2655d0,0)])) )
4284d 319 0 FAIL RETRY:  prolog:$expand_goals(member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048270, _1048272, completion, user, completion, []- (completion:member(_133185,['$dbref'(0x5602af2655d0,0)])) )
4285d 319 0 FAIL RETRY:  prolog:$expand_goals(member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048270, _1048272, completion, user, completion, []- (completion:member(_133185,['$dbref'(0x5602af2655d0,0)])) )
4286d 295 0 CALL:  prolog:$yap_strip_module(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137508, _137509 )
4287d 295 0 CALL:  prolog:$expand_goal(member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048270, _1048272, completion, user, completion, []- (completion:member(_133185,['$dbref'(0x5602af2655d0,0)])) )
4288d 295 0 CALL:  prolog:$yap_strip_module(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137513, _137514 )
4289d 295 0 CALL:  prolog:$user_expansion(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137519:_137520 )
4290d 329 0 CALL:  prolog:_user_expand_goal(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137522:_137523 )
4294d 329 0 FAIL RETRY:  prolog:$user_expansion(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137519:_137520 )
4295d 295 0 CALL:  prolog:$import_expansion(completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137522:_137523 )
4296d 328 0 CALL:  prolog:$imported_predicate(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, _137523, _137522 )
4297d 344 0 CALL:  prolog:$is_system_predicate(member(_133185,['$dbref'(0x5602af2655d0,0)]), prolog )
4298d 344 0 FAIL RETRY:  prolog:$imported_predicate(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, _137523, _137522 )
4299d 328 0 CALL:  prolog:$undefined(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion )
4300d 328 0 CALL:  prolog:$get_undefined_predicates(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, _137523, _137522 )
4301d 351 0 CALL:  prolog:recorded('$import', '$import'(_137525,completion,_137527,member(_133185,['$dbref'(0x5602af2655d0,0)]),_137529,_137530), _1048214 )
4302d 351 0 CALL:  prolog:$continue_imported(_137522, lists, _137523, member(_133185,['$dbref'(0x5602af2655d0,0)]) )
4303d 362 0 CALL:  prolog:$pred_exists(member(_133185,['$dbref'(0x5602af2655d0,0)]), lists )
4304d 351 0 CALL:  prolog:\=(lists, completion )
4305d 295 0 CALL:  prolog:$meta_expansion(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, [], _1048259 )
4306d 327 0 CALL:  prolog:$yap_strip_module(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137545, _1048238 )
4307d 327 0 CALL:  prolog:functor(member(_133185,['$dbref'(0x5602af2655d0,0)]), _137548, _137549 )
4308d 327 0 CALL:  prolog:$meta_predicate(member, lists, 2, _1048239 )
4309d 327 0 FAIL RETRY:  prolog:$meta_expansion(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, [], _1048259 )
4310d 295 0 CALL:  prolog:$yap_strip_module(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137545, _137546 )
4311d 295 0 CALL:  prolog:$yap_strip_module(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137547, _137548 )
4312d 295 0 CALL:  prolog:$end_goal_expansion(member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048270, _1048272, completion, user, lists, completion:member(_133185,['$dbref'(0x5602af2655d0,0)]) )
4313d 295 0 CALL:  prolog:$match_mod(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, user, lists, _1048270 )
4314d 295 0 CALL:  prolog:$is_system_predicate(member(_133185,['$dbref'(0x5602af2655d0,0)]), lists )
4315d 295 0 TRY_OR 
4316d 333 0 CALL:  prolog:==(lists, completion )
4318d 295 0 CALL:  prolog:$c_built_in(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), lists, completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048261 )
4319d 326 0 CALL:  prolog:get_value('$c_arith', true )
4320d 295 0 CALL:  prolog:do_c_built_in(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), lists, completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048261 )
4321d 337 0 CALL:  prolog:$yap_strip_module(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137552, _137553 )
4322d 337 0 FAIL RETRY:  prolog:do_c_built_in(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), lists, completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048261 )
4323d 337 0 CALL:  prolog:$compop(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048223, _1048224, _1048226 )
4324d 337 0 FAIL RETRY:  prolog:do_c_built_in(lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), lists, completion:member(_133185,['$dbref'(0x5602af2655d0,0)]), _1048261 )
4325d 337 0 CALL:  prolog:$yap_strip_module(lists:lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137555, _137556 )
4326d 337 0 CALL:  prolog:$match_mod(member(_133185,['$dbref'(0x5602af2655d0,0)]), completion, user, lists, _1048272 )
4327d 337 0 CALL:  prolog:$is_system_predicate(member(_133185,['$dbref'(0x5602af2655d0,0)]), lists )
4328d 337 0 TRY_OR 
4329d 353 0 CALL:  prolog:==(lists, completion )
4331d 337 0 CALL:  prolog:$yap_strip_module(completion:lists:member(_133185,['$dbref'(0x5602af2655d0,0)]), _137495, _137496 )
4332d 337 0 TRY_OR 
4333d 345 0 CALL:  prolog:\==(completion, lists )
4334d 337 0 CALL:  prolog:\=(member(_133185,['$dbref'(0x5602af2655d0,0)]), fail )
4335d 240 0 CALL:  prolog:yap_flag(unknown, _1048290, error )
4336d 240 0 TRY_OR 
4337d 292 0 CALL:  prolog:==(false, true )
4339d 240 0 CALL:  prolog:$execute0(member(_133185,['$dbref'(0x5602af2655d0,0)]), lists )
4340d 240 0 CALL:  lists:member(_133185, ['$dbref'(0x5602af2655d0,0)] )
4341d 280 0 CALL:  prolog:$call(recorded(_133376,_133192,'$dbref'(0x5602af2655d0,0)),print_dot_expression(_133192,'$stream'(3),_133197), 240, completion: (member('$dbref'(0x5602af2655d0,0),['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,'$dbref'(0x5602af2655d0,0)),print_dot_expression(_133192,'$stream'(3),_133197)), completion )
4342d 280 0 CALL:  prolog:$call(recorded(_133376,_133192,'$dbref'(0x5602af2655d0,0)), 240, completion: (member('$dbref'(0x5602af2655d0,0),['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,'$dbref'(0x5602af2655d0,0)),print_dot_expression(_133192,'$stream'(3),_133197)), completion )
4343d 311 0 FAIL RETRY:  prolog:$call(recorded(_133376,_133192,'$dbref'(0x5602af2655d0,0)), 240, completion: (member('$dbref'(0x5602af2655d0,0),['$dbref'(0x5602af2655d0,0)]),recorded(_133376,_133192,'$dbref'(0x5602af2655d0,0)),print_dot_expression(_133192,'$stream'(3),_133197)), completion )
4344d 280 0 CALL:  prolog:$execute0(recorded(_133376,_133192,'$dbref'(0x5602af2655d0,0)), completion )
4345d 280 0 CALL:  prolog:recorded(_133376, _133192, '$dbref'(0x5602af2655d0,0) )
4346d 280 0 CALL:  prolog:recorded(_133376, _133192, '$dbref'(0x5602af2655d0,0) )
4347d 280 0 CALL:  prolog:$call(print_dot_expression(('$atom'(burglary);'$atom'(earthquake)),'$stream'(3),_133197), 240, completion: (member('$dbref'(0x5602af2655d0,0),['$dbref'(0x5602af2655d0,0)]),recorded(rules,('$atom'(burglary);'$atom'(earthquake)),'$dbref'(0x5602af2655d0,0)),print_dot_expression(('$atom'(burglary);'$atom'(earthquake)),'$stream'(3),_133197)), completion )
4348d 291 0 FAIL RETRY:  prolog:$call(print_dot_expression(('$atom'(burglary);'$atom'(earthquake)),'$stream'(3),_133197), 240, completion: (member('$dbref'(0x5602af2655d0,0),['$dbref'(0x5602af2655d0,0)]),recorded(rules,('$atom'(burglary);'$atom'(earthquake)),'$dbref'(0x5602af2655d0,0)),print_dot_expression(('$atom'(burglary);'$atom'(earthquake)),'$stream'(3),_133197)), completion )
4349d 280 0 CALL:  prolog:$execute0(print_dot_expression(('$atom'(burglary);'$atom'(earthquake)),'$stream'(3),_133197), completion )
4350d 280 0 CALL:  completion:print_dot_expression('$atom'(burglary);'$atom'(earthquake), '$stream'(3), _133197 )
+s 0x5602aeff6720
 @0x7efdd88a3228 0
+s 0x5602af263e00
 @0x7efdd88a3228 0
- 0x5602af263e00
 @0x7efdd88a3228 280
+s 0x5602af27f6e0
 @0x7efdd88a3228 0
+s 0x5602af265a60
 @0x7efdd88a3228 0
+s 0x5602af27f180
 @0x7efdd88a3228 0
- 0x5602aeff6720
 @0x7efdd88a3228 280
4351d 280 0 CALL:  completion:next_counter(_133197 )
4352d 280 0 CALL:  prolog:bb_get(completion:counter, _1048278 )
4353d 280 0 CALL:  prolog:atomic_concat(['L',3], _133197 )
4354d 280 0 CALL:  prolog:bb_put(completion:counter, 3 )
4355d 280 0 CALL:  prolog:format('$stream'(3), '~w [label="v",shape="invtriangle", style="filled", color="greenyellow"];~n', completion:['L3'] )
4356d 280 0 CALL:  completion:print_dot_expression_or('$atom'(burglary);'$atom'(earthquake), '$stream'(3), 'L3' )
+s 0x5602af27ebf0
 @0x7efdd88a3238 0
+s 0x5602aebe9360
 @0x7efdd88a3238 0
- 0x5602af27ebf0
 @0x7efdd88a3238 280
4357d 280 0 CALL:  completion:print_dot_expression('$atom'(burglary), '$stream'(3), _1048276 )
4358d 280 0 CALL:  completion:remember(burglary, _1048276 )
4359d 308 0 CALL:  completion:seen_atom(burglary, _1048276, _1048260, _1048261 )
+s 0x5602af27ebf0
 @0x7efdd88a3238 0
+s 0x5602af27f970
 @0x7efdd88a3238 0
- 0x5602af27f970
 @0x7efdd88a3238 308
+s 0x5602af263e00
 @0x7efdd88a3238 0
+s 0x5602af265b10
 @0x7efdd88a3238 0
- 0x5602af27ebf0
 @0x7efdd88a3238 308
4360d 280 0 CALL:  completion:print_dot_line(x0, 'L3', '$stream'(3) )
4361d 280 0 TRY_OR 
4362d 316 0 CALL:  prolog:atomic_concat(~, _1048268, x0 )
4364d 280 0 CALL:  prolog:format('$stream'(3), '~w -> ~w;~n', completion:[x0,'L3'] )
4365d 280 0 CALL:  completion:print_dot_expression_or('$atom'(earthquake), '$stream'(3), 'L3' )
4366d 290 0 FAIL RETRY:  completion:print_dot_expression_or('$atom'(earthquake), '$stream'(3), 'L3' )
4367d 280 0 CALL:  completion:print_dot_expression('$atom'(earthquake), '$stream'(3), _1048287 )
4368d 280 0 CALL:  completion:remember(earthquake, _1048287 )
4369d 297 0 CALL:  completion:seen_atom(earthquake, _1048287, _1048271, _1048272 )
4370d 280 0 CALL:  completion:print_dot_line(x1, 'L3', '$stream'(3) )
4371d 280 0 TRY_OR 
4372d 298 0 CALL:  prolog:atomic_concat(~, _1048286, x1 )
4374d 280 0 CALL:  prolog:format('$stream'(3), '~w -> ~w;~n', completion:[x1,'L3'] )
4375d 280 0 CALL:  nb:nb_queue_enqueue(queue(0,0,0,0), 'L3' )
4376d 280 0 FAIL RETRY:  lists:member(_133185, ['$dbref'(0x5602af2655d0,0)] )
4377d 240 0 CALL:  lists:member(_133185, [] )
4379d 181 0 CALL:  nb:nb_queue_close(queue(0,['L3'|_133391],_133391,1), _133384, [] )
4380d 181 0 CALL:  prolog:format('$stream'(3), '}~n', completion:[] )
4381d 181 0 CALL:  prolog:close('$stream'(3) )
4382d 181 0 CALL:  prolog:retractall(completion:script_hash(_133399,_133400) )
4383d 181 0 CALL:  prolog:$retractall(script_hash(_133399,_133400), completion )
4384d 237 0 FAIL RETRY:  prolog:$retractall(script_hash(_133399,_133400), completion )
4385d 181 0 CALL:  prolog:functor(script_hash(_133399,_133400), _133402, _133403 )
4386d 181 0 CALL:  prolog:$is_log_updatable(script_hash(_133399,_133400), completion )
4387d 181 0 CALL:  prolog:$is_multifile(script_hash(_133399,_133400), completion )
4388d 181 0 CALL:  prolog:$retractall_lu(script_hash(_133399,_133400), completion )
4389d 229 0 CALL:  prolog:$free_arguments(script_hash(_133399,_133400) )
4390d 181 0 TRY_OR 
4391d 244 0 CALL:  prolog:$purge_clauses(script_hash(_133399,_133400), completion )
- 0x5602af037910
 @0x7efdd88a31d8 244
4393d 181 0 CALL:  prolog:retractall(completion:seen_atom(_133405,_133406,_133407,_133408) )
4394d 181 0 CALL:  prolog:$retractall(seen_atom(_133405,_133406,_133407,_133408), completion )
4395d 232 0 FAIL RETRY:  prolog:$retractall(seen_atom(_133405,_133406,_133407,_133408), completion )
4396d 181 0 CALL:  prolog:functor(seen_atom(_133405,_133406,_133407,_133408), _133410, _133411 )
4397d 181 0 CALL:  prolog:$is_log_updatable(seen_atom(_133405,_133406,_133407,_133408), completion )
4398d 181 0 CALL:  prolog:$is_multifile(seen_atom(_133405,_133406,_133407,_133408), completion )
4399d 181 0 CALL:  prolog:$retractall_lu(seen_atom(_133405,_133406,_133407,_133408), completion )
4400d 224 0 CALL:  prolog:$free_arguments(seen_atom(_133405,_133406,_133407,_133408) )
4401d 181 0 TRY_OR 
4402d 239 0 CALL:  prolog:$purge_clauses(seen_atom(_133405,_133406,_133407,_133408), completion )
- 0x5602af263e00
 @0x7efdd88a31d8 239
- 0x5602af265b10
 @0x7efdd88a31d8 239
- 0x5602af271e90
 @0x7efdd88a31d8 239
- 0x5602af275e30
 @0x7efdd88a31d8 239
- 0x5602af233710
 @0x7efdd88a31d8 239
- 0x5602af2545f0
 @0x7efdd88a31d8 239
- 0x5602aeffcbe0
 @0x7efdd88a31d8 239
4404d 181 0 CALL:  completion:print_script_per_cluster([], 1, 2, 2, _1048379, [1], _1048375 )
4405d 181 0 CALL:  completion:store_known_atoms(1, [1], training )
4406d 181 0 TRY_OR 
4407d 229 0 CALL:  prolog:==(training, test )
4409d 181 0 CALL:  prolog:retractall(completion:bdd_cluster(1,_133418) )
4410d 181 0 CALL:  prolog:$retractall(bdd_cluster(1,_133418), completion )
4411d 238 0 FAIL RETRY:  prolog:$retractall(bdd_cluster(1,_133418), completion )
4412d 181 0 CALL:  prolog:functor(bdd_cluster(1,_133418), _133420, _133421 )
4413d 181 0 CALL:  prolog:$is_log_updatable(bdd_cluster(1,_133418), completion )
4414d 181 0 CALL:  prolog:$is_multifile(bdd_cluster(1,_133418), completion )
4415d 181 0 CALL:  prolog:$retractall_lu_mf(bdd_cluster(1,_133418), completion, bdd_cluster, 2 )
4416d 232 0 CALL:  prolog:$log_update_clause(bdd_cluster(1,_133418), completion, _1048332, _1048337 )
4417d 232 0 FAIL RETRY:  prolog:$retractall_lu_mf(bdd_cluster(1,_133418), completion, bdd_cluster, 2 )
4418d 181 0 CALL:  prolog:assertz(completion:bdd_cluster(1,[1]) )
4419d 181 0 CALL:  prolog:$assert(completion:bdd_cluster(1,[1]), assertz, _133425 )
4420d 181 0 CALL:  prolog:$yap_strip_clause(completion:bdd_cluster(1,[1]), _1048343, _1048344 )
4421d 181 0 CALL:  prolog:$expand_clause(completion:bdd_cluster(1,[1]), _1048347, _1048345 )
4422d 242 0 CALL:  prolog:source_module(_133426 )
4423d 242 0 CALL:  prolog:$yap_strip_clause(user:completion:bdd_cluster(1,[1]), _133430, _133431 )
4424d 242 0 CALL:  prolog:$expand_a_clause(completion:bdd_cluster(1,[1]), user, _1048347, _1048345 )
4425d 242 0 CALL:  prolog:$yap_strip_module(user:completion:bdd_cluster(1,[1]), _1048314, _133438 )
4426d 242 0 CALL:  prolog:$head_and_body(bdd_cluster(1,[1]), _1048313, _1048315 )
4427d 272 0 FAIL RETRY:  prolog:$head_and_body(bdd_cluster(1,[1]), _1048313, _1048315 )
4428d 242 0 CALL:  prolog:$yap_strip_module(completion:bdd_cluster(1,[1]), _1048316, _1048317 )
4429d 242 0 CALL:  prolog:$not_imported(bdd_cluster(1,[1]), completion )
4430d 270 0 CALL:  prolog:recorded('$import', '$import'(_133443,completion,_133445,bdd_cluster(1,[1]),_133447,_133448), _1048299 )
4431d 270 0 FAIL RETRY:  prolog:$not_imported(bdd_cluster(1,[1]), completion )
4432d 242 0 CALL:  prolog:$yap_strip_module(completion:true, _133445, _133446 )
4433d 242 0 CALL:  prolog:$expand_clause_body(true, bdd_cluster(1,[1]), completion, user, completion, _1048319, _1048321 )
4434d 242 0 CALL:  prolog:$build_up(completion, bdd_cluster(1,[1]), user, true, _1048347, true, _1048345 )
4435d 261 0 CALL:  prolog:==(completion, user )
4436d 261 0 FAIL RETRY:  prolog:$build_up(completion, bdd_cluster(1,[1]), user, true, _1048347, true, _1048345 )
4437d 181 0 CALL:  prolog:$$compile(completion:bdd_cluster(1,[1]), assertz, completion:bdd_cluster(1,[1]), _133425 )
4438d 181 0 CALL:  prolog:$head_and_body(completion:bdd_cluster(1,[1]), _1048342, _1048344 )
4439d 243 0 FAIL RETRY:  prolog:$head_and_body(completion:bdd_cluster(1,[1]), _1048342, _1048344 )
4440d 181 0 CALL:  prolog:strip_module(completion:bdd_cluster(1,[1]), _1048347, _1048343 )
4441d 181 0 CALL:  prolog:$undefined(bdd_cluster(1,[1]), completion )
4442d 181 0 CALL:  prolog:$compile(bdd_cluster(1,[1]):-true, assertz, completion:bdd_cluster(1,[1]), completion, _133425 )
+s 0x5602af265bc0
 @0x7efdd88a31d8 0
+s 0x5602aeffcbe0
 @0x7efdd88a31e8 0
4443d 181 0 CALL:  utils_learning:create_known_values_file_name(1, _1048354 )
4444d 230 0 CALL:  flags:problog_flag(bdd_directory, _1048337 )
4445d 230 0 CALL:  gflags:flag_get(bdd_directory, _1048337 )
4446d 230 0 CALL:  prolog:recorded(flag_values, flag(bdd_directory,_133461), _133462 )
4447d 181 0 CALL:  prolog:atomic_concat([query_,1,'_known_values'], _1048338 )
4448d 181 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries', query_1_known_values, _1048354 )
4449d 181 0 CALL:  os:path_separator(_1048346 )
4450d 238 0 CALL:  prolog:current_prolog_flag(windows, true )
4451d 238 0 FAIL RETRY:  os:path_separator(_1048346 )
4452d 181 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries',/,query_1_known_values], _1048354 )
4453d 181 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries',/,query_1_known_values], _1048354 )
4454d 181 0 CALL:  prolog:open('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_1_known_values', write, _1048371 )
4455d 181 0 CALL:  prolog:format('$stream'(3), 'completion:bdd_cluster(~w,~w).~n', completion:[1,[1]] )
4456d 181 0 TRY_OR 
4457d 227 0 CALL:  prolog:recorded(known_atoms, <=>('$atom'(_133490),_133488), _1048356 )
4458d 227 0 CALL:  completion:remember(alarm, _1048357 )
4459d 236 0 CALL:  completion:seen_atom(alarm, _1048357, _1048332, _1048333 )
4460d 236 0 FAIL RETRY:  completion:remember(alarm, _1048357 )
4461d 236 0 CALL:  prolog:atom_codes(alarm, [76|_133492] )
4462d 236 0 FAIL RETRY:  completion:remember(alarm, _1048357 )
4463d 236 0 CALL:  problog:probabilistic_fact(_1048333, alarm, _1048332 )
4464d 257 0 CALL:  prolog:ground(alarm )
4465d 236 0 CALL:  prolog:=..(alarm, [_133491|_133492] )
4466d 236 0 CALL:  prolog:atomic_concat(problog_, alarm, _1048308 )
4467d 236 0 CALL:  lists:append([_133495], [_133497], _1048307 )
4468d 236 0 CALL:  lists:append([], [_133497], _133500 )
4469d 236 0 CALL:  prolog:=..(_1048310, [problog_alarm,_133495,_133497] )
4470d 236 0 CALL:  prolog:length([_133495,_133497], _1048309 )
4471d 236 0 CALL:  prolog:$skip_list([_133495,_133497], _1048309, _133506, _133507 )
4472d 236 0 CALL:  prolog:==([], [] )
4473d 236 0 CALL:  prolog:current_predicate(problog:problog_alarm/2 )
4474d 236 0 CALL:  prolog:$yap_strip_module(problog:problog_alarm/2, _1048304, _1048303 )
4475d 236 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_alarm/2 )
4476d 236 0 TRY_OR 
4477d 288 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_alarm/2 )
4478d 297 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_alarm/2 )
4479d 288 0 TRY_OR 
4481d 288 0 CALL:  error:may_bind_to_type(atom, problog_alarm )
4482d 305 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_alarm )
4483d 288 0 CALL:  error:may_bind_to_type(integer, 2 )
4484d 297 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
4485d 236 0 CALL:  prolog:$c_i_predicate(problog_alarm/2, problog )
4486d 236 0 TRY_OR 
4487d 282 0 CALL:  prolog:ground(problog_alarm/2 )
4488d 236 0 CALL:  prolog:functor(_133514, problog_alarm, 2 )
4489d 236 0 CALL:  prolog:current_predicate(problog_alarm, problog:problog_alarm(_133515,_133516) )
4490d 236 0 CALL:  prolog:$yap_strip_module(problog:problog_alarm(_133515,_133516), _1048300, _1048299 )
4491d 236 0 CALL:  prolog:functor(problog_alarm(_133515,_133516), problog_alarm, _1048298 )
4492d 236 0 TRY_OR 
4493d 284 0 CALL:  prolog:$current_predicate(problog_alarm, problog, problog_alarm(_133515,_133516), user )
4495d 236 0 CALL:  prolog:$imported_predicate(problog_alarm(_133515,_133516), problog, _1048303, _1048304 )
4496d 285 0 CALL:  prolog:$is_system_predicate(problog_alarm(_133515,_133516), prolog )
4497d 285 0 FAIL RETRY:  prolog:$imported_predicate(problog_alarm(_133515,_133516), problog, _1048303, _1048304 )
4498d 236 0 CALL:  prolog:$undefined(problog_alarm(_133515,_133516), problog )
4499d 236 0 CALL:  prolog:$get_undefined_predicates(problog_alarm(_133515,_133516), problog, _1048303, _1048304 )
4500d 292 0 CALL:  prolog:recorded('$import', '$import'(_133521,problog,_133523,problog_alarm(_133515,_133516),_133525,_133526), _1048273 )
4501d 292 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_133515,_133516), problog, _1048303, _1048304 )
4502d 292 0 CALL:  prolog:$pred_exists(problog_alarm(_133515,_133516), user )
4503d 292 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_133515,_133516), problog, _1048303, _1048304 )
4504d 292 0 CALL:  prolog:recorded('$dialect', swi, _1048268 )
4505d 292 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_133515,_133516), problog, _1048303, _1048304 )
4506d 236 0 CALL:  prolog:$parent_module(problog, _1048286 )
4507d 236 0 FAIL RETRY:  completion:remember(alarm, _1048357 )
4508d 227 0 CALL:  completion:next_det_counter(_1048340 )
4509d 227 0 CALL:  prolog:bb_get(completion:det_counter, _1048331 )
4510d 227 0 CALL:  prolog:atomic_concat([y,1], _1048340 )
4511d 227 0 CALL:  prolog:bb_put(completion:det_counter, 1 )
4512d 227 0 CALL:  prolog:atomic_concat([y,y1], _1048357 )
4513d 227 0 CALL:  prolog:assertz(completion:seen_atom(alarm,yy1,det,1) )
4514d 227 0 CALL:  prolog:$assert(completion:seen_atom(alarm,yy1,det,1), assertz, _133510 )
4515d 227 0 CALL:  prolog:$yap_strip_clause(completion:seen_atom(alarm,yy1,det,1), _1048337, _1048338 )
4516d 227 0 CALL:  prolog:$expand_clause(completion:seen_atom(alarm,yy1,det,1), _1048341, _1048339 )
4517d 248 0 CALL:  prolog:source_module(_133511 )
4518d 248 0 CALL:  prolog:$yap_strip_clause(user:completion:seen_atom(alarm,yy1,det,1), _133515, _133516 )
4519d 248 0 CALL:  prolog:$expand_a_clause(completion:seen_atom(alarm,yy1,det,1), user, _1048341, _1048339 )
4520d 248 0 CALL:  prolog:$yap_strip_module(user:completion:seen_atom(alarm,yy1,det,1), _1048308, _133523 )
4521d 248 0 CALL:  prolog:$head_and_body(seen_atom(alarm,yy1,det,1), _1048307, _1048309 )
4522d 278 0 FAIL RETRY:  prolog:$head_and_body(seen_atom(alarm,yy1,det,1), _1048307, _1048309 )
4523d 248 0 CALL:  prolog:$yap_strip_module(completion:seen_atom(alarm,yy1,det,1), _1048310, _1048311 )
4524d 248 0 CALL:  prolog:$not_imported(seen_atom(alarm,yy1,det,1), completion )
4525d 276 0 CALL:  prolog:recorded('$import', '$import'(_133528,completion,_133530,seen_atom(alarm,yy1,det,1),_133532,_133533), _1048293 )
4526d 276 0 FAIL RETRY:  prolog:$not_imported(seen_atom(alarm,yy1,det,1), completion )
4527d 248 0 CALL:  prolog:$yap_strip_module(completion:true, _133530, _133531 )
4528d 248 0 CALL:  prolog:$expand_clause_body(true, seen_atom(alarm,yy1,det,1), completion, user, completion, _1048313, _1048315 )
4529d 248 0 CALL:  prolog:$build_up(completion, seen_atom(alarm,yy1,det,1), user, true, _1048341, true, _1048339 )
4530d 267 0 CALL:  prolog:==(completion, user )
4531d 267 0 FAIL RETRY:  prolog:$build_up(completion, seen_atom(alarm,yy1,det,1), user, true, _1048341, true, _1048339 )
4532d 227 0 CALL:  prolog:$$compile(completion:seen_atom(alarm,yy1,det,1), assertz, completion:seen_atom(alarm,yy1,det,1), _133510 )
4533d 227 0 CALL:  prolog:$head_and_body(completion:seen_atom(alarm,yy1,det,1), _1048336, _1048338 )
4534d 249 0 FAIL RETRY:  prolog:$head_and_body(completion:seen_atom(alarm,yy1,det,1), _1048336, _1048338 )
4535d 227 0 CALL:  prolog:strip_module(completion:seen_atom(alarm,yy1,det,1), _1048341, _1048337 )
4536d 227 0 CALL:  prolog:$undefined(seen_atom(alarm,yy1,det,1), completion )
4537d 227 0 CALL:  prolog:$compile(seen_atom(alarm,yy1,det,1):-true, assertz, completion:seen_atom(alarm,yy1,det,1), completion, _133510 )
+s 0x5602af2545f0
 @0x7efdd88a3238 0
4538d 227 0 CALL:  completion:split_atom_name(yy1, _1048365, _1048366 )
4539d 227 0 CALL:  prolog:atomic_concat(x, _1048336, yy1 )
4541d 181 0 CALL:  prolog:close('$stream'(3) )
4542d 181 0 CALL:  prolog:key_statistics(known_atoms, _1048381, _1048377 )
4543d 181 0 CALL:  prolog:key_statistics(known_atoms, _1048381, _1048369, _1048370 )
4544d 181 0 CALL:  logger:logger_add_to_variable(train_bdd_script_generation_active_ground_atoms, 2 )
4545d 181 0 TRY_OR 
4546d 212 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation_active_ground_atoms )
4547d 212 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_active_ground_atoms, _1048356 )
4548d 212 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_active_ground_atoms, _1048357 )
4549d 212 0 CALL:  prolog:\=(null, null )
4551d 181 0 CALL:  logger:logger_set_variable(train_bdd_script_generation_active_ground_atoms, 2 )
4552d 181 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_active_ground_atoms, _1048371 )
4553d 181 0 TRY_OR 
4554d 213 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_active_ground_atoms, null )
4555d 181 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation_active_ground_atoms, 2 )
4556d 181 0 CALL:  logger:logger_add_to_variable(train_bdd_script_generation_propagated_ground_atoms, 1 )
4557d 181 0 TRY_OR 
4558d 210 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation_propagated_ground_atoms )
4559d 210 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_propagated_ground_atoms, _1048358 )
4560d 210 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_propagated_ground_atoms, _1048359 )
4561d 210 0 CALL:  prolog:\=(null, null )
4563d 181 0 CALL:  logger:logger_set_variable(train_bdd_script_generation_propagated_ground_atoms, 1 )
4564d 181 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_propagated_ground_atoms, _1048373 )
4565d 181 0 TRY_OR 
4566d 211 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_propagated_ground_atoms, null )
4567d 181 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation_propagated_ground_atoms, 1 )
4568d 181 0 CALL:  prolog:eraseall(rules )
- 0x5602af2655d0
 @0x7efdd88a31e8 181
4569d 181 0 CALL:  prolog:eraseall(unpropagated_rules )
4570d 181 0 CALL:  prolog:eraseall(known_atoms )
- 0x5602af265760
 @0x7efdd88a31e8 181
4571d 181 0 CALL:  grounder:grounder_reset
4572d 181 0 CALL:  prolog:eraseall(reachable )
4573d 181 0 CALL:  logger:logger_stop_timer(train_bdd_script_generation )
4574d 181 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation, _1048375 )
4575d 181 0 CALL:  prolog:bb_delete(logger:logger_start_time_train_bdd_script_generation, _1048378 )
4576d 181 0 CALL:  prolog:statistics(walltime, [_133501,_133503] )
4577d 181 0 CALL:  prolog:$walltime(_133501, _133503 )
4578d 181 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation, null )
4579d 181 0 TRY_OR 
4580d 204 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation )
4581d 204 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation, _1048364 )
4582d 204 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation, _1048365 )
4583d 204 0 CALL:  prolog:\=(null, null )
4585d 181 0 CALL:  logger:logger_set_variable(train_bdd_script_generation, 35794 )
4586d 181 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation, _1048374 )
4587d 181 0 TRY_OR 
4588d 210 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation, null )
4589d 181 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation, 35794 )
4590d 181 0 CALL:  print_learning:format_learning(3, '~n', [] )
4591d 196 0 CALL:  flags:problog_flag(verbosity_learning, _1048370 )
4592d 196 0 CALL:  gflags:flag_get(verbosity_learning, _1048370 )
4593d 196 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_133513), _133514 )
4594d 196 0 CALL:  prolog:>=(5, 3 )
4595d 181 0 CALL:  prolog:format('~n', print_learning:[] )
4596d 181 0 CALL:  prolog:flush_output(user )

4597d 181 0 CALL:  prolog:garbage_collect_atoms
4598d 181 0 CALL:  prolog:$atom_gc
- 0x5602af272db0
 @0x7efdd88a31e8 181
- 0x5602af271fc0
 @0x7efdd88a31e8 181
- 0x5602af273a60
 @0x7efdd88a31e8 181
- 0x5602af282bf0
 @0x7efdd88a31e8 181
- 0x5602af2750b0
 @0x7efdd88a31e8 181
4599d 181 0 CALL:  prolog:garbage_collect
4600d 181 0 CALL:  prolog:$gc
- 0x5602aecef570
 @0x7efdd88a3258 181
4601d 173 0 FAIL RETRY:  user:example(_1048418 )
4602d 165 0 TRY_OR 
4603d 173 0 CALL:  print_learning:format_learning(3, 'training example ~q: ', [2] )
4604d 183 0 CALL:  flags:problog_flag(verbosity_learning, _1048383 )
4605d 183 0 CALL:  gflags:flag_get(verbosity_learning, _1048383 )
4606d 183 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_130923), _130924 )
4607d 183 0 CALL:  prolog:>=(5, 3 )
4608d 173 0 CALL:  prolog:format('training example ~q: ', print_learning:[2] )
4609d 173 0 CALL:  prolog:flush_output(user )
training example 2: 4610d 173 0 CALL:  problog_lfi:init_one_query(2, training )
4611d 182 0 CALL:  utils_learning:create_known_values_file_name(2, _1048387 )
4612d 198 0 CALL:  flags:problog_flag(bdd_directory, _1048369 )
4613d 198 0 CALL:  gflags:flag_get(bdd_directory, _1048369 )
4614d 198 0 CALL:  prolog:recorded(flag_values, flag(bdd_directory,_130931), _130932 )
4615d 182 0 CALL:  prolog:atomic_concat([query_,2,'_known_values'], _1048370 )
4616d 182 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries', query_2_known_values, _1048387 )
4617d 182 0 CALL:  os:path_separator(_1048378 )
4618d 206 0 CALL:  prolog:current_prolog_flag(windows, true )
4619d 206 0 FAIL RETRY:  os:path_separator(_1048378 )
4620d 182 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries',/,query_2_known_values], _1048387 )
4621d 182 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries',/,query_2_known_values], _1048387 )
4622d 182 0 CALL:  prolog:file_exists('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values' )
4623d 182 0 CALL:  prolog:absolute_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', _130945, [expand(true),solutions(first),access(exist)] )
4624d 182 0 CALL:  prolog:absolute_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', [expand(true),solutions(first),access(exist)], _130945 )
4625d 209 0 FAIL RETRY:  prolog:absolute_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', [expand(true),solutions(first),access(exist)], _130945 )
4626d 182 0 CALL:  prolog:$absolute_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', [expand(true),solutions(first),access(exist)], _130945 )
4627d 182 0 CALL:  prolog:gated_call('$enter_absf'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values',[expand(true),solutions(first),access(exist)],_130961,_130962,_130963,_130964,_130965,_130966,_130967,_130968,_130969), '$find_in_path'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values',_130961,_130945,_130962,_130968), _130976, '$absf_port'(_130976,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values',_130945,_130962,_130963,_130964,_130965,_130966,_130967,_130968,_130969) )
4628d 182 0 CALL:  prolog:$setup_call_catcher_cleanup('$enter_absf'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values',[expand(true),solutions(first),access(exist)],_130961,_130962,_130963,_130964,_130965,_130966,_130967,_130968,_130969) )
4629d 219 0 CALL:  prolog:abs_file_parameters([expand(true),solutions(first),access(exist)], _130961 )
4630d 219 0 CALL:  prolog:current_prolog_flag(open_expands_filename, _130963 )
4631d 219 0 CALL:  prolog:current_prolog_flag(fileerrors, _130964 )
4632d 219 0 CALL:  prolog:current_prolog_flag(verbose_file_search, _130965 )
4633d 219 0 CALL:  prolog:get_abs_file_parameter(verbose_file_search, opt(exist,true,[],error,txt,'','',first,false), _130967 )
4634d 219 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), _130966 )
4635d 219 0 CALL:  prolog:set_prolog_flag(verbose_file_search, false )
4636d 219 0 CALL:  prolog:get_abs_file_parameter(file_errors, opt(exist,true,[],error,txt,'','',first,false), _130999 )
4637d 219 0 CALL:  prolog:get_abs_file_parameter(solutions, opt(exist,true,[],error,txt,'','',first,false), _130968 )
4638d 219 0 TRY_OR 
4639d 237 0 CALL:  prolog:==(error, fail )
4641d 219 0 CALL:  prolog:set_prolog_flag(fileerrors, true )
4642d 219 0 CALL:  prolog:set_prolog_flag(file_name_variables, true )
4643d 219 0 CALL:  prolog:$absf_trace('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values' )
4644d 234 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
4645d 234 0 FAIL RETRY:  prolog:$absf_trace('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values' )
4646d 219 0 CALL:  prolog:$absf_trace_options([expand(true),solutions(first),access(exist)] )
4647d 233 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
4648d 233 0 FAIL RETRY:  prolog:$absf_trace_options([expand(true),solutions(first),access(exist)] )
4649d 182 0 CALL:  prolog:$gated_call(true, '$find_in_path'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values',opt(exist,true,[],error,txt,'','',first,false),_130945,t(no),first), _130976, '$absf_port'(_130976,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values',_130945,t(no),false,true,false,true,false,first,true) )
4650d 182 0 CALL:  prolog:$tag_cleanup(_131008, cleanup(true,_130976,'$absf_port'(_130976,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values',_130945,t(no),false,true,false,true,false,first,true),_131006,true,_131008) )
4651d 182 0 CALL:  prolog:$execute('$find_in_path'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values',opt(exist,true,[],error,txt,'','',first,false),_130945,t(no),first) )
4652d 182 0 CALL:  prolog:$find_in_path('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', opt(exist,true,[],error,txt,'','',first,false), _130945, t(no), first )
4653d 208 0 FAIL RETRY:  prolog:$find_in_path('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', opt(exist,true,[],error,txt,'','',first,false), _130945, t(no), first )
4654d 182 0 CALL:  prolog:get_abs_file_parameter(file_type, opt(exist,true,[],error,txt,'','',first,false), _1048371 )
4655d 182 0 CALL:  prolog:get_abs_file_parameter(access, opt(exist,true,[],error,txt,'','',first,false), _1048372 )
4656d 182 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), _1048366 )
4657d 182 0 CALL:  prolog:$absf_trace('start with ~w', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'] )
4658d 224 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
4659d 224 0 FAIL RETRY:  prolog:$absf_trace('start with ~w', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'] )
4660d 182 0 CALL:  prolog:$core_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', opt(exist,true,[],error,txt,'','',first,false), _1048362, [] )
4661d 182 0 CALL:  prolog:$file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', opt(exist,true,[],error,txt,'','',first,false), _1048351, _1048362, _1048352 )
4662d 236 0 CALL:  prolog:=..('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', [_131026,_131028] )
4663d 236 0 FAIL RETRY:  prolog:$file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', opt(exist,true,[],error,txt,'','',first,false), _1048351, _1048362, _1048352 )
4664d 182 0 CALL:  prolog:$cat_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', _1048351, _1048362, _1048352 )
4665d 235 0 FAIL RETRY:  prolog:$cat_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', _1048351, _1048362, _1048352 )
4666d 235 0 CALL:  prolog:atom_codes('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', _1048351 )
4667d 182 0 CALL:  prolog:phrase([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _1048362, _1048352 )
4668d 182 0 CALL:  prolog:$phrase_list([104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131201, _1048352 )
4669d 182 0 CALL:  prolog:$phrase_list([111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131203, _1048352 )
4670d 182 0 CALL:  prolog:$phrase_list([109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131205, _1048352 )
4671d 182 0 CALL:  prolog:$phrase_list([101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131207, _1048352 )
4672d 182 0 CALL:  prolog:$phrase_list([47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131209, _1048352 )
4673d 182 0 CALL:  prolog:$phrase_list([118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131211, _1048352 )
4674d 182 0 CALL:  prolog:$phrase_list([115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131213, _1048352 )
4675d 182 0 CALL:  prolog:$phrase_list([99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131215, _1048352 )
4676d 182 0 CALL:  prolog:$phrase_list([47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131217, _1048352 )
4677d 182 0 CALL:  prolog:$phrase_list([103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131219, _1048352 )
4678d 182 0 CALL:  prolog:$phrase_list([105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131221, _1048352 )
4679d 182 0 CALL:  prolog:$phrase_list([116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131223, _1048352 )
4680d 182 0 CALL:  prolog:$phrase_list([104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131225, _1048352 )
4681d 182 0 CALL:  prolog:$phrase_list([117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131227, _1048352 )
4682d 182 0 CALL:  prolog:$phrase_list([98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131229, _1048352 )
4683d 182 0 CALL:  prolog:$phrase_list([47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131231, _1048352 )
4684d 182 0 CALL:  prolog:$phrase_list([121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131233, _1048352 )
4685d 182 0 CALL:  prolog:$phrase_list([97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131235, _1048352 )
4686d 182 0 CALL:  prolog:$phrase_list([112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131237, _1048352 )
4687d 182 0 CALL:  prolog:$phrase_list([45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131239, _1048352 )
4688d 182 0 CALL:  prolog:$phrase_list([54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131241, _1048352 )
4689d 182 0 CALL:  prolog:$phrase_list([46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131243, _1048352 )
4690d 182 0 CALL:  prolog:$phrase_list([51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131245, _1048352 )
4691d 182 0 CALL:  prolog:$phrase_list([47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131247, _1048352 )
4692d 182 0 CALL:  prolog:$phrase_list([112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131249, _1048352 )
4693d 182 0 CALL:  prolog:$phrase_list([97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131251, _1048352 )
4694d 182 0 CALL:  prolog:$phrase_list([99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131253, _1048352 )
4695d 182 0 CALL:  prolog:$phrase_list([107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131255, _1048352 )
4696d 182 0 CALL:  prolog:$phrase_list([97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131257, _1048352 )
4697d 182 0 CALL:  prolog:$phrase_list([103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131259, _1048352 )
4698d 182 0 CALL:  prolog:$phrase_list([101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131261, _1048352 )
4699d 182 0 CALL:  prolog:$phrase_list([115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131263, _1048352 )
4700d 182 0 CALL:  prolog:$phrase_list([47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131265, _1048352 )
4701d 182 0 CALL:  prolog:$phrase_list([80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131267, _1048352 )
4702d 182 0 CALL:  prolog:$phrase_list([114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131269, _1048352 )
4703d 182 0 CALL:  prolog:$phrase_list([111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131271, _1048352 )
4704d 182 0 CALL:  prolog:$phrase_list([98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131273, _1048352 )
4705d 182 0 CALL:  prolog:$phrase_list([76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131275, _1048352 )
4706d 182 0 CALL:  prolog:$phrase_list([111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131277, _1048352 )
4707d 182 0 CALL:  prolog:$phrase_list([103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131279, _1048352 )
4708d 182 0 CALL:  prolog:$phrase_list([47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131281, _1048352 )
4709d 182 0 CALL:  prolog:$phrase_list([112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131283, _1048352 )
4710d 182 0 CALL:  prolog:$phrase_list([114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131285, _1048352 )
4711d 182 0 CALL:  prolog:$phrase_list([111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131287, _1048352 )
4712d 182 0 CALL:  prolog:$phrase_list([98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131289, _1048352 )
4713d 182 0 CALL:  prolog:$phrase_list([108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131291, _1048352 )
4714d 182 0 CALL:  prolog:$phrase_list([111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131293, _1048352 )
4715d 182 0 CALL:  prolog:$phrase_list([103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131295, _1048352 )
4716d 182 0 CALL:  prolog:$phrase_list([95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131297, _1048352 )
4717d 182 0 CALL:  prolog:$phrase_list([101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131299, _1048352 )
4718d 182 0 CALL:  prolog:$phrase_list([120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131301, _1048352 )
4719d 182 0 CALL:  prolog:$phrase_list([97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131303, _1048352 )
4720d 182 0 CALL:  prolog:$phrase_list([109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131305, _1048352 )
4721d 182 0 CALL:  prolog:$phrase_list([112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131307, _1048352 )
4722d 182 0 CALL:  prolog:$phrase_list([108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131309, _1048352 )
4723d 182 0 CALL:  prolog:$phrase_list([101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131311, _1048352 )
4724d 182 0 CALL:  prolog:$phrase_list([115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131313, _1048352 )
4725d 182 0 CALL:  prolog:$phrase_list([47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131315, _1048352 )
4726d 182 0 CALL:  prolog:$phrase_list([113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131317, _1048352 )
4727d 182 0 CALL:  prolog:$phrase_list([117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131319, _1048352 )
4728d 182 0 CALL:  prolog:$phrase_list([101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131321, _1048352 )
4729d 182 0 CALL:  prolog:$phrase_list([114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131323, _1048352 )
4730d 182 0 CALL:  prolog:$phrase_list([105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131325, _1048352 )
4731d 182 0 CALL:  prolog:$phrase_list([101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131327, _1048352 )
4732d 182 0 CALL:  prolog:$phrase_list([115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131329, _1048352 )
4733d 182 0 CALL:  prolog:$phrase_list([47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131331, _1048352 )
4734d 182 0 CALL:  prolog:$phrase_list([113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131333, _1048352 )
4735d 182 0 CALL:  prolog:$phrase_list([117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131335, _1048352 )
4736d 182 0 CALL:  prolog:$phrase_list([101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131337, _1048352 )
4737d 182 0 CALL:  prolog:$phrase_list([114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131339, _1048352 )
4738d 182 0 CALL:  prolog:$phrase_list([121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131341, _1048352 )
4739d 182 0 CALL:  prolog:$phrase_list([95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131343, _1048352 )
4740d 182 0 CALL:  prolog:$phrase_list([50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131345, _1048352 )
4741d 182 0 CALL:  prolog:$phrase_list([95,107,110,111,119,110,95,118,97,108,117,101,115], _131347, _1048352 )
4742d 182 0 CALL:  prolog:$phrase_list([107,110,111,119,110,95,118,97,108,117,101,115], _131349, _1048352 )
4743d 182 0 CALL:  prolog:$phrase_list([110,111,119,110,95,118,97,108,117,101,115], _131351, _1048352 )
4744d 182 0 CALL:  prolog:$phrase_list([111,119,110,95,118,97,108,117,101,115], _131353, _1048352 )
4745d 182 0 CALL:  prolog:$phrase_list([119,110,95,118,97,108,117,101,115], _131355, _1048352 )
4746d 182 0 CALL:  prolog:$phrase_list([110,95,118,97,108,117,101,115], _131357, _1048352 )
4747d 182 0 CALL:  prolog:$phrase_list([95,118,97,108,117,101,115], _131359, _1048352 )
4748d 182 0 CALL:  prolog:$phrase_list([118,97,108,117,101,115], _131361, _1048352 )
4749d 182 0 CALL:  prolog:$phrase_list([97,108,117,101,115], _131363, _1048352 )
4750d 182 0 CALL:  prolog:$phrase_list([108,117,101,115], _131365, _1048352 )
4751d 182 0 CALL:  prolog:$phrase_list([117,101,115], _131367, _1048352 )
4752d 182 0 CALL:  prolog:$phrase_list([101,115], _131369, _1048352 )
4753d 182 0 CALL:  prolog:$phrase_list([115], _131371, _1048352 )
4754d 182 0 CALL:  prolog:$phrase_list([], _131373, _1048352 )
4755d 182 0 CALL:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], opt(exist,true,[],error,txt,'','',first,false), _131373, _1048354 )
4756d 233 0 CALL:  lists:append(_1048332, [46|_131375], [47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4757d 253 0 FAIL RETRY:  lists:append(_1048332, [46|_131375], [47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4758d 233 0 CALL:  lists:append(_131377, [46|_131375], [104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4759d 253 0 FAIL RETRY:  lists:append(_131377, [46|_131375], [104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4760d 233 0 CALL:  lists:append(_131379, [46|_131375], [111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4761d 253 0 FAIL RETRY:  lists:append(_131379, [46|_131375], [111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4762d 233 0 CALL:  lists:append(_131381, [46|_131375], [109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4763d 253 0 FAIL RETRY:  lists:append(_131381, [46|_131375], [109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4764d 233 0 CALL:  lists:append(_131383, [46|_131375], [101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4765d 253 0 FAIL RETRY:  lists:append(_131383, [46|_131375], [101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4766d 233 0 CALL:  lists:append(_131385, [46|_131375], [47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4767d 253 0 FAIL RETRY:  lists:append(_131385, [46|_131375], [47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4768d 233 0 CALL:  lists:append(_131387, [46|_131375], [118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4769d 253 0 FAIL RETRY:  lists:append(_131387, [46|_131375], [118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4770d 233 0 CALL:  lists:append(_131389, [46|_131375], [115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4771d 253 0 FAIL RETRY:  lists:append(_131389, [46|_131375], [115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4772d 233 0 CALL:  lists:append(_131391, [46|_131375], [99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4773d 253 0 FAIL RETRY:  lists:append(_131391, [46|_131375], [99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4774d 233 0 CALL:  lists:append(_131393, [46|_131375], [47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4775d 253 0 FAIL RETRY:  lists:append(_131393, [46|_131375], [47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4776d 233 0 CALL:  lists:append(_131395, [46|_131375], [103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4777d 253 0 FAIL RETRY:  lists:append(_131395, [46|_131375], [103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4778d 233 0 CALL:  lists:append(_131397, [46|_131375], [105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4779d 253 0 FAIL RETRY:  lists:append(_131397, [46|_131375], [105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4780d 233 0 CALL:  lists:append(_131399, [46|_131375], [116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4781d 253 0 FAIL RETRY:  lists:append(_131399, [46|_131375], [116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4782d 233 0 CALL:  lists:append(_131401, [46|_131375], [104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4783d 253 0 FAIL RETRY:  lists:append(_131401, [46|_131375], [104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4784d 233 0 CALL:  lists:append(_131403, [46|_131375], [117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4785d 253 0 FAIL RETRY:  lists:append(_131403, [46|_131375], [117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4786d 233 0 CALL:  lists:append(_131405, [46|_131375], [98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4787d 253 0 FAIL RETRY:  lists:append(_131405, [46|_131375], [98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4788d 233 0 CALL:  lists:append(_131407, [46|_131375], [47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4789d 253 0 FAIL RETRY:  lists:append(_131407, [46|_131375], [47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4790d 233 0 CALL:  lists:append(_131409, [46|_131375], [121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4791d 253 0 FAIL RETRY:  lists:append(_131409, [46|_131375], [121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4792d 233 0 CALL:  lists:append(_131411, [46|_131375], [97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4793d 253 0 FAIL RETRY:  lists:append(_131411, [46|_131375], [97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4794d 233 0 CALL:  lists:append(_131413, [46|_131375], [112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4795d 253 0 FAIL RETRY:  lists:append(_131413, [46|_131375], [112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4796d 233 0 CALL:  lists:append(_131415, [46|_131375], [45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4797d 253 0 FAIL RETRY:  lists:append(_131415, [46|_131375], [45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4798d 233 0 CALL:  lists:append(_131417, [46|_131375], [54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4799d 253 0 FAIL RETRY:  lists:append(_131417, [46|_131375], [54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4800d 233 0 CALL:  lists:append(_131419, [46|_131375], [46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4801d 253 0 CALL:  prolog:$id([51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _1048333, [] )
4802d 253 0 CALL:  prolog:C(_1048333, 51, _1048315 )
4803d 253 0 TRY_OR 
4804d 270 0 CALL:  prolog:>=(51, 97 )
4806d 270 0 CALL:  prolog:>=(51, 65 )
4808d 270 0 CALL:  prolog:>=(51, 48 )
4809d 270 0 CALL:  prolog:=<(51, 57 )
4810d 253 0 CALL:  prolog:$id([47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131421, [] )
4811d 253 0 CALL:  prolog:C(_131421, 47, _1048315 )
4812d 253 0 TRY_OR 
4813d 270 0 CALL:  prolog:>=(47, 97 )
4815d 270 0 CALL:  prolog:>=(47, 65 )
4817d 270 0 CALL:  prolog:>=(47, 48 )
4819d 253 0 CALL:  prolog:=:=(47, 95 )
4820d 253 0 FAIL RETRY:  lists:append(_131419, [46|_131375], [46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4821d 233 0 CALL:  lists:append(_131421, [46|_131375], [51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4822d 253 0 FAIL RETRY:  lists:append(_131421, [46|_131375], [51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4823d 233 0 CALL:  lists:append(_131423, [46|_131375], [47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4824d 253 0 FAIL RETRY:  lists:append(_131423, [46|_131375], [47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4825d 233 0 CALL:  lists:append(_131425, [46|_131375], [112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4826d 253 0 FAIL RETRY:  lists:append(_131425, [46|_131375], [112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4827d 233 0 CALL:  lists:append(_131427, [46|_131375], [97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4828d 253 0 FAIL RETRY:  lists:append(_131427, [46|_131375], [97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4829d 233 0 CALL:  lists:append(_131429, [46|_131375], [99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4830d 253 0 FAIL RETRY:  lists:append(_131429, [46|_131375], [99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4831d 233 0 CALL:  lists:append(_131431, [46|_131375], [107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4832d 253 0 FAIL RETRY:  lists:append(_131431, [46|_131375], [107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4833d 233 0 CALL:  lists:append(_131433, [46|_131375], [97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4834d 253 0 FAIL RETRY:  lists:append(_131433, [46|_131375], [97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4835d 233 0 CALL:  lists:append(_131435, [46|_131375], [103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4836d 253 0 FAIL RETRY:  lists:append(_131435, [46|_131375], [103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4837d 233 0 CALL:  lists:append(_131437, [46|_131375], [101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4838d 253 0 FAIL RETRY:  lists:append(_131437, [46|_131375], [101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4839d 233 0 CALL:  lists:append(_131439, [46|_131375], [115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4840d 253 0 FAIL RETRY:  lists:append(_131439, [46|_131375], [115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4841d 233 0 CALL:  lists:append(_131441, [46|_131375], [47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4842d 253 0 FAIL RETRY:  lists:append(_131441, [46|_131375], [47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4843d 233 0 CALL:  lists:append(_131443, [46|_131375], [80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4844d 253 0 FAIL RETRY:  lists:append(_131443, [46|_131375], [80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4845d 233 0 CALL:  lists:append(_131445, [46|_131375], [114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4846d 253 0 FAIL RETRY:  lists:append(_131445, [46|_131375], [114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4847d 233 0 CALL:  lists:append(_131447, [46|_131375], [111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4848d 253 0 FAIL RETRY:  lists:append(_131447, [46|_131375], [111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4849d 233 0 CALL:  lists:append(_131449, [46|_131375], [98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4850d 253 0 FAIL RETRY:  lists:append(_131449, [46|_131375], [98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4851d 233 0 CALL:  lists:append(_131451, [46|_131375], [76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4852d 253 0 FAIL RETRY:  lists:append(_131451, [46|_131375], [76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4853d 233 0 CALL:  lists:append(_131453, [46|_131375], [111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4854d 253 0 FAIL RETRY:  lists:append(_131453, [46|_131375], [111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4855d 233 0 CALL:  lists:append(_131455, [46|_131375], [103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4856d 253 0 FAIL RETRY:  lists:append(_131455, [46|_131375], [103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4857d 233 0 CALL:  lists:append(_131457, [46|_131375], [47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4858d 253 0 FAIL RETRY:  lists:append(_131457, [46|_131375], [47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4859d 233 0 CALL:  lists:append(_131459, [46|_131375], [112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4860d 253 0 FAIL RETRY:  lists:append(_131459, [46|_131375], [112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4861d 233 0 CALL:  lists:append(_131461, [46|_131375], [114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4862d 253 0 FAIL RETRY:  lists:append(_131461, [46|_131375], [114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4863d 233 0 CALL:  lists:append(_131463, [46|_131375], [111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4864d 253 0 FAIL RETRY:  lists:append(_131463, [46|_131375], [111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4865d 233 0 CALL:  lists:append(_131465, [46|_131375], [98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4866d 253 0 FAIL RETRY:  lists:append(_131465, [46|_131375], [98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4867d 233 0 CALL:  lists:append(_131467, [46|_131375], [108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4868d 253 0 FAIL RETRY:  lists:append(_131467, [46|_131375], [108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4869d 233 0 CALL:  lists:append(_131469, [46|_131375], [111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4870d 253 0 FAIL RETRY:  lists:append(_131469, [46|_131375], [111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4871d 233 0 CALL:  lists:append(_131471, [46|_131375], [103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4872d 253 0 FAIL RETRY:  lists:append(_131471, [46|_131375], [103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4873d 233 0 CALL:  lists:append(_131473, [46|_131375], [95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4874d 253 0 FAIL RETRY:  lists:append(_131473, [46|_131375], [95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4875d 233 0 CALL:  lists:append(_131475, [46|_131375], [101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4876d 253 0 FAIL RETRY:  lists:append(_131475, [46|_131375], [101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4877d 233 0 CALL:  lists:append(_131477, [46|_131375], [120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4878d 253 0 FAIL RETRY:  lists:append(_131477, [46|_131375], [120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4879d 233 0 CALL:  lists:append(_131479, [46|_131375], [97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4880d 253 0 FAIL RETRY:  lists:append(_131479, [46|_131375], [97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4881d 233 0 CALL:  lists:append(_131481, [46|_131375], [109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4882d 253 0 FAIL RETRY:  lists:append(_131481, [46|_131375], [109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4883d 233 0 CALL:  lists:append(_131483, [46|_131375], [112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4884d 253 0 FAIL RETRY:  lists:append(_131483, [46|_131375], [112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4885d 233 0 CALL:  lists:append(_131485, [46|_131375], [108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4886d 253 0 FAIL RETRY:  lists:append(_131485, [46|_131375], [108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4887d 233 0 CALL:  lists:append(_131487, [46|_131375], [101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4888d 253 0 FAIL RETRY:  lists:append(_131487, [46|_131375], [101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4889d 233 0 CALL:  lists:append(_131489, [46|_131375], [115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4890d 253 0 FAIL RETRY:  lists:append(_131489, [46|_131375], [115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4891d 233 0 CALL:  lists:append(_131491, [46|_131375], [47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4892d 253 0 FAIL RETRY:  lists:append(_131491, [46|_131375], [47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4893d 233 0 CALL:  lists:append(_131493, [46|_131375], [113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4894d 253 0 FAIL RETRY:  lists:append(_131493, [46|_131375], [113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4895d 233 0 CALL:  lists:append(_131495, [46|_131375], [117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4896d 253 0 FAIL RETRY:  lists:append(_131495, [46|_131375], [117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4897d 233 0 CALL:  lists:append(_131497, [46|_131375], [101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4898d 253 0 FAIL RETRY:  lists:append(_131497, [46|_131375], [101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4899d 233 0 CALL:  lists:append(_131499, [46|_131375], [114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4900d 253 0 FAIL RETRY:  lists:append(_131499, [46|_131375], [114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4901d 233 0 CALL:  lists:append(_131501, [46|_131375], [105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4902d 253 0 FAIL RETRY:  lists:append(_131501, [46|_131375], [105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4903d 233 0 CALL:  lists:append(_131503, [46|_131375], [101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4904d 253 0 FAIL RETRY:  lists:append(_131503, [46|_131375], [101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4905d 233 0 CALL:  lists:append(_131505, [46|_131375], [115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4906d 253 0 FAIL RETRY:  lists:append(_131505, [46|_131375], [115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4907d 233 0 CALL:  lists:append(_131507, [46|_131375], [47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4908d 253 0 FAIL RETRY:  lists:append(_131507, [46|_131375], [47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4909d 233 0 CALL:  lists:append(_131509, [46|_131375], [113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4910d 253 0 FAIL RETRY:  lists:append(_131509, [46|_131375], [113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4911d 233 0 CALL:  lists:append(_131511, [46|_131375], [117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4912d 253 0 FAIL RETRY:  lists:append(_131511, [46|_131375], [117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4913d 233 0 CALL:  lists:append(_131513, [46|_131375], [101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4914d 253 0 FAIL RETRY:  lists:append(_131513, [46|_131375], [101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4915d 233 0 CALL:  lists:append(_131515, [46|_131375], [114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4916d 253 0 FAIL RETRY:  lists:append(_131515, [46|_131375], [114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4917d 233 0 CALL:  lists:append(_131517, [46|_131375], [121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4918d 253 0 FAIL RETRY:  lists:append(_131517, [46|_131375], [121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4919d 233 0 CALL:  lists:append(_131519, [46|_131375], [95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4920d 253 0 FAIL RETRY:  lists:append(_131519, [46|_131375], [95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4921d 233 0 CALL:  lists:append(_131521, [46|_131375], [50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4922d 253 0 FAIL RETRY:  lists:append(_131521, [46|_131375], [50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4923d 233 0 CALL:  lists:append(_131523, [46|_131375], [95,107,110,111,119,110,95,118,97,108,117,101,115] )
4924d 253 0 FAIL RETRY:  lists:append(_131523, [46|_131375], [95,107,110,111,119,110,95,118,97,108,117,101,115] )
4925d 233 0 CALL:  lists:append(_131525, [46|_131375], [107,110,111,119,110,95,118,97,108,117,101,115] )
4926d 253 0 FAIL RETRY:  lists:append(_131525, [46|_131375], [107,110,111,119,110,95,118,97,108,117,101,115] )
4927d 233 0 CALL:  lists:append(_131527, [46|_131375], [110,111,119,110,95,118,97,108,117,101,115] )
4928d 253 0 FAIL RETRY:  lists:append(_131527, [46|_131375], [110,111,119,110,95,118,97,108,117,101,115] )
4929d 233 0 CALL:  lists:append(_131529, [46|_131375], [111,119,110,95,118,97,108,117,101,115] )
4930d 253 0 FAIL RETRY:  lists:append(_131529, [46|_131375], [111,119,110,95,118,97,108,117,101,115] )
4931d 233 0 CALL:  lists:append(_131531, [46|_131375], [119,110,95,118,97,108,117,101,115] )
4932d 253 0 FAIL RETRY:  lists:append(_131531, [46|_131375], [119,110,95,118,97,108,117,101,115] )
4933d 233 0 CALL:  lists:append(_131533, [46|_131375], [110,95,118,97,108,117,101,115] )
4934d 253 0 FAIL RETRY:  lists:append(_131533, [46|_131375], [110,95,118,97,108,117,101,115] )
4935d 233 0 CALL:  lists:append(_131535, [46|_131375], [95,118,97,108,117,101,115] )
4936d 253 0 FAIL RETRY:  lists:append(_131535, [46|_131375], [95,118,97,108,117,101,115] )
4937d 233 0 CALL:  lists:append(_131537, [46|_131375], [118,97,108,117,101,115] )
4938d 253 0 FAIL RETRY:  lists:append(_131537, [46|_131375], [118,97,108,117,101,115] )
4939d 233 0 CALL:  lists:append(_131539, [46|_131375], [97,108,117,101,115] )
4940d 253 0 FAIL RETRY:  lists:append(_131539, [46|_131375], [97,108,117,101,115] )
4941d 233 0 CALL:  lists:append(_131541, [46|_131375], [108,117,101,115] )
4942d 253 0 FAIL RETRY:  lists:append(_131541, [46|_131375], [108,117,101,115] )
4943d 233 0 CALL:  lists:append(_131543, [46|_131375], [117,101,115] )
4944d 253 0 FAIL RETRY:  lists:append(_131543, [46|_131375], [117,101,115] )
4945d 233 0 CALL:  lists:append(_131545, [46|_131375], [101,115] )
4946d 253 0 FAIL RETRY:  lists:append(_131545, [46|_131375], [101,115] )
4947d 233 0 CALL:  lists:append(_131547, [46|_131375], [115] )
4948d 253 0 FAIL RETRY:  lists:append(_131547, [46|_131375], [115] )
4949d 233 0 CALL:  lists:append(_131549, [46|_131375], [] )
4950d 253 0 FAIL RETRY:  lists:append(_131549, [46|_131375], [] )
4951d 233 0 FAIL RETRY:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], opt(exist,true,[],error,txt,'','',first,false), _131373, _1048354 )
4952d 233 0 TRY_OR 
4953d 255 0 CALL:  prolog:get_abs_file_parameter(extensions, opt(exist,true,[],error,txt,'','',first,false), _1048328 )
4954d 255 0 CALL:  prolog:\=([], [] )
4956d 233 0 CALL:  prolog:get_abs_file_parameter(file_type, opt(exist,true,[],error,txt,'','',first,false), _131374 )
4957d 233 0 TRY_OR 
4958d 253 0 CALL:  prolog:==(txt, source )
4960d 233 0 CALL:  user:prolog_file_type(_1048333, txt )
4961d 233 0 FAIL RETRY:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], opt(exist,true,[],error,txt,'','',first,false), _131373, _1048354 )
4962d 182 0 CALL:  prolog:$absf_trace(' try no suffix', [], _131373, _1048354 )
4963d 233 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
4964d 233 0 FAIL RETRY:  prolog:$absf_trace(' try no suffix', [], _131373, _1048354 )
4965d 182 0 CALL:  prolog:$glob(opt(exist,true,[],error,txt,'','',first,false), _131373, [] )
4966d 224 0 CALL:  prolog:get_abs_file_parameter(glob, opt(exist,true,[],error,txt,'','',first,false), _131374 )
4967d 224 0 CALL:  prolog:\=('', '' )
4968d 224 0 FAIL RETRY:  prolog:$glob(opt(exist,true,[],error,txt,'','',first,false), _131373, [] )
4969d 182 0 CALL:  prolog:$absf_trace('  after name/library unfolding: ~w', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'] )
4970d 222 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
4971d 222 0 FAIL RETRY:  prolog:$absf_trace('  after name/library unfolding: ~w', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'] )
4972d 182 0 CALL:  prolog:$variable_expansion([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], opt(exist,true,[],error,txt,'','',first,false), _1048363 )
4973d 222 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), true )
4974d 182 0 CALL:  prolog:$expand_file_name([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _1048363 )
4975d 182 0 CALL:  prolog:$absf_trace('   after environment variable expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115]] )
4976d 221 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
4977d 221 0 FAIL RETRY:  prolog:$absf_trace('   after environment variable expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115]] )
4978d 182 0 CALL:  prolog:$prefix([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], opt(exist,true,[],error,txt,'','',first,false), _1048365, [] )
4979d 221 0 CALL:  prolog:is_absolute_file_name([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
4980d 182 0 CALL:  prolog:phrase([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _1048365, [] )
4981d 182 0 CALL:  prolog:$phrase_list([104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131553, [] )
4982d 182 0 CALL:  prolog:$phrase_list([111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131555, [] )
4983d 182 0 CALL:  prolog:$phrase_list([109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131557, [] )
4984d 182 0 CALL:  prolog:$phrase_list([101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131559, [] )
4985d 182 0 CALL:  prolog:$phrase_list([47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131561, [] )
4986d 182 0 CALL:  prolog:$phrase_list([118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131563, [] )
4987d 182 0 CALL:  prolog:$phrase_list([115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131565, [] )
4988d 182 0 CALL:  prolog:$phrase_list([99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131567, [] )
4989d 182 0 CALL:  prolog:$phrase_list([47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131569, [] )
4990d 182 0 CALL:  prolog:$phrase_list([103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131571, [] )
4991d 182 0 CALL:  prolog:$phrase_list([105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131573, [] )
4992d 182 0 CALL:  prolog:$phrase_list([116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131575, [] )
4993d 182 0 CALL:  prolog:$phrase_list([104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131577, [] )
4994d 182 0 CALL:  prolog:$phrase_list([117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131579, [] )
4995d 182 0 CALL:  prolog:$phrase_list([98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131581, [] )
4996d 182 0 CALL:  prolog:$phrase_list([47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131583, [] )
4997d 182 0 CALL:  prolog:$phrase_list([121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131585, [] )
4998d 182 0 CALL:  prolog:$phrase_list([97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131587, [] )
4999d 182 0 CALL:  prolog:$phrase_list([112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131589, [] )
5000d 182 0 CALL:  prolog:$phrase_list([45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131591, [] )
5001d 182 0 CALL:  prolog:$phrase_list([54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131593, [] )
5002d 182 0 CALL:  prolog:$phrase_list([46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131595, [] )
5003d 182 0 CALL:  prolog:$phrase_list([51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131597, [] )
5004d 182 0 CALL:  prolog:$phrase_list([47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131599, [] )
5005d 182 0 CALL:  prolog:$phrase_list([112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131601, [] )
5006d 182 0 CALL:  prolog:$phrase_list([97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131603, [] )
5007d 182 0 CALL:  prolog:$phrase_list([99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131605, [] )
5008d 182 0 CALL:  prolog:$phrase_list([107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131607, [] )
5009d 182 0 CALL:  prolog:$phrase_list([97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131609, [] )
5010d 182 0 CALL:  prolog:$phrase_list([103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131611, [] )
5011d 182 0 CALL:  prolog:$phrase_list([101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131613, [] )
5012d 182 0 CALL:  prolog:$phrase_list([115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131615, [] )
5013d 182 0 CALL:  prolog:$phrase_list([47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131617, [] )
5014d 182 0 CALL:  prolog:$phrase_list([80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131619, [] )
5015d 182 0 CALL:  prolog:$phrase_list([114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131621, [] )
5016d 182 0 CALL:  prolog:$phrase_list([111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131623, [] )
5017d 182 0 CALL:  prolog:$phrase_list([98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131625, [] )
5018d 182 0 CALL:  prolog:$phrase_list([76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131627, [] )
5019d 182 0 CALL:  prolog:$phrase_list([111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131629, [] )
5020d 182 0 CALL:  prolog:$phrase_list([103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131631, [] )
5021d 182 0 CALL:  prolog:$phrase_list([47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131633, [] )
5022d 182 0 CALL:  prolog:$phrase_list([112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131635, [] )
5023d 182 0 CALL:  prolog:$phrase_list([114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131637, [] )
5024d 182 0 CALL:  prolog:$phrase_list([111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131639, [] )
5025d 182 0 CALL:  prolog:$phrase_list([98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131641, [] )
5026d 182 0 CALL:  prolog:$phrase_list([108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131643, [] )
5027d 182 0 CALL:  prolog:$phrase_list([111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131645, [] )
5028d 182 0 CALL:  prolog:$phrase_list([103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131647, [] )
5029d 182 0 CALL:  prolog:$phrase_list([95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131649, [] )
5030d 182 0 CALL:  prolog:$phrase_list([101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131651, [] )
5031d 182 0 CALL:  prolog:$phrase_list([120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131653, [] )
5032d 182 0 CALL:  prolog:$phrase_list([97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131655, [] )
5033d 182 0 CALL:  prolog:$phrase_list([109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131657, [] )
5034d 182 0 CALL:  prolog:$phrase_list([112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131659, [] )
5035d 182 0 CALL:  prolog:$phrase_list([108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131661, [] )
5036d 182 0 CALL:  prolog:$phrase_list([101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131663, [] )
5037d 182 0 CALL:  prolog:$phrase_list([115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131665, [] )
5038d 182 0 CALL:  prolog:$phrase_list([47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131667, [] )
5039d 182 0 CALL:  prolog:$phrase_list([113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131669, [] )
5040d 182 0 CALL:  prolog:$phrase_list([117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131671, [] )
5041d 182 0 CALL:  prolog:$phrase_list([101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131673, [] )
5042d 182 0 CALL:  prolog:$phrase_list([114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131675, [] )
5043d 182 0 CALL:  prolog:$phrase_list([105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131677, [] )
5044d 182 0 CALL:  prolog:$phrase_list([101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131679, [] )
5045d 182 0 CALL:  prolog:$phrase_list([115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131681, [] )
5046d 182 0 CALL:  prolog:$phrase_list([47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131683, [] )
5047d 182 0 CALL:  prolog:$phrase_list([113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131685, [] )
5048d 182 0 CALL:  prolog:$phrase_list([117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131687, [] )
5049d 182 0 CALL:  prolog:$phrase_list([101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131689, [] )
5050d 182 0 CALL:  prolog:$phrase_list([114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131691, [] )
5051d 182 0 CALL:  prolog:$phrase_list([121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131693, [] )
5052d 182 0 CALL:  prolog:$phrase_list([95,50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131695, [] )
5053d 182 0 CALL:  prolog:$phrase_list([50,95,107,110,111,119,110,95,118,97,108,117,101,115], _131697, [] )
5054d 182 0 CALL:  prolog:$phrase_list([95,107,110,111,119,110,95,118,97,108,117,101,115], _131699, [] )
5055d 182 0 CALL:  prolog:$phrase_list([107,110,111,119,110,95,118,97,108,117,101,115], _131701, [] )
5056d 182 0 CALL:  prolog:$phrase_list([110,111,119,110,95,118,97,108,117,101,115], _131703, [] )
5057d 182 0 CALL:  prolog:$phrase_list([111,119,110,95,118,97,108,117,101,115], _131705, [] )
5058d 182 0 CALL:  prolog:$phrase_list([119,110,95,118,97,108,117,101,115], _131707, [] )
5059d 182 0 CALL:  prolog:$phrase_list([110,95,118,97,108,117,101,115], _131709, [] )
5060d 182 0 CALL:  prolog:$phrase_list([95,118,97,108,117,101,115], _131711, [] )
5061d 182 0 CALL:  prolog:$phrase_list([118,97,108,117,101,115], _131713, [] )
5062d 182 0 CALL:  prolog:$phrase_list([97,108,117,101,115], _131715, [] )
5063d 182 0 CALL:  prolog:$phrase_list([108,117,101,115], _131717, [] )
5064d 182 0 CALL:  prolog:$phrase_list([117,101,115], _131719, [] )
5065d 182 0 CALL:  prolog:$phrase_list([101,115], _131721, [] )
5066d 182 0 CALL:  prolog:$phrase_list([115], _131723, [] )
5067d 182 0 CALL:  prolog:$phrase_list([], _131725, [] )
5068d 182 0 CALL:  prolog:$absf_trace('    after prefix expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115]] )
5069d 219 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
5070d 219 0 FAIL RETRY:  prolog:$absf_trace('    after prefix expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115]] )
5071d 182 0 CALL:  prolog:atom_codes(_1048368, [47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,113,117,101,114,105,101,115,47,113,117,101,114,121,95,50,95,107,110,111,119,110,95,118,97,108,117,101,115] )
5072d 182 0 TRY_OR 
5073d 182 0 CALL:  prolog:expand_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', _1048367 )
5074d 182 0 CALL:  prolog:$absf_trace('     after shell globbing: ~w', [['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values']] )
5075d 217 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
5076d 217 0 FAIL RETRY:  prolog:$absf_trace('     after shell globbing: ~w', [['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values']] )
5077d 182 0 CALL:  lists:member(_1048369, ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'] )
5078d 216 0 CALL:  prolog:real_path('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', _130945 )
5079d 216 0 CALL:  prolog:$absf_trace('      after canonical path name: ~a', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'] )
5080d 225 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
5081d 225 0 FAIL RETRY:  prolog:$absf_trace('      after canonical path name: ~a', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'] )
5082d 216 0 CALL:  prolog:$check_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', txt, exist )
5083d 226 0 FAIL RETRY:  prolog:$check_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', txt, exist )
5084d 226 0 FAIL RETRY:  prolog:$check_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', txt, exist )
5085d 226 0 CALL:  prolog:$access_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', exist )
5086d 226 0 FAIL RETRY:  prolog:$check_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', txt, exist )
5087d 216 0 CALL:  prolog:$access_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', exist )
5088d 216 0 FAIL RETRY:  lists:member(_1048369, ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values'] )
5089d 182 0 CALL:  lists:member(_1048369, [] )
5090d 233 0 CALL:  prolog:$absf_trace(' !------- failed.', [] )
5091d 257 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
5092d 257 0 FAIL RETRY:  prolog:$absf_trace(' !------- failed.', [] )
5093d 233 0 CALL:  prolog:set_prolog_flag(fileerrors, true )
5094d 233 0 CALL:  prolog:set_prolog_flag(verbose_file_search, false )
5095d 233 0 CALL:  prolog:set_prolog_flag(file_name_variables, false )
5096d 233 0 CALL:  prolog:arg(1, t(no), _131734 )
5098d 182 0 FAIL RETRY:  problog_lfi:init_one_query(2, training )
5099d 173 0 CALL:  prolog:$current_choice_point(_1048396 )
5100d 173 0 CALL:  completion:propagate_evidence(2, training )
5101d 188 0 TRY_OR 
5102d 203 0 CALL:  prolog:$current_choice_point(_1048380 )
5103d 203 0 CALL:  prolog:current_predicate(user:known/3 )
5104d 203 0 CALL:  prolog:$yap_strip_module(user:known/3, _1048366, _1048365 )
5105d 203 0 CALL:  prolog:must_bind_to_type(predicate_indicator, known/3 )
5106d 203 0 TRY_OR 
5107d 226 0 CALL:  error:may_bind_to_type(predicate_indicator, known/3 )
5108d 235 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, known/3 )
5109d 226 0 TRY_OR 
5111d 226 0 CALL:  error:may_bind_to_type(atom, known )
5112d 243 0 FAIL RETRY:  error:may_bind_to_type(atom, known )
5113d 226 0 CALL:  error:may_bind_to_type(integer, 3 )
5114d 235 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
5115d 203 0 CALL:  prolog:$c_i_predicate(known/3, user )
5116d 203 0 TRY_OR 
5117d 220 0 CALL:  prolog:ground(known/3 )
5118d 203 0 CALL:  prolog:functor(_130935, known, 3 )
5119d 203 0 CALL:  prolog:current_predicate(known, user:known(_130936,_130937,_130938) )
5120d 203 0 CALL:  prolog:$yap_strip_module(user:known(_130936,_130937,_130938), _1048362, _1048361 )
5121d 203 0 CALL:  prolog:functor(known(_130936,_130937,_130938), known, _1048360 )
5122d 203 0 TRY_OR 
5123d 222 0 CALL:  prolog:$current_predicate(known, user, known(_130936,_130937,_130938), user )
5124d 188 0 FAIL RETRY:  completion:propagate_evidence(2, training )
5125d 173 0 CALL:  prolog:eraseall(rules )
5126d 173 0 CALL:  prolog:eraseall(unpropagated_rules )
5127d 173 0 CALL:  prolog:eraseall(known_atoms )
5128d 173 0 CALL:  grounder:grounder_reset
5129d 173 0 CALL:  prolog:eraseall(reachable )
5130d 173 0 TRY_OR 
5131d 218 0 CALL:  prolog:==(training, test )
5133d 173 0 CALL:  logger:logger_start_timer(train_bdd_script_generation )
5134d 173 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation, _1048356 )
5135d 173 0 TRY_OR 
5136d 228 0 CALL:  prolog:bb_get(logger:logger_start_time_train_bdd_script_generation, null )
5137d 173 0 CALL:  prolog:statistics(walltime, [_130939,_130941] )
5138d 173 0 CALL:  prolog:$walltime(_130939, _130941 )
5139d 173 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation, 341924 )
5140d 173 0 CALL:  logger:logger_start_timer(train_bdd_script_generation_grounding )
5141d 173 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_grounding, _1048356 )
5142d 173 0 TRY_OR 
5143d 228 0 CALL:  prolog:bb_get(logger:logger_start_time_train_bdd_script_generation_grounding, null )
5144d 173 0 CALL:  prolog:statistics(walltime, [_130949,_130951] )
5145d 173 0 CALL:  prolog:$walltime(_130949, _130951 )
5146d 173 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_grounding, 341960 )
5147d 173 0 CALL:  print_learning:format_learning(5, d, [] )
5148d 220 0 CALL:  flags:problog_flag(verbosity_learning, _1048346 )
5149d 220 0 CALL:  gflags:flag_get(verbosity_learning, _1048346 )
5150d 220 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_130958), _130959 )
5151d 220 0 CALL:  prolog:>=(5, 5 )
5152d 173 0 CALL:  prolog:format(d, print_learning:[] )
5153d 173 0 CALL:  prolog:flush_output(user )
d5154d 173 0 TRY_OR 
5155d 218 0 CALL:  user:known(2, _1048369, _1048367 )
5156d 228 0 TRY_OR 
5157d 236 0 CALL:  prolog:catch(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _1048365, completion:fail )
5158d 236 0 CALL:  prolog:$catch(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _1048365, completion:fail )
5159d 246 0 CALL:  prolog:$execute(completion:grounder_compute_reachable_atoms(earthquake,2,_130969) )
5160d 246 0 CALL:  prolog:$call(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), 246, completion:grounder_compute_reachable_atoms(earthquake,2,_130969), user )
5161d 263 0 FAIL RETRY:  prolog:$call(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), 246, completion:grounder_compute_reachable_atoms(earthquake,2,_130969), user )
5162d 246 0 CALL:  prolog:$call(grounder_compute_reachable_atoms(earthquake,2,_130969), 246, completion:grounder_compute_reachable_atoms(earthquake,2,_130969), completion )
5163d 274 0 FAIL RETRY:  prolog:$call(grounder_compute_reachable_atoms(earthquake,2,_130969), 246, completion:grounder_compute_reachable_atoms(earthquake,2,_130969), completion )
5164d 246 0 CALL:  prolog:$execute0(grounder_compute_reachable_atoms(earthquake,2,_130969), completion )
5165d 246 0 CALL:  completion:grounder_compute_reachable_atoms(earthquake, 2, _130969 )
5166d 246 0 CALL:  prolog:$undefp([completion|grounder_compute_reachable_atoms(earthquake,2,_130969)], error )
5167d 246 0 CALL:  prolog:yap_flag(unknown, error, fail )
5168d 246 0 CALL:  prolog:$stop_creeping(_1048299 )
5169d 246 0 TRY_OR 
5170d 287 0 CALL:  prolog:$undefp_search(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _130983:_130984 )
5171d 296 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_130986,_130987,_130988,_130989), user )
5172d 296 0 FAIL RETRY:  prolog:$undefp_search(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _130983:_130984 )
5173d 287 0 CALL:  prolog:expand_goal(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _130983:_130984 )
5174d 287 0 CALL:  prolog:$expand_meta_call(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), [], _130983:_130984 )
5175d 287 0 CALL:  prolog:source_module(_130985 )
5176d 287 0 CALL:  prolog:$yap_strip_module(user:completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _1048279, _130989 )
5177d 287 0 CALL:  prolog:$expand_goals(grounder_compute_reachable_atoms(earthquake,2,_130969), _1048278, _1048280, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(earthquake,2,_130969)) )
5178d 311 0 FAIL RETRY:  prolog:$expand_goals(grounder_compute_reachable_atoms(earthquake,2,_130969), _1048278, _1048280, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(earthquake,2,_130969)) )
5179d 311 0 FAIL RETRY:  prolog:$expand_goals(grounder_compute_reachable_atoms(earthquake,2,_130969), _1048278, _1048280, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(earthquake,2,_130969)) )
5180d 311 0 FAIL RETRY:  prolog:$expand_goals(grounder_compute_reachable_atoms(earthquake,2,_130969), _1048278, _1048280, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(earthquake,2,_130969)) )
5181d 287 0 CALL:  prolog:$yap_strip_module(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _130996, _130997 )
5182d 287 0 CALL:  prolog:$expand_goal(grounder_compute_reachable_atoms(earthquake,2,_130969), _1048278, _1048280, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(earthquake,2,_130969)) )
5183d 287 0 CALL:  prolog:$yap_strip_module(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _131001, _131002 )
5184d 287 0 CALL:  prolog:$user_expansion(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _131007:_131008 )
5185d 321 0 CALL:  prolog:_user_expand_goal(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _131010:_131011 )
5189d 321 0 FAIL RETRY:  prolog:$user_expansion(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _131007:_131008 )
5190d 287 0 CALL:  prolog:$import_expansion(completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _131010:_131011 )
5191d 320 0 CALL:  prolog:$imported_predicate(grounder_compute_reachable_atoms(earthquake,2,_130969), completion, _131011, _131010 )
5192d 336 0 CALL:  prolog:$is_system_predicate(grounder_compute_reachable_atoms(earthquake,2,_130969), prolog )
5193d 336 0 FAIL RETRY:  prolog:$imported_predicate(grounder_compute_reachable_atoms(earthquake,2,_130969), completion, _131011, _131010 )
5194d 320 0 CALL:  prolog:$undefined(grounder_compute_reachable_atoms(earthquake,2,_130969), completion )
5195d 320 0 CALL:  prolog:$get_undefined_predicates(grounder_compute_reachable_atoms(earthquake,2,_130969), completion, _131011, _131010 )
5196d 343 0 CALL:  prolog:recorded('$import', '$import'(_131013,completion,_131015,grounder_compute_reachable_atoms(earthquake,2,_130969),_131017,_131018), _1048222 )
5197d 343 0 CALL:  prolog:$continue_imported(_131010, grounder, _131011, grounder_compute_reachable_atoms(earthquake,2,_130969) )
5198d 354 0 CALL:  prolog:$pred_exists(grounder_compute_reachable_atoms(earthquake,2,_130969), grounder )
5199d 343 0 CALL:  prolog:\=(grounder, completion )
5200d 287 0 CALL:  prolog:$meta_expansion(grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), completion, [], _1048267 )
5201d 319 0 CALL:  prolog:$yap_strip_module(grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), _131035, _1048246 )
5202d 319 0 CALL:  prolog:functor(grounder_compute_reachable_atoms(earthquake,2,_130969), _131038, _131039 )
5203d 319 0 CALL:  prolog:$meta_predicate(grounder_compute_reachable_atoms, grounder, 3, _1048247 )
5204d 319 0 FAIL RETRY:  prolog:$meta_expansion(grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), completion, [], _1048267 )
5205d 287 0 CALL:  prolog:$yap_strip_module(grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), _131035, _131036 )
5206d 287 0 CALL:  prolog:$yap_strip_module(grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), _131037, _131038 )
5207d 287 0 CALL:  prolog:$end_goal_expansion(grounder_compute_reachable_atoms(earthquake,2,_130969), _1048278, _1048280, completion, user, grounder, completion:grounder_compute_reachable_atoms(earthquake,2,_130969) )
5208d 287 0 CALL:  prolog:$match_mod(grounder_compute_reachable_atoms(earthquake,2,_130969), completion, user, grounder, _1048278 )
5209d 287 0 CALL:  prolog:$is_system_predicate(grounder_compute_reachable_atoms(earthquake,2,_130969), grounder )
5210d 287 0 TRY_OR 
5211d 325 0 CALL:  prolog:==(grounder, completion )
5213d 287 0 CALL:  prolog:$c_built_in(grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), grounder, completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _1048269 )
5214d 318 0 CALL:  prolog:get_value('$c_arith', true )
5215d 287 0 CALL:  prolog:do_c_built_in(grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), grounder, completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _1048269 )
5216d 329 0 CALL:  prolog:$yap_strip_module(grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), _131042, _131043 )
5217d 329 0 FAIL RETRY:  prolog:do_c_built_in(grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), grounder, completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _1048269 )
5218d 329 0 CALL:  prolog:$compop(grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), _1048231, _1048232, _1048234 )
5219d 329 0 FAIL RETRY:  prolog:do_c_built_in(grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), grounder, completion:grounder_compute_reachable_atoms(earthquake,2,_130969), _1048269 )
5220d 329 0 CALL:  prolog:$yap_strip_module(grounder:grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), _131045, _131046 )
5221d 329 0 CALL:  prolog:$match_mod(grounder_compute_reachable_atoms(earthquake,2,_130969), completion, user, grounder, _1048280 )
5222d 329 0 CALL:  prolog:$is_system_predicate(grounder_compute_reachable_atoms(earthquake,2,_130969), grounder )
5223d 329 0 TRY_OR 
5224d 345 0 CALL:  prolog:==(grounder, completion )
5226d 329 0 CALL:  prolog:$yap_strip_module(completion:grounder:grounder_compute_reachable_atoms(earthquake,2,_130969), _130983, _130984 )
5227d 329 0 TRY_OR 
5228d 337 0 CALL:  prolog:\==(completion, grounder )
5229d 329 0 CALL:  prolog:\=(grounder_compute_reachable_atoms(earthquake,2,_130969), fail )
5230d 246 0 CALL:  prolog:yap_flag(unknown, _1048298, error )
5231d 246 0 TRY_OR 
5232d 284 0 CALL:  prolog:==(false, true )
5234d 246 0 CALL:  prolog:$execute0(grounder_compute_reachable_atoms(earthquake,2,_130969), grounder )
5235d 246 0 CALL:  grounder:grounder_compute_reachable_atoms(earthquake, 2, _130969 )
5236d 246 0 CALL:  prolog:bb_put(grounder:dep_proven, false )
5237d 246 0 TRY_OR 
5238d 269 0 CALL:  grounder:tabled_meta_interpreter(earthquake, 2 )
5239d 278 0 CALL:  prolog:writeln(2:earthquake )
5240d 278 0 FAIL RETRY:  grounder:tabled_meta_interpreter(earthquake, 2 )
5241d 278 0 CALL:  prolog:predicate_property(grounder:earthquake, built_in )
5242d 278 0 CALL:  prolog:strip_module(grounder:earthquake, _131059, _131060 )
5243d 278 0 CALL:  prolog:$predicate_property2(earthquake, built_in, grounder )
5244d 294 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
5245d 294 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
5246d 294 0 CALL:  prolog:$pred_exists(earthquake, grounder )
5247d 294 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
5248d 278 0 CALL:  prolog:$get_undefined_pred(earthquake, grounder, _1048283, _1048284 )
5249d 278 0 CALL:  prolog:$get_undefined_predicates(earthquake, grounder, _1048283, _1048284 )
5250d 308 0 CALL:  prolog:recorded('$import', '$import'(_131062,grounder,_131064,earthquake,_131066,_131067), _1048257 )
5251d 308 0 FAIL RETRY:  prolog:$get_undefined_predicates(earthquake, grounder, _1048283, _1048284 )
5252d 308 0 CALL:  prolog:$pred_exists(earthquake, user )
5253d 278 0 TRY_OR 
5255d 278 0 CALL:  prolog:$predicate_property(earthquake, user, user, built_in )
5256d 278 0 CALL:  prolog:$is_system_predicate(earthquake, user )
5257d 278 0 FAIL RETRY:  grounder:tabled_meta_interpreter(earthquake, 2 )
5258d 278 0 CALL:  prolog:ground(earthquake )
5259d 269 0 TRY_OR 
5260d 296 0 CALL:  prolog:recorded(reachable, earthquake, _1048287 )
5262d 269 0 CALL:  prolog:recorda(reachable, earthquake, _1048289 )
+s 0x5602af28e320
 @0x7efdd88a31e8 0
5263d 269 0 CALL:  grounder:tabled_meta_interpreter_aux_ground_atom(earthquake, 2 )
5264d 278 0 CALL:  problog:probabilistic_fact(_1048290, earthquake, _1048291 )
5265d 295 0 CALL:  prolog:ground(earthquake )
5266d 278 0 CALL:  prolog:=..(earthquake, [_131056|_131057] )
5267d 278 0 CALL:  prolog:atomic_concat(problog_, earthquake, _1048270 )
5268d 278 0 CALL:  lists:append([_131060], [_131062], _1048269 )
5269d 278 0 CALL:  lists:append([], [_131062], _131065 )
5270d 278 0 CALL:  prolog:=..(_1048272, [problog_earthquake,_131060,_131062] )
5271d 278 0 CALL:  prolog:length([_131060,_131062], _1048271 )
5272d 278 0 CALL:  prolog:$skip_list([_131060,_131062], _1048271, _131071, _131072 )
5273d 278 0 CALL:  prolog:==([], [] )
5274d 278 0 CALL:  prolog:current_predicate(problog:problog_earthquake/2 )
5275d 278 0 CALL:  prolog:$yap_strip_module(problog:problog_earthquake/2, _1048266, _1048265 )
5276d 278 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_earthquake/2 )
5277d 278 0 TRY_OR 
5278d 326 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_earthquake/2 )
5279d 335 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_earthquake/2 )
5280d 326 0 TRY_OR 
5282d 326 0 CALL:  error:may_bind_to_type(atom, problog_earthquake )
5283d 343 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_earthquake )
5284d 326 0 CALL:  error:may_bind_to_type(integer, 2 )
5285d 335 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
5286d 278 0 CALL:  prolog:$c_i_predicate(problog_earthquake/2, problog )
5287d 278 0 TRY_OR 
5288d 320 0 CALL:  prolog:ground(problog_earthquake/2 )
5289d 278 0 CALL:  prolog:functor(_131079, problog_earthquake, 2 )
5290d 278 0 CALL:  prolog:current_predicate(problog_earthquake, problog:problog_earthquake(_131080,_131081) )
5291d 278 0 CALL:  prolog:$yap_strip_module(problog:problog_earthquake(_131080,_131081), _1048262, _1048261 )
5292d 278 0 CALL:  prolog:functor(problog_earthquake(_131080,_131081), problog_earthquake, _1048260 )
5293d 278 0 TRY_OR 
5294d 322 0 CALL:  prolog:$current_predicate(problog_earthquake, problog, problog_earthquake(_131080,_131081), user )
5295d 322 0 CALL:  problog:problog_earthquake(_131060, _131062 )
5296d 322 0 CALL:  prolog:is(_1048290, 3, -0.6596650473806767 )
5297d 269 0 CALL:  prolog:bb_put(grounder:dep_proven, true )
5299d 246 0 CALL:  prolog:bb_delete(grounder:dep_proven, _130969 )
5300d 246 0 TRY_OR 
5301d 260 0 CALL:  prolog:==(246, 246 )
5302d 236 0 TRY_OR 
5303d 244 0 TRY_OR 
5304d 252 0 CALL:  prolog:==(true, true )
5305d 228 0 FAIL RETRY:  user:known(2, _1048369, _1048367 )
5306d 218 0 TRY_OR 
5307d 226 0 CALL:  prolog:catch(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048365, completion:fail )
5308d 226 0 CALL:  prolog:$catch(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048365, completion:fail )
5309d 236 0 CALL:  prolog:$execute(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971) )
5310d 236 0 CALL:  prolog:$call(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), 236, completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), user )
5311d 253 0 FAIL RETRY:  prolog:$call(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), 236, completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), user )
5312d 236 0 CALL:  prolog:$call(grounder_compute_reachable_atoms(calls(mary),2,_130971), 236, completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), completion )
5313d 264 0 FAIL RETRY:  prolog:$call(grounder_compute_reachable_atoms(calls(mary),2,_130971), 236, completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), completion )
5314d 236 0 CALL:  prolog:$execute0(grounder_compute_reachable_atoms(calls(mary),2,_130971), completion )
5315d 236 0 CALL:  completion:grounder_compute_reachable_atoms(calls(mary), 2, _130971 )
5316d 236 0 CALL:  prolog:$undefp([completion|grounder_compute_reachable_atoms(calls(mary),2,_130971)], error )
5317d 236 0 CALL:  prolog:yap_flag(unknown, error, fail )
5318d 236 0 CALL:  prolog:$stop_creeping(_1048309 )
5319d 236 0 TRY_OR 
5320d 277 0 CALL:  prolog:$undefp_search(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _130985:_130986 )
5321d 286 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_130988,_130989,_130990,_130991), user )
5322d 286 0 FAIL RETRY:  prolog:$undefp_search(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _130985:_130986 )
5323d 277 0 CALL:  prolog:expand_goal(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _130985:_130986 )
5324d 277 0 CALL:  prolog:$expand_meta_call(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), [], _130985:_130986 )
5325d 277 0 CALL:  prolog:source_module(_130987 )
5326d 277 0 CALL:  prolog:$yap_strip_module(user:completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048289, _130991 )
5327d 277 0 CALL:  prolog:$expand_goals(grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048288, _1048290, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(calls(mary),2,_130971)) )
5328d 301 0 FAIL RETRY:  prolog:$expand_goals(grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048288, _1048290, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(calls(mary),2,_130971)) )
5329d 301 0 FAIL RETRY:  prolog:$expand_goals(grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048288, _1048290, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(calls(mary),2,_130971)) )
5330d 301 0 FAIL RETRY:  prolog:$expand_goals(grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048288, _1048290, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(calls(mary),2,_130971)) )
5331d 277 0 CALL:  prolog:$yap_strip_module(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _130998, _130999 )
5332d 277 0 CALL:  prolog:$expand_goal(grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048288, _1048290, completion, user, completion, []- (completion:grounder_compute_reachable_atoms(calls(mary),2,_130971)) )
5333d 277 0 CALL:  prolog:$yap_strip_module(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _131003, _131004 )
5334d 277 0 CALL:  prolog:$user_expansion(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _131009:_131010 )
5335d 311 0 CALL:  prolog:_user_expand_goal(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _131012:_131013 )
5339d 311 0 FAIL RETRY:  prolog:$user_expansion(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _131009:_131010 )
5340d 277 0 CALL:  prolog:$import_expansion(completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _131012:_131013 )
5341d 310 0 CALL:  prolog:$imported_predicate(grounder_compute_reachable_atoms(calls(mary),2,_130971), completion, _131013, _131012 )
5342d 326 0 CALL:  prolog:$is_system_predicate(grounder_compute_reachable_atoms(calls(mary),2,_130971), prolog )
5343d 326 0 FAIL RETRY:  prolog:$imported_predicate(grounder_compute_reachable_atoms(calls(mary),2,_130971), completion, _131013, _131012 )
5344d 310 0 CALL:  prolog:$undefined(grounder_compute_reachable_atoms(calls(mary),2,_130971), completion )
5345d 310 0 CALL:  prolog:$get_undefined_predicates(grounder_compute_reachable_atoms(calls(mary),2,_130971), completion, _131013, _131012 )
5346d 333 0 CALL:  prolog:recorded('$import', '$import'(_131015,completion,_131017,grounder_compute_reachable_atoms(calls(mary),2,_130971),_131019,_131020), _1048232 )
5347d 333 0 CALL:  prolog:$continue_imported(_131012, grounder, _131013, grounder_compute_reachable_atoms(calls(mary),2,_130971) )
5348d 344 0 CALL:  prolog:$pred_exists(grounder_compute_reachable_atoms(calls(mary),2,_130971), grounder )
5349d 333 0 CALL:  prolog:\=(grounder, completion )
5350d 277 0 CALL:  prolog:$meta_expansion(grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), completion, [], _1048277 )
5351d 309 0 CALL:  prolog:$yap_strip_module(grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), _131037, _1048256 )
5352d 309 0 CALL:  prolog:functor(grounder_compute_reachable_atoms(calls(mary),2,_130971), _131040, _131041 )
5353d 309 0 CALL:  prolog:$meta_predicate(grounder_compute_reachable_atoms, grounder, 3, _1048257 )
5354d 309 0 FAIL RETRY:  prolog:$meta_expansion(grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), completion, [], _1048277 )
5355d 277 0 CALL:  prolog:$yap_strip_module(grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), _131037, _131038 )
5356d 277 0 CALL:  prolog:$yap_strip_module(grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), _131039, _131040 )
5357d 277 0 CALL:  prolog:$end_goal_expansion(grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048288, _1048290, completion, user, grounder, completion:grounder_compute_reachable_atoms(calls(mary),2,_130971) )
5358d 277 0 CALL:  prolog:$match_mod(grounder_compute_reachable_atoms(calls(mary),2,_130971), completion, user, grounder, _1048288 )
5359d 277 0 CALL:  prolog:$is_system_predicate(grounder_compute_reachable_atoms(calls(mary),2,_130971), grounder )
5360d 277 0 TRY_OR 
5361d 315 0 CALL:  prolog:==(grounder, completion )
5363d 277 0 CALL:  prolog:$c_built_in(grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), grounder, completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048279 )
5364d 308 0 CALL:  prolog:get_value('$c_arith', true )
5365d 277 0 CALL:  prolog:do_c_built_in(grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), grounder, completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048279 )
5366d 319 0 CALL:  prolog:$yap_strip_module(grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), _131044, _131045 )
5367d 319 0 FAIL RETRY:  prolog:do_c_built_in(grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), grounder, completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048279 )
5368d 319 0 CALL:  prolog:$compop(grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048241, _1048242, _1048244 )
5369d 319 0 FAIL RETRY:  prolog:do_c_built_in(grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), grounder, completion:grounder_compute_reachable_atoms(calls(mary),2,_130971), _1048279 )
5370d 319 0 CALL:  prolog:$yap_strip_module(grounder:grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), _131047, _131048 )
5371d 319 0 CALL:  prolog:$match_mod(grounder_compute_reachable_atoms(calls(mary),2,_130971), completion, user, grounder, _1048290 )
5372d 319 0 CALL:  prolog:$is_system_predicate(grounder_compute_reachable_atoms(calls(mary),2,_130971), grounder )
5373d 319 0 TRY_OR 
5374d 335 0 CALL:  prolog:==(grounder, completion )
5376d 319 0 CALL:  prolog:$yap_strip_module(completion:grounder:grounder_compute_reachable_atoms(calls(mary),2,_130971), _130985, _130986 )
5377d 319 0 TRY_OR 
5378d 327 0 CALL:  prolog:\==(completion, grounder )
5379d 319 0 CALL:  prolog:\=(grounder_compute_reachable_atoms(calls(mary),2,_130971), fail )
5380d 236 0 CALL:  prolog:yap_flag(unknown, _1048308, error )
5381d 236 0 TRY_OR 
5382d 274 0 CALL:  prolog:==(false, true )
5384d 236 0 CALL:  prolog:$execute0(grounder_compute_reachable_atoms(calls(mary),2,_130971), grounder )
5385d 236 0 CALL:  grounder:grounder_compute_reachable_atoms(calls(mary), 2, _130971 )
5386d 236 0 CALL:  prolog:bb_put(grounder:dep_proven, false )
5387d 236 0 TRY_OR 
5388d 259 0 CALL:  grounder:tabled_meta_interpreter(calls(mary), 2 )
5389d 268 0 CALL:  prolog:writeln(2:calls(mary) )
5390d 268 0 FAIL RETRY:  grounder:tabled_meta_interpreter(calls(mary), 2 )
5391d 268 0 FAIL RETRY:  grounder:tabled_meta_interpreter(calls(mary), 2 )
5392d 268 0 CALL:  prolog:predicate_property(grounder:calls(mary), built_in )
5393d 268 0 CALL:  prolog:strip_module(grounder:calls(mary), _131061, _131062 )
5394d 268 0 CALL:  prolog:$predicate_property2(calls(mary), built_in, grounder )
5395d 284 0 FAIL RETRY:  prolog:$predicate_property2(calls(mary), built_in, grounder )
5396d 284 0 FAIL RETRY:  prolog:$predicate_property2(calls(mary), built_in, grounder )
5397d 284 0 CALL:  prolog:$pred_exists(calls(mary), grounder )
5398d 284 0 FAIL RETRY:  prolog:$predicate_property2(calls(mary), built_in, grounder )
5399d 268 0 CALL:  prolog:$get_undefined_pred(calls(mary), grounder, _1048293, _1048294 )
5400d 268 0 CALL:  prolog:$get_undefined_predicates(calls(mary), grounder, _1048293, _1048294 )
5401d 298 0 CALL:  prolog:recorded('$import', '$import'(_131064,grounder,_131066,calls(mary),_131068,_131069), _1048267 )
5402d 298 0 FAIL RETRY:  prolog:$get_undefined_predicates(calls(mary), grounder, _1048293, _1048294 )
5403d 298 0 CALL:  prolog:$pred_exists(calls(mary), user )
5404d 298 0 FAIL RETRY:  prolog:$get_undefined_predicates(calls(mary), grounder, _1048293, _1048294 )
5405d 298 0 CALL:  prolog:recorded('$dialect', swi, _1048262 )
5406d 298 0 FAIL RETRY:  prolog:$get_undefined_predicates(calls(mary), grounder, _1048293, _1048294 )
5407d 268 0 CALL:  prolog:$parent_module(grounder, _1048280 )
5408d 268 0 FAIL RETRY:  grounder:tabled_meta_interpreter(calls(mary), 2 )
5409d 268 0 CALL:  prolog:ground(calls(mary) )
5410d 259 0 TRY_OR 
5411d 286 0 CALL:  prolog:recorded(reachable, calls(mary), _1048297 )
5413d 259 0 CALL:  prolog:recorda(reachable, calls(mary), _1048299 )
+s 0x5602af28dfd0
 @0x7efdd88a31e8 0
5414d 259 0 CALL:  grounder:tabled_meta_interpreter_aux_ground_atom(calls(mary), 2 )
5415d 268 0 CALL:  problog:probabilistic_fact(_1048300, calls(mary), _1048301 )
5416d 285 0 CALL:  prolog:ground(calls(mary) )
5417d 268 0 CALL:  prolog:=..(calls(mary), [_131058|_131059] )
5418d 268 0 CALL:  prolog:atomic_concat(problog_, calls, _1048280 )
5419d 268 0 CALL:  lists:append([_131064,mary], [_131066], _1048279 )
5420d 268 0 CALL:  lists:append([mary], [_131066], _131069 )
5421d 268 0 CALL:  lists:append([], [_131066], _131071 )
5422d 268 0 CALL:  prolog:=..(_1048282, [problog_calls,_131064,mary,_131066] )
+s 0x5602af297e00
 @0x7efdd88a31f8 0
5423d 268 0 CALL:  prolog:length([_131064,mary,_131066], _1048281 )
5424d 268 0 CALL:  prolog:$skip_list([_131064,mary,_131066], _1048281, _131078, _131079 )
5425d 268 0 CALL:  prolog:==([], [] )
5426d 268 0 CALL:  prolog:current_predicate(problog:problog_calls/3 )
5427d 268 0 CALL:  prolog:$yap_strip_module(problog:problog_calls/3, _1048276, _1048275 )
5428d 268 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_calls/3 )
5429d 268 0 TRY_OR 
5430d 316 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_calls/3 )
5431d 325 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_calls/3 )
5432d 316 0 TRY_OR 
5434d 316 0 CALL:  error:may_bind_to_type(atom, problog_calls )
5435d 333 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_calls )
5436d 316 0 CALL:  error:may_bind_to_type(integer, 3 )
5437d 325 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
5438d 268 0 CALL:  prolog:$c_i_predicate(problog_calls/3, problog )
5439d 268 0 TRY_OR 
5440d 310 0 CALL:  prolog:ground(problog_calls/3 )
5441d 268 0 CALL:  prolog:functor(_131086, problog_calls, 3 )
5442d 268 0 CALL:  prolog:current_predicate(problog_calls, problog:problog_calls(_131087,_131088,_131089) )
5443d 268 0 CALL:  prolog:$yap_strip_module(problog:problog_calls(_131087,_131088,_131089), _1048272, _1048271 )
5444d 268 0 CALL:  prolog:functor(problog_calls(_131087,_131088,_131089), problog_calls, _1048270 )
5445d 268 0 TRY_OR 
5446d 312 0 CALL:  prolog:$current_predicate(problog_calls, problog, problog_calls(_131087,_131088,_131089), user )
5448d 268 0 CALL:  prolog:$imported_predicate(problog_calls(_131087,_131088,_131089), problog, _1048275, _1048276 )
5449d 313 0 CALL:  prolog:$is_system_predicate(problog_calls(_131087,_131088,_131089), prolog )
5450d 313 0 FAIL RETRY:  prolog:$imported_predicate(problog_calls(_131087,_131088,_131089), problog, _1048275, _1048276 )
5451d 268 0 CALL:  prolog:$undefined(problog_calls(_131087,_131088,_131089), problog )
5452d 268 0 CALL:  prolog:$get_undefined_predicates(problog_calls(_131087,_131088,_131089), problog, _1048275, _1048276 )
5453d 320 0 CALL:  prolog:recorded('$import', '$import'(_131094,problog,_131096,problog_calls(_131087,_131088,_131089),_131098,_131099), _1048245 )
5454d 320 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_calls(_131087,_131088,_131089), problog, _1048275, _1048276 )
5455d 320 0 CALL:  prolog:$pred_exists(problog_calls(_131087,_131088,_131089), user )
5456d 320 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_calls(_131087,_131088,_131089), problog, _1048275, _1048276 )
5457d 320 0 CALL:  prolog:recorded('$dialect', swi, _1048240 )
5458d 320 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_calls(_131087,_131088,_131089), problog, _1048275, _1048276 )
5459d 268 0 CALL:  prolog:$parent_module(problog, _1048258 )
5460d 268 0 FAIL RETRY:  grounder:tabled_meta_interpreter_aux_ground_atom(calls(mary), 2 )
5461d 259 0 CALL:  prolog:current_predicate(user:myclause/3 )
5462d 259 0 CALL:  prolog:$yap_strip_module(user:myclause/3, _1048302, _1048301 )
5463d 259 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/3 )
5464d 259 0 TRY_OR 
5465d 290 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/3 )
5466d 299 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/3 )
5467d 290 0 TRY_OR 
5469d 290 0 CALL:  error:may_bind_to_type(atom, myclause )
5470d 307 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
5471d 290 0 CALL:  error:may_bind_to_type(integer, 3 )
5472d 299 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
5473d 259 0 CALL:  prolog:$c_i_predicate(myclause/3, user )
5474d 259 0 TRY_OR 
5475d 284 0 CALL:  prolog:ground(myclause/3 )
5476d 259 0 CALL:  prolog:functor(_131064, myclause, 3 )
5477d 259 0 CALL:  prolog:current_predicate(myclause, user:myclause(_131065,_131066,_131067) )
5478d 259 0 CALL:  prolog:$yap_strip_module(user:myclause(_131065,_131066,_131067), _1048298, _1048297 )
5479d 259 0 CALL:  prolog:functor(myclause(_131065,_131066,_131067), myclause, _1048296 )
5480d 259 0 TRY_OR 
5481d 286 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_131065,_131066,_131067), user )
5482d 286 0 CALL:  user:myclause(2, calls(mary), _1048309 )
5483d 286 0 CALL:  prolog:current_predicate(user:myclause/2 )
5484d 286 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048276, _1048275 )
5485d 286 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
5486d 286 0 TRY_OR 
5487d 316 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
5488d 325 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
5489d 316 0 TRY_OR 
5491d 316 0 CALL:  error:may_bind_to_type(atom, myclause )
5492d 333 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
5493d 316 0 CALL:  error:may_bind_to_type(integer, 2 )
5494d 325 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
5495d 286 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
5496d 286 0 TRY_OR 
5497d 310 0 CALL:  prolog:ground(myclause/2 )
5498d 286 0 CALL:  prolog:functor(_131077, myclause, 2 )
5499d 286 0 CALL:  prolog:current_predicate(myclause, user:myclause(_131078,_131079) )
5500d 286 0 CALL:  prolog:$yap_strip_module(user:myclause(_131078,_131079), _1048272, _1048271 )
5501d 286 0 CALL:  prolog:functor(myclause(_131078,_131079), myclause, _1048270 )
5502d 286 0 TRY_OR 
5503d 312 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_131078,_131079), user )
5504d 312 0 CALL:  user:myclause(calls(mary), _1048309 )
5505d 312 0 CALL:  grounder:tabled_meta_interpreter(person(mary),alarm,hears_alarm(mary), 2 )
5506d 321 0 CALL:  prolog:writeln(2: (person(mary),alarm,hears_alarm(mary)) )
5507d 321 0 FAIL RETRY:  grounder:tabled_meta_interpreter(person(mary),alarm,hears_alarm(mary), 2 )
5508d 312 0 CALL:  grounder:tabled_meta_interpreter(person(mary), 2 )
5509d 337 0 CALL:  prolog:writeln(2:person(mary) )
5510d 337 0 FAIL RETRY:  grounder:tabled_meta_interpreter(person(mary), 2 )
5511d 337 0 FAIL RETRY:  grounder:tabled_meta_interpreter(person(mary), 2 )
5512d 337 0 CALL:  prolog:predicate_property(grounder:person(mary), built_in )
5513d 337 0 CALL:  prolog:strip_module(grounder:person(mary), _131096, _131097 )
5514d 337 0 CALL:  prolog:$predicate_property2(person(mary), built_in, grounder )
5515d 353 0 FAIL RETRY:  prolog:$predicate_property2(person(mary), built_in, grounder )
5516d 353 0 FAIL RETRY:  prolog:$predicate_property2(person(mary), built_in, grounder )
5517d 353 0 CALL:  prolog:$pred_exists(person(mary), grounder )
5518d 353 0 FAIL RETRY:  prolog:$predicate_property2(person(mary), built_in, grounder )
5519d 337 0 CALL:  prolog:$get_undefined_pred(person(mary), grounder, _1048224, _1048225 )
5520d 337 0 CALL:  prolog:$get_undefined_predicates(person(mary), grounder, _1048224, _1048225 )
5521d 367 0 CALL:  prolog:recorded('$import', '$import'(_131099,grounder,_131101,person(mary),_131103,_131104), _1048198 )
5522d 367 0 FAIL RETRY:  prolog:$get_undefined_predicates(person(mary), grounder, _1048224, _1048225 )
5523d 367 0 CALL:  prolog:$pred_exists(person(mary), user )
5524d 367 0 FAIL RETRY:  prolog:$get_undefined_predicates(person(mary), grounder, _1048224, _1048225 )
5525d 367 0 CALL:  prolog:recorded('$dialect', swi, _1048193 )
5526d 367 0 FAIL RETRY:  prolog:$get_undefined_predicates(person(mary), grounder, _1048224, _1048225 )
5527d 337 0 CALL:  prolog:$parent_module(grounder, _1048211 )
5528d 337 0 FAIL RETRY:  grounder:tabled_meta_interpreter(person(mary), 2 )
5529d 337 0 CALL:  prolog:ground(person(mary) )
5530d 312 0 TRY_OR 
5531d 355 0 CALL:  prolog:recorded(reachable, person(mary), _1048228 )
+s 0x5602af299950
 @0x7efdd88a3208 0
+s 0x5602af2994a0
 @0x7efdd88a3208 0
- 0x5602af2994a0
 @0x7efdd88a3208 355
+s 0x5602af298680
 @0x7efdd88a3208 0
+s 0x5602aefa12f0
 @0x7efdd88a3208 0
+s 0x5602af28ce10
 @0x7efdd88a3208 0
- 0x5602af299950
 @0x7efdd88a3208 355
5533d 312 0 CALL:  prolog:recorda(reachable, person(mary), _1048230 )
+s 0x5602af2666d0
 @0x7efdd88a3208 0
+s 0x5602af2960a0
 @0x7efdd88a3208 0
- 0x5602aefa12f0
 @0x7efdd88a3208 312
5534d 312 0 CALL:  grounder:tabled_meta_interpreter_aux_ground_atom(person(mary), 2 )
5535d 337 0 CALL:  problog:probabilistic_fact(_1048231, person(mary), _1048232 )
5536d 354 0 CALL:  prolog:ground(person(mary) )
5537d 337 0 CALL:  prolog:=..(person(mary), [_131093|_131094] )
5538d 337 0 CALL:  prolog:atomic_concat(problog_, person, _1048211 )
5539d 337 0 CALL:  lists:append([_131099,mary], [_131101], _1048210 )
5540d 337 0 CALL:  lists:append([mary], [_131101], _131104 )
5541d 337 0 CALL:  lists:append([], [_131101], _131106 )
5542d 337 0 CALL:  prolog:=..(_1048213, [problog_person,_131099,mary,_131101] )
5543d 337 0 CALL:  prolog:length([_131099,mary,_131101], _1048212 )
5544d 337 0 CALL:  prolog:$skip_list([_131099,mary,_131101], _1048212, _131113, _131114 )
5545d 337 0 CALL:  prolog:==([], [] )
5546d 337 0 CALL:  prolog:current_predicate(problog:problog_person/3 )
5547d 337 0 CALL:  prolog:$yap_strip_module(problog:problog_person/3, _1048207, _1048206 )
5548d 337 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_person/3 )
5549d 337 0 TRY_OR 
5550d 385 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_person/3 )
5551d 394 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_person/3 )
5552d 385 0 TRY_OR 
5554d 385 0 CALL:  error:may_bind_to_type(atom, problog_person )
5555d 402 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_person )
5556d 385 0 CALL:  error:may_bind_to_type(integer, 3 )
5557d 394 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
5558d 337 0 CALL:  prolog:$c_i_predicate(problog_person/3, problog )
5559d 337 0 TRY_OR 
5560d 379 0 CALL:  prolog:ground(problog_person/3 )
5561d 337 0 CALL:  prolog:functor(_131121, problog_person, 3 )
5562d 337 0 CALL:  prolog:current_predicate(problog_person, problog:problog_person(_131122,_131123,_131124) )
5563d 337 0 CALL:  prolog:$yap_strip_module(problog:problog_person(_131122,_131123,_131124), _1048203, _1048202 )
5564d 337 0 CALL:  prolog:functor(problog_person(_131122,_131123,_131124), problog_person, _1048201 )
5565d 337 0 TRY_OR 
5566d 381 0 CALL:  prolog:$current_predicate(problog_person, problog, problog_person(_131122,_131123,_131124), user )
5568d 337 0 CALL:  prolog:$imported_predicate(problog_person(_131122,_131123,_131124), problog, _1048206, _1048207 )
5569d 382 0 CALL:  prolog:$is_system_predicate(problog_person(_131122,_131123,_131124), prolog )
5570d 382 0 FAIL RETRY:  prolog:$imported_predicate(problog_person(_131122,_131123,_131124), problog, _1048206, _1048207 )
5571d 337 0 CALL:  prolog:$undefined(problog_person(_131122,_131123,_131124), problog )
5572d 337 0 CALL:  prolog:$get_undefined_predicates(problog_person(_131122,_131123,_131124), problog, _1048206, _1048207 )
5573d 389 0 CALL:  prolog:recorded('$import', '$import'(_131129,problog,_131131,problog_person(_131122,_131123,_131124),_131133,_131134), _1048176 )
5574d 389 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_person(_131122,_131123,_131124), problog, _1048206, _1048207 )
5575d 389 0 CALL:  prolog:$pred_exists(problog_person(_131122,_131123,_131124), user )
5576d 389 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_person(_131122,_131123,_131124), problog, _1048206, _1048207 )
5577d 389 0 CALL:  prolog:recorded('$dialect', swi, _1048171 )
5578d 389 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_person(_131122,_131123,_131124), problog, _1048206, _1048207 )
5579d 337 0 CALL:  prolog:$parent_module(problog, _1048189 )
5580d 337 0 FAIL RETRY:  grounder:tabled_meta_interpreter_aux_ground_atom(person(mary), 2 )
5581d 312 0 CALL:  prolog:current_predicate(user:myclause/3 )
5582d 312 0 CALL:  prolog:$yap_strip_module(user:myclause/3, _1048233, _1048232 )
5583d 312 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/3 )
5584d 312 0 TRY_OR 
5585d 359 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/3 )
5586d 368 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/3 )
5587d 359 0 TRY_OR 
5589d 359 0 CALL:  error:may_bind_to_type(atom, myclause )
5590d 376 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
5591d 359 0 CALL:  error:may_bind_to_type(integer, 3 )
5592d 368 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
5593d 312 0 CALL:  prolog:$c_i_predicate(myclause/3, user )
5594d 312 0 TRY_OR 
5595d 353 0 CALL:  prolog:ground(myclause/3 )
5596d 312 0 CALL:  prolog:functor(_131099, myclause, 3 )
5597d 312 0 CALL:  prolog:current_predicate(myclause, user:myclause(_131100,_131101,_131102) )
5598d 312 0 CALL:  prolog:$yap_strip_module(user:myclause(_131100,_131101,_131102), _1048229, _1048228 )
5599d 312 0 CALL:  prolog:functor(myclause(_131100,_131101,_131102), myclause, _1048227 )
5600d 312 0 TRY_OR 
5601d 355 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_131100,_131101,_131102), user )
5602d 355 0 CALL:  user:myclause(2, person(mary), _1048240 )
5603d 355 0 CALL:  prolog:current_predicate(user:myclause/2 )
5604d 355 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048207, _1048206 )
5605d 355 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
5606d 355 0 TRY_OR 
5607d 385 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
5608d 394 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
5609d 385 0 TRY_OR 
5611d 385 0 CALL:  error:may_bind_to_type(atom, myclause )
5612d 402 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
5613d 385 0 CALL:  error:may_bind_to_type(integer, 2 )
5614d 394 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
5615d 355 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
5616d 355 0 TRY_OR 
5617d 379 0 CALL:  prolog:ground(myclause/2 )
5618d 355 0 CALL:  prolog:functor(_131112, myclause, 2 )
5619d 355 0 CALL:  prolog:current_predicate(myclause, user:myclause(_131113,_131114) )
5620d 355 0 CALL:  prolog:$yap_strip_module(user:myclause(_131113,_131114), _1048203, _1048202 )
5621d 355 0 CALL:  prolog:functor(myclause(_131113,_131114), myclause, _1048201 )
5622d 355 0 TRY_OR 
5623d 381 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_131113,_131114), user )
5624d 381 0 CALL:  user:myclause(person(mary), _1048240 )
+s 0x5602af28dc40
 @0x7efdd88a3218 0
+s 0x5602af29b580
 @0x7efdd88a3218 0
- 0x5602af29b580
 @0x7efdd88a3218 381
+s 0x5602af297030
 @0x7efdd88a3218 0
+s 0x5602af266940
 @0x7efdd88a3218 0
- 0x5602af28dc40
 @0x7efdd88a3218 381
5625d 381 0 CALL:  grounder:tabled_meta_interpreter(true, 2 )
5626d 390 0 CALL:  prolog:writeln(2:true )
5627d 390 0 FAIL RETRY:  grounder:tabled_meta_interpreter(true, 2 )
5628d 390 0 CALL:  prolog:predicate_property(grounder:true, built_in )
5629d 390 0 CALL:  prolog:strip_module(grounder:true, _131121, _131122 )
5630d 390 0 CALL:  prolog:$predicate_property2(true, built_in, grounder )
5631d 406 0 FAIL RETRY:  prolog:$predicate_property2(true, built_in, grounder )
5632d 406 0 FAIL RETRY:  prolog:$predicate_property2(true, built_in, grounder )
5633d 406 0 CALL:  prolog:$pred_exists(true, grounder )
5634d 390 0 CALL:  prolog:$predicate_property(true, grounder, grounder, built_in )
5635d 390 0 CALL:  prolog:$is_system_predicate(true, grounder )
5636d 381 0 CALL:  prolog:call(grounder:true )
5637d 381 0 CALL:  prolog:$execute(grounder:true )
5638d 381 0 CALL:  grounder:tabled_meta_interpreter(alarm,hears_alarm(mary), 2 )
5639d 390 0 CALL:  prolog:writeln(2: (alarm,hears_alarm(mary)) )
5640d 390 0 FAIL RETRY:  grounder:tabled_meta_interpreter(alarm,hears_alarm(mary), 2 )
5641d 381 0 CALL:  grounder:tabled_meta_interpreter(alarm, 2 )
5642d 406 0 CALL:  prolog:writeln(2:alarm )
5643d 406 0 FAIL RETRY:  grounder:tabled_meta_interpreter(alarm, 2 )
5644d 406 0 CALL:  prolog:predicate_property(grounder:alarm, built_in )
5645d 406 0 CALL:  prolog:strip_module(grounder:alarm, _131126, _131127 )
5646d 406 0 CALL:  prolog:$predicate_property2(alarm, built_in, grounder )
5647d 422 0 FAIL RETRY:  prolog:$predicate_property2(alarm, built_in, grounder )
5648d 422 0 FAIL RETRY:  prolog:$predicate_property2(alarm, built_in, grounder )
5649d 422 0 CALL:  prolog:$pred_exists(alarm, grounder )
5650d 422 0 FAIL RETRY:  prolog:$predicate_property2(alarm, built_in, grounder )
5651d 406 0 CALL:  prolog:$get_undefined_pred(alarm, grounder, _1048155, _1048156 )
5652d 406 0 CALL:  prolog:$get_undefined_predicates(alarm, grounder, _1048155, _1048156 )
5653d 436 0 CALL:  prolog:recorded('$import', '$import'(_131129,grounder,_131131,alarm,_131133,_131134), _1048129 )
5654d 436 0 FAIL RETRY:  prolog:$get_undefined_predicates(alarm, grounder, _1048155, _1048156 )
5655d 436 0 CALL:  prolog:$pred_exists(alarm, user )
5656d 436 0 FAIL RETRY:  prolog:$get_undefined_predicates(alarm, grounder, _1048155, _1048156 )
5657d 436 0 CALL:  prolog:recorded('$dialect', swi, _1048124 )
5658d 436 0 FAIL RETRY:  prolog:$get_undefined_predicates(alarm, grounder, _1048155, _1048156 )
5659d 406 0 CALL:  prolog:$parent_module(grounder, _1048142 )
5660d 406 0 FAIL RETRY:  grounder:tabled_meta_interpreter(alarm, 2 )
5661d 406 0 CALL:  prolog:ground(alarm )
5662d 381 0 TRY_OR 
5663d 424 0 CALL:  prolog:recorded(reachable, alarm, _1048159 )
5665d 381 0 CALL:  prolog:recorda(reachable, alarm, _1048161 )
+s 0x5602af2339c0
 @0x7efdd88a3228 0
+s 0x5602af263e00
 @0x7efdd88a3228 0
- 0x5602af298680
 @0x7efdd88a3228 381
5666d 381 0 CALL:  grounder:tabled_meta_interpreter_aux_ground_atom(alarm, 2 )
5667d 406 0 CALL:  problog:probabilistic_fact(_1048162, alarm, _1048163 )
5668d 423 0 CALL:  prolog:ground(alarm )
5669d 406 0 CALL:  prolog:=..(alarm, [_131123|_131124] )
5670d 406 0 CALL:  prolog:atomic_concat(problog_, alarm, _1048142 )
5671d 406 0 CALL:  lists:append([_131127], [_131129], _1048141 )
5672d 406 0 CALL:  lists:append([], [_131129], _131132 )
5673d 406 0 CALL:  prolog:=..(_1048144, [problog_alarm,_131127,_131129] )
5674d 406 0 CALL:  prolog:length([_131127,_131129], _1048143 )
5675d 406 0 CALL:  prolog:$skip_list([_131127,_131129], _1048143, _131138, _131139 )
5676d 406 0 CALL:  prolog:==([], [] )
5677d 406 0 CALL:  prolog:current_predicate(problog:problog_alarm/2 )
5678d 406 0 CALL:  prolog:$yap_strip_module(problog:problog_alarm/2, _1048138, _1048137 )
5679d 406 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_alarm/2 )
5680d 406 0 TRY_OR 
5681d 454 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_alarm/2 )
5682d 463 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_alarm/2 )
5683d 454 0 TRY_OR 
5685d 454 0 CALL:  error:may_bind_to_type(atom, problog_alarm )
5686d 471 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_alarm )
5687d 454 0 CALL:  error:may_bind_to_type(integer, 2 )
5688d 463 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
5689d 406 0 CALL:  prolog:$c_i_predicate(problog_alarm/2, problog )
5690d 406 0 TRY_OR 
5691d 448 0 CALL:  prolog:ground(problog_alarm/2 )
5692d 406 0 CALL:  prolog:functor(_131146, problog_alarm, 2 )
5693d 406 0 CALL:  prolog:current_predicate(problog_alarm, problog:problog_alarm(_131147,_131148) )
5694d 406 0 CALL:  prolog:$yap_strip_module(problog:problog_alarm(_131147,_131148), _1048134, _1048133 )
5695d 406 0 CALL:  prolog:functor(problog_alarm(_131147,_131148), problog_alarm, _1048132 )
5696d 406 0 TRY_OR 
5697d 450 0 CALL:  prolog:$current_predicate(problog_alarm, problog, problog_alarm(_131147,_131148), user )
5699d 406 0 CALL:  prolog:$imported_predicate(problog_alarm(_131147,_131148), problog, _1048137, _1048138 )
5700d 451 0 CALL:  prolog:$is_system_predicate(problog_alarm(_131147,_131148), prolog )
5701d 451 0 FAIL RETRY:  prolog:$imported_predicate(problog_alarm(_131147,_131148), problog, _1048137, _1048138 )
5702d 406 0 CALL:  prolog:$undefined(problog_alarm(_131147,_131148), problog )
5703d 406 0 CALL:  prolog:$get_undefined_predicates(problog_alarm(_131147,_131148), problog, _1048137, _1048138 )
5704d 458 0 CALL:  prolog:recorded('$import', '$import'(_131153,problog,_131155,problog_alarm(_131147,_131148),_131157,_131158), _1048107 )
5705d 458 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_131147,_131148), problog, _1048137, _1048138 )
5706d 458 0 CALL:  prolog:$pred_exists(problog_alarm(_131147,_131148), user )
5707d 458 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_131147,_131148), problog, _1048137, _1048138 )
5708d 458 0 CALL:  prolog:recorded('$dialect', swi, _1048102 )
5709d 458 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_alarm(_131147,_131148), problog, _1048137, _1048138 )
5710d 406 0 CALL:  prolog:$parent_module(problog, _1048120 )
5711d 406 0 FAIL RETRY:  grounder:tabled_meta_interpreter_aux_ground_atom(alarm, 2 )
5712d 381 0 CALL:  prolog:current_predicate(user:myclause/3 )
5713d 381 0 CALL:  prolog:$yap_strip_module(user:myclause/3, _1048164, _1048163 )
5714d 381 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/3 )
5715d 381 0 TRY_OR 
5716d 428 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/3 )
5717d 437 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/3 )
5718d 428 0 TRY_OR 
5720d 428 0 CALL:  error:may_bind_to_type(atom, myclause )
5721d 445 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
5722d 428 0 CALL:  error:may_bind_to_type(integer, 3 )
5723d 437 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
5724d 381 0 CALL:  prolog:$c_i_predicate(myclause/3, user )
5725d 381 0 TRY_OR 
5726d 422 0 CALL:  prolog:ground(myclause/3 )
5727d 381 0 CALL:  prolog:functor(_131129, myclause, 3 )
5728d 381 0 CALL:  prolog:current_predicate(myclause, user:myclause(_131130,_131131,_131132) )
5729d 381 0 CALL:  prolog:$yap_strip_module(user:myclause(_131130,_131131,_131132), _1048160, _1048159 )
5730d 381 0 CALL:  prolog:functor(myclause(_131130,_131131,_131132), myclause, _1048158 )
5731d 381 0 TRY_OR 
5732d 424 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_131130,_131131,_131132), user )
5733d 424 0 CALL:  user:myclause(2, alarm, _1048171 )
5734d 424 0 CALL:  prolog:current_predicate(user:myclause/2 )
5735d 424 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048138, _1048137 )
5736d 424 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
5737d 424 0 TRY_OR 
5738d 454 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
5739d 463 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
5740d 454 0 TRY_OR 
5742d 454 0 CALL:  error:may_bind_to_type(atom, myclause )
5743d 471 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
5744d 454 0 CALL:  error:may_bind_to_type(integer, 2 )
5745d 463 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
5746d 424 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
5747d 424 0 TRY_OR 
5748d 448 0 CALL:  prolog:ground(myclause/2 )
5749d 424 0 CALL:  prolog:functor(_131142, myclause, 2 )
5750d 424 0 CALL:  prolog:current_predicate(myclause, user:myclause(_131143,_131144) )
5751d 424 0 CALL:  prolog:$yap_strip_module(user:myclause(_131143,_131144), _1048134, _1048133 )
5752d 424 0 CALL:  prolog:functor(myclause(_131143,_131144), myclause, _1048132 )
5753d 424 0 TRY_OR 
5754d 450 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_131143,_131144), user )
5755d 450 0 CALL:  user:myclause(alarm, _1048171 )
5756d 459 0 CALL:  grounder:tabled_meta_interpreter(burglary, 2 )
5757d 468 0 CALL:  prolog:writeln(2:burglary )
5758d 468 0 FAIL RETRY:  grounder:tabled_meta_interpreter(burglary, 2 )
5759d 468 0 CALL:  prolog:predicate_property(grounder:burglary, built_in )
5760d 468 0 CALL:  prolog:strip_module(grounder:burglary, _131151, _131152 )
5761d 468 0 CALL:  prolog:$predicate_property2(burglary, built_in, grounder )
5762d 484 0 FAIL RETRY:  prolog:$predicate_property2(burglary, built_in, grounder )
5763d 484 0 FAIL RETRY:  prolog:$predicate_property2(burglary, built_in, grounder )
5764d 484 0 CALL:  prolog:$pred_exists(burglary, grounder )
5765d 484 0 FAIL RETRY:  prolog:$predicate_property2(burglary, built_in, grounder )
5766d 468 0 CALL:  prolog:$get_undefined_pred(burglary, grounder, _1048093, _1048094 )
5767d 468 0 CALL:  prolog:$get_undefined_predicates(burglary, grounder, _1048093, _1048094 )
5768d 498 0 CALL:  prolog:recorded('$import', '$import'(_131154,grounder,_131156,burglary,_131158,_131159), _1048067 )
5769d 498 0 FAIL RETRY:  prolog:$get_undefined_predicates(burglary, grounder, _1048093, _1048094 )
5770d 498 0 CALL:  prolog:$pred_exists(burglary, user )
5771d 468 0 TRY_OR 
5773d 468 0 CALL:  prolog:$predicate_property(burglary, user, user, built_in )
5774d 468 0 CALL:  prolog:$is_system_predicate(burglary, user )
5775d 468 0 FAIL RETRY:  grounder:tabled_meta_interpreter(burglary, 2 )
5776d 468 0 CALL:  prolog:ground(burglary )
5777d 459 0 TRY_OR 
5778d 486 0 CALL:  prolog:recorded(reachable, burglary, _1048097 )
5780d 459 0 CALL:  prolog:recorda(reachable, burglary, _1048099 )
+s 0x5602af233a50
 @0x7efdd88a3248 0
+s 0x5602af233b50
 @0x7efdd88a3248 0
- 0x5602af263e00
 @0x7efdd88a3248 459
5781d 459 0 CALL:  grounder:tabled_meta_interpreter_aux_ground_atom(burglary, 2 )
5782d 468 0 CALL:  problog:probabilistic_fact(_1048100, burglary, _1048101 )
5783d 485 0 CALL:  prolog:ground(burglary )
5784d 468 0 CALL:  prolog:=..(burglary, [_131148|_131149] )
5785d 468 0 CALL:  prolog:atomic_concat(problog_, burglary, _1048080 )
5786d 468 0 CALL:  lists:append([_131152], [_131154], _1048079 )
5787d 468 0 CALL:  lists:append([], [_131154], _131157 )
5788d 468 0 CALL:  prolog:=..(_1048082, [problog_burglary,_131152,_131154] )
5789d 468 0 CALL:  prolog:length([_131152,_131154], _1048081 )
5790d 468 0 CALL:  prolog:$skip_list([_131152,_131154], _1048081, _131163, _131164 )
5791d 468 0 CALL:  prolog:==([], [] )
5792d 468 0 CALL:  prolog:current_predicate(problog:problog_burglary/2 )
5793d 468 0 CALL:  prolog:$yap_strip_module(problog:problog_burglary/2, _1048076, _1048075 )
5794d 468 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_burglary/2 )
5795d 468 0 TRY_OR 
5796d 516 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_burglary/2 )
5797d 525 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_burglary/2 )
5798d 516 0 TRY_OR 
5800d 516 0 CALL:  error:may_bind_to_type(atom, problog_burglary )
5801d 533 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_burglary )
5802d 516 0 CALL:  error:may_bind_to_type(integer, 2 )
5803d 525 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
5804d 468 0 CALL:  prolog:$c_i_predicate(problog_burglary/2, problog )
5805d 468 0 TRY_OR 
5806d 510 0 CALL:  prolog:ground(problog_burglary/2 )
5807d 468 0 CALL:  prolog:functor(_131171, problog_burglary, 2 )
5808d 468 0 CALL:  prolog:current_predicate(problog_burglary, problog:problog_burglary(_131172,_131173) )
5809d 468 0 CALL:  prolog:$yap_strip_module(problog:problog_burglary(_131172,_131173), _1048072, _1048071 )
5810d 468 0 CALL:  prolog:functor(problog_burglary(_131172,_131173), problog_burglary, _1048070 )
5811d 468 0 TRY_OR 
5812d 512 0 CALL:  prolog:$current_predicate(problog_burglary, problog, problog_burglary(_131172,_131173), user )
5813d 512 0 CALL:  problog:problog_burglary(_131152, _131154 )
5814d 512 0 CALL:  prolog:is(_1048100, 3, -1.249826789005093 )
5815d 459 0 CALL:  grounder:tabled_meta_interpreter(hears_alarm(mary), 2 )
5816d 468 0 CALL:  prolog:writeln(2:hears_alarm(mary) )
5817d 468 0 FAIL RETRY:  grounder:tabled_meta_interpreter(hears_alarm(mary), 2 )
5818d 468 0 FAIL RETRY:  grounder:tabled_meta_interpreter(hears_alarm(mary), 2 )
5819d 468 0 CALL:  prolog:predicate_property(grounder:hears_alarm(mary), built_in )
5820d 468 0 CALL:  prolog:strip_module(grounder:hears_alarm(mary), _131183, _131184 )
5821d 468 0 CALL:  prolog:$predicate_property2(hears_alarm(mary), built_in, grounder )
5822d 484 0 FAIL RETRY:  prolog:$predicate_property2(hears_alarm(mary), built_in, grounder )
5823d 484 0 FAIL RETRY:  prolog:$predicate_property2(hears_alarm(mary), built_in, grounder )
5824d 484 0 CALL:  prolog:$pred_exists(hears_alarm(mary), grounder )
5825d 484 0 FAIL RETRY:  prolog:$predicate_property2(hears_alarm(mary), built_in, grounder )
5826d 468 0 CALL:  prolog:$get_undefined_pred(hears_alarm(mary), grounder, _1048093, _1048094 )
5827d 468 0 CALL:  prolog:$get_undefined_predicates(hears_alarm(mary), grounder, _1048093, _1048094 )
5828d 498 0 CALL:  prolog:recorded('$import', '$import'(_131186,grounder,_131188,hears_alarm(mary),_131190,_131191), _1048067 )
5829d 498 0 FAIL RETRY:  prolog:$get_undefined_predicates(hears_alarm(mary), grounder, _1048093, _1048094 )
5830d 498 0 CALL:  prolog:$pred_exists(hears_alarm(mary), user )
5831d 468 0 TRY_OR 
5833d 468 0 CALL:  prolog:$predicate_property(hears_alarm(mary), user, user, built_in )
5834d 468 0 CALL:  prolog:$is_system_predicate(hears_alarm(mary), user )
5835d 468 0 FAIL RETRY:  grounder:tabled_meta_interpreter(hears_alarm(mary), 2 )
5836d 468 0 CALL:  prolog:ground(hears_alarm(mary) )
5837d 459 0 TRY_OR 
5838d 486 0 CALL:  prolog:recorded(reachable, hears_alarm(mary), _1048097 )
5840d 459 0 CALL:  prolog:recorda(reachable, hears_alarm(mary), _1048099 )
+s 0x5602af266af0
 @0x7efdd88a3268 0
+s 0x5602af08ccb0
 @0x7efdd88a3268 0
- 0x5602af2960a0
 @0x7efdd88a3268 459
5841d 459 0 CALL:  grounder:tabled_meta_interpreter_aux_ground_atom(hears_alarm(mary), 2 )
5842d 468 0 CALL:  problog:probabilistic_fact(_1048100, hears_alarm(mary), _1048101 )
5843d 485 0 CALL:  prolog:ground(hears_alarm(mary) )
5844d 468 0 CALL:  prolog:=..(hears_alarm(mary), [_131180|_131181] )
5845d 468 0 CALL:  prolog:atomic_concat(problog_, hears_alarm, _1048080 )
5846d 468 0 CALL:  lists:append([_131186,mary], [_131188], _1048079 )
5847d 468 0 CALL:  lists:append([mary], [_131188], _131191 )
5848d 468 0 CALL:  lists:append([], [_131188], _131193 )
5849d 468 0 CALL:  prolog:=..(_1048082, [problog_hears_alarm,_131186,mary,_131188] )
5850d 468 0 CALL:  prolog:length([_131186,mary,_131188], _1048081 )
5851d 468 0 CALL:  prolog:$skip_list([_131186,mary,_131188], _1048081, _131200, _131201 )
5852d 468 0 CALL:  prolog:==([], [] )
5853d 468 0 CALL:  prolog:current_predicate(problog:problog_hears_alarm/3 )
5854d 468 0 CALL:  prolog:$yap_strip_module(problog:problog_hears_alarm/3, _1048076, _1048075 )
5855d 468 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_hears_alarm/3 )
5856d 468 0 TRY_OR 
5857d 516 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_hears_alarm/3 )
5858d 525 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_hears_alarm/3 )
5859d 516 0 TRY_OR 
5861d 516 0 CALL:  error:may_bind_to_type(atom, problog_hears_alarm )
5862d 533 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_hears_alarm )
5863d 516 0 CALL:  error:may_bind_to_type(integer, 3 )
5864d 525 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
5865d 468 0 CALL:  prolog:$c_i_predicate(problog_hears_alarm/3, problog )
5866d 468 0 TRY_OR 
5867d 510 0 CALL:  prolog:ground(problog_hears_alarm/3 )
5868d 468 0 CALL:  prolog:functor(_131208, problog_hears_alarm, 3 )
5869d 468 0 CALL:  prolog:current_predicate(problog_hears_alarm, problog:problog_hears_alarm(_131209,_131210,_131211) )
5870d 468 0 CALL:  prolog:$yap_strip_module(problog:problog_hears_alarm(_131209,_131210,_131211), _1048072, _1048071 )
5871d 468 0 CALL:  prolog:functor(problog_hears_alarm(_131209,_131210,_131211), problog_hears_alarm, _1048070 )
5872d 468 0 TRY_OR 
5873d 512 0 CALL:  prolog:$current_predicate(problog_hears_alarm, problog, problog_hears_alarm(_131209,_131210,_131211), user )
5874d 512 0 CALL:  problog:problog_hears_alarm(_131186, mary, _131188 )
5875d 512 0 CALL:  prolog:is(_1048100, 3, -0.8533637893529484 )
5876d 459 0 CALL:  prolog:bb_put(grounder:dep_proven, true )
5877d 459 0 FAIL RETRY:  user:myclause(alarm, _1048171 )
5878d 450 0 CALL:  grounder:tabled_meta_interpreter(earthquake, 2 )
5879d 459 0 CALL:  prolog:writeln(2:earthquake )
5880d 459 0 FAIL RETRY:  grounder:tabled_meta_interpreter(earthquake, 2 )
5881d 459 0 CALL:  prolog:predicate_property(grounder:earthquake, built_in )
5882d 459 0 CALL:  prolog:strip_module(grounder:earthquake, _131151, _131152 )
5883d 459 0 CALL:  prolog:$predicate_property2(earthquake, built_in, grounder )
5884d 475 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
5885d 475 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
5886d 475 0 CALL:  prolog:$pred_exists(earthquake, grounder )
5887d 475 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
5888d 459 0 CALL:  prolog:$get_undefined_pred(earthquake, grounder, _1048102, _1048103 )
5889d 459 0 CALL:  prolog:$get_undefined_predicates(earthquake, grounder, _1048102, _1048103 )
5890d 489 0 CALL:  prolog:recorded('$import', '$import'(_131154,grounder,_131156,earthquake,_131158,_131159), _1048076 )
5891d 489 0 FAIL RETRY:  prolog:$get_undefined_predicates(earthquake, grounder, _1048102, _1048103 )
5892d 489 0 CALL:  prolog:$pred_exists(earthquake, user )
5893d 459 0 TRY_OR 
5895d 459 0 CALL:  prolog:$predicate_property(earthquake, user, user, built_in )
5896d 459 0 CALL:  prolog:$is_system_predicate(earthquake, user )
5897d 459 0 FAIL RETRY:  grounder:tabled_meta_interpreter(earthquake, 2 )
5898d 459 0 CALL:  prolog:ground(earthquake )
5899d 450 0 TRY_OR 
5900d 477 0 CALL:  prolog:recorded(reachable, earthquake, _1048106 )
5901d 450 0 CALL:  grounder:tabled_meta_interpreter(hears_alarm(mary), 2 )
5902d 459 0 CALL:  prolog:writeln(2:hears_alarm(mary) )
5903d 459 0 FAIL RETRY:  grounder:tabled_meta_interpreter(hears_alarm(mary), 2 )
5904d 459 0 FAIL RETRY:  grounder:tabled_meta_interpreter(hears_alarm(mary), 2 )
5905d 459 0 CALL:  prolog:predicate_property(grounder:hears_alarm(mary), built_in )
5906d 459 0 CALL:  prolog:strip_module(grounder:hears_alarm(mary), _131151, _131152 )
5907d 459 0 CALL:  prolog:$predicate_property2(hears_alarm(mary), built_in, grounder )
5908d 475 0 FAIL RETRY:  prolog:$predicate_property2(hears_alarm(mary), built_in, grounder )
5909d 475 0 FAIL RETRY:  prolog:$predicate_property2(hears_alarm(mary), built_in, grounder )
5910d 475 0 CALL:  prolog:$pred_exists(hears_alarm(mary), grounder )
5911d 475 0 FAIL RETRY:  prolog:$predicate_property2(hears_alarm(mary), built_in, grounder )
5912d 459 0 CALL:  prolog:$get_undefined_pred(hears_alarm(mary), grounder, _1048102, _1048103 )
5913d 459 0 CALL:  prolog:$get_undefined_predicates(hears_alarm(mary), grounder, _1048102, _1048103 )
5914d 489 0 CALL:  prolog:recorded('$import', '$import'(_131154,grounder,_131156,hears_alarm(mary),_131158,_131159), _1048076 )
5915d 489 0 FAIL RETRY:  prolog:$get_undefined_predicates(hears_alarm(mary), grounder, _1048102, _1048103 )
5916d 489 0 CALL:  prolog:$pred_exists(hears_alarm(mary), user )
5917d 459 0 TRY_OR 
5919d 459 0 CALL:  prolog:$predicate_property(hears_alarm(mary), user, user, built_in )
5920d 459 0 CALL:  prolog:$is_system_predicate(hears_alarm(mary), user )
5921d 459 0 FAIL RETRY:  grounder:tabled_meta_interpreter(hears_alarm(mary), 2 )
5922d 459 0 CALL:  prolog:ground(hears_alarm(mary) )
5923d 450 0 TRY_OR 
5924d 477 0 CALL:  prolog:recorded(reachable, hears_alarm(mary), _1048106 )
5925d 450 0 CALL:  prolog:bb_put(grounder:dep_proven, true )
5927d 424 0 CALL:  prolog:$imported_predicate(myclause(_131143,_131144), user, _1048137, _1048138 )
5928d 451 0 CALL:  prolog:$is_system_predicate(myclause(_131143,_131144), prolog )
5929d 451 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_131143,_131144), user, _1048137, _1048138 )
5930d 424 0 CALL:  prolog:$undefined(myclause(_131143,_131144), user )
5932d 381 0 CALL:  prolog:$imported_predicate(myclause(_131130,_131131,_131132), user, _1048163, _1048164 )
5933d 425 0 CALL:  prolog:$is_system_predicate(myclause(_131130,_131131,_131132), prolog )
5934d 425 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_131130,_131131,_131132), user, _1048163, _1048164 )
5935d 381 0 CALL:  prolog:$undefined(myclause(_131130,_131131,_131132), user )
5937d 355 0 CALL:  prolog:$imported_predicate(myclause(_131113,_131114), user, _1048206, _1048207 )
5938d 382 0 CALL:  prolog:$is_system_predicate(myclause(_131113,_131114), prolog )
5939d 382 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_131113,_131114), user, _1048206, _1048207 )
5940d 355 0 CALL:  prolog:$undefined(myclause(_131113,_131114), user )
5942d 312 0 CALL:  prolog:$imported_predicate(myclause(_131100,_131101,_131102), user, _1048232, _1048233 )
5943d 356 0 CALL:  prolog:$is_system_predicate(myclause(_131100,_131101,_131102), prolog )
5944d 356 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_131100,_131101,_131102), user, _1048232, _1048233 )
5945d 312 0 CALL:  prolog:$undefined(myclause(_131100,_131101,_131102), user )
5947d 286 0 CALL:  prolog:$imported_predicate(myclause(_131078,_131079), user, _1048275, _1048276 )
5948d 313 0 CALL:  prolog:$is_system_predicate(myclause(_131078,_131079), prolog )
5949d 313 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_131078,_131079), user, _1048275, _1048276 )
5950d 286 0 CALL:  prolog:$undefined(myclause(_131078,_131079), user )
5952d 259 0 CALL:  prolog:$imported_predicate(myclause(_131065,_131066,_131067), user, _1048301, _1048302 )
5953d 287 0 CALL:  prolog:$is_system_predicate(myclause(_131065,_131066,_131067), prolog )
5954d 287 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_131065,_131066,_131067), user, _1048301, _1048302 )
5955d 259 0 CALL:  prolog:$undefined(myclause(_131065,_131066,_131067), user )
5957d 236 0 CALL:  prolog:bb_delete(grounder:dep_proven, _130971 )
5958d 236 0 TRY_OR 
5959d 250 0 CALL:  prolog:==(236, 236 )
5960d 226 0 TRY_OR 
5961d 234 0 TRY_OR 
5962d 242 0 CALL:  prolog:==(true, true )
5964d 173 0 CALL:  logger:logger_stop_timer(train_bdd_script_generation_grounding )
5965d 173 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_grounding, _1048360 )
5966d 173 0 CALL:  prolog:bb_delete(logger:logger_start_time_train_bdd_script_generation_grounding, _1048363 )
5967d 173 0 CALL:  prolog:statistics(walltime, [_130966,_130968] )
5968d 173 0 CALL:  prolog:$walltime(_130966, _130968 )
5969d 173 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_grounding, null )
5970d 173 0 TRY_OR 
5971d 219 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation_grounding )
5972d 219 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_grounding, _1048349 )
5973d 219 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_grounding, _1048350 )
5974d 219 0 CALL:  prolog:\=(1838, null )
5975d 173 0 CALL:  logger:logger_get_variable(train_bdd_script_generation_grounding, _1048365 )
5976d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_grounding, _1048357 )
5977d 173 0 TRY_OR 
5978d 227 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_grounding, null )
5980d 227 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_grounding, _1048365 )
5981d 173 0 CALL:  logger:logger_set_variable_again(train_bdd_script_generation_grounding, 6169 )
5982d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_grounding, _1048358 )
5983d 173 0 TRY_OR 
5984d 227 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_grounding, _1048356 )
5985d 173 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation_grounding, 6169 )
5986d 173 0 CALL:  logger:logger_start_timer(train_bdd_script_generation_completion )
5987d 173 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_completion, _1048364 )
5988d 173 0 TRY_OR 
5989d 220 0 CALL:  prolog:bb_get(logger:logger_start_time_train_bdd_script_generation_completion, null )
5990d 173 0 CALL:  prolog:statistics(walltime, [_130985,_130987] )
5991d 173 0 CALL:  prolog:$walltime(_130985, _130987 )
5992d 173 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_completion, 346436 )
5993d 173 0 CALL:  print_learning:format_learning(5, c, [] )
5994d 212 0 CALL:  flags:problog_flag(verbosity_learning, _1048354 )
5995d 212 0 CALL:  gflags:flag_get(verbosity_learning, _1048354 )
5996d 212 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_130994), _130995 )
5997d 212 0 CALL:  prolog:>=(5, 5 )
5998d 173 0 CALL:  prolog:format(c, print_learning:[] )
5999d 173 0 CALL:  prolog:flush_output(user )
2:earthquake
2:calls(mary)
2: (person(mary),alarm,hears_alarm(mary))
2:person(mary)
2:true
2: (alarm,hears_alarm(mary))
2:alarm
2:burglary
2:hears_alarm(mary)
2:earthquake
2:hears_alarm(mary)
c6000d 173 0 CALL:  prolog:$current_choice_point(_1048373 )
6001d 173 0 CALL:  completion:completion(2 )
6002d 173 0 TRY_OR 
6003d 230 0 CALL:  grounder:grounder_reachable_atom(_1048356 )
6004d 230 0 CALL:  prolog:recorded(reachable, _1048356, _130999 )
+s 0x5602af28d370
 @0x7efdd88a31a8 0
+s 0x5602aeec6410
 @0x7efdd88a31a8 0
+s 0x5602af27fff0
 @0x7efdd88a31a8 0
+s 0x5602af2a1fb0
 @0x7efdd88a31a8 0
+s 0x5602af03be90
 @0x7efdd88a31a8 0
+s 0x5602aefeaa80
 @0x7efdd88a31a8 0
+s 0x5602aec1f700
 @0x7efdd88a31a8 0
+s 0x5602aec8ed70
 @0x7efdd88a31a8 0
- 0x5602af28d370
 @0x7efdd88a31a8 230
6005d 241 0 CALL:  grounder:grounder_completion_for_atom(hears_alarm(mary), 2, _1048357 )
6006d 241 0 CALL:  prolog:findall(_131005, grounder: (user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), _1048327 )
6007d 241 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048327 )
6008d 265 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048327 )
6009d 241 0 TRY_OR 
6010d 272 0 CALL:  error:has_type(list_or_partial_list, _1048327 )
6011d 272 0 CALL:  error:is_list_or_partial_list(_1048327 )
6012d 272 0 CALL:  prolog:$skip_list(_131022, _1048327, _131023 )
6013d 241 0 CALL:  prolog:$findall(_131005, grounder: (user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), [], _131023 )
6014d 241 0 CALL:  nb:nb_queue(_1048319 )
6015d 241 0 TRY_OR 
6016d 266 0 CALL:  prolog:$execute(grounder: (user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)) )
6017d 266 0 CALL:  prolog:$call(grounder: (user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), 266, grounder: (user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6018d 277 0 FAIL RETRY:  prolog:$call(grounder: (user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), 266, grounder: (user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6019d 266 0 CALL:  prolog:$call(user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005), 266, grounder: (user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6020d 266 0 CALL:  prolog:$call(user:myclause(2,hears_alarm(mary),_131018), 266, grounder: (user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6021d 308 0 FAIL RETRY:  prolog:$call(user:myclause(2,hears_alarm(mary),_131018), 266, grounder: (user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6022d 266 0 CALL:  prolog:$call(myclause(2,hears_alarm(mary),_131018), 266, grounder: (user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6023d 319 0 FAIL RETRY:  prolog:$call(myclause(2,hears_alarm(mary),_131018), 266, grounder: (user:myclause(2,hears_alarm(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6024d 266 0 CALL:  prolog:$execute0(myclause(2,hears_alarm(mary),_131018), user )
6025d 266 0 CALL:  user:myclause(2, hears_alarm(mary), _131018 )
6026d 266 0 CALL:  prolog:current_predicate(user:myclause/2 )
6027d 266 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048254, _1048253 )
6028d 266 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
6029d 266 0 TRY_OR 
6030d 338 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
6031d 347 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
6032d 338 0 TRY_OR 
6034d 338 0 CALL:  error:may_bind_to_type(atom, myclause )
6035d 355 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
6036d 338 0 CALL:  error:may_bind_to_type(integer, 2 )
6037d 347 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
6038d 266 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
6039d 266 0 TRY_OR 
6040d 332 0 CALL:  prolog:ground(myclause/2 )
6041d 266 0 CALL:  prolog:functor(_135131, myclause, 2 )
6042d 266 0 CALL:  prolog:current_predicate(myclause, user:myclause(_135132,_135133) )
6043d 266 0 CALL:  prolog:$yap_strip_module(user:myclause(_135132,_135133), _1048250, _1048249 )
6044d 266 0 CALL:  prolog:functor(myclause(_135132,_135133), myclause, _1048248 )
6045d 266 0 TRY_OR 
6046d 334 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_135132,_135133), user )
6047d 334 0 CALL:  user:myclause(hears_alarm(mary), _131018 )
6049d 266 0 CALL:  prolog:$imported_predicate(myclause(_135132,_135133), user, _1048253, _1048254 )
6050d 335 0 CALL:  prolog:$is_system_predicate(myclause(_135132,_135133), prolog )
6051d 335 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_135132,_135133), user, _1048253, _1048254 )
6052d 266 0 CALL:  prolog:$undefined(myclause(_135132,_135133), user )
6054d 241 0 CALL:  nb:nb_queue_close(queue(0,0,0,0), _131023, [] )
6055d 241 0 CALL:  prolog:\==([], [] )
6056d 241 0 FAIL RETRY:  idb:recorded(reachable, _1048356, _130999 )
6057d 241 0 CALL:  grounder:grounder_completion_for_atom(burglary, 2, _1048357 )
6058d 241 0 CALL:  prolog:findall(_131005, grounder: (user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), _1048327 )
6059d 241 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048327 )
6060d 265 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048327 )
6061d 241 0 TRY_OR 
6062d 272 0 CALL:  error:has_type(list_or_partial_list, _1048327 )
6063d 272 0 CALL:  error:is_list_or_partial_list(_1048327 )
6064d 272 0 CALL:  prolog:$skip_list(_131022, _1048327, _131023 )
6065d 241 0 CALL:  prolog:$findall(_131005, grounder: (user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), [], _131023 )
6066d 241 0 CALL:  nb:nb_queue(_1048319 )
6067d 241 0 TRY_OR 
6068d 266 0 CALL:  prolog:$execute(grounder: (user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)) )
6069d 266 0 CALL:  prolog:$call(grounder: (user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), 266, grounder: (user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6070d 277 0 FAIL RETRY:  prolog:$call(grounder: (user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), 266, grounder: (user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6071d 266 0 CALL:  prolog:$call(user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005), 266, grounder: (user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6072d 266 0 CALL:  prolog:$call(user:myclause(2,burglary,_131018), 266, grounder: (user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6073d 308 0 FAIL RETRY:  prolog:$call(user:myclause(2,burglary,_131018), 266, grounder: (user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6074d 266 0 CALL:  prolog:$call(myclause(2,burglary,_131018), 266, grounder: (user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6075d 319 0 FAIL RETRY:  prolog:$call(myclause(2,burglary,_131018), 266, grounder: (user:myclause(2,burglary,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6076d 266 0 CALL:  prolog:$execute0(myclause(2,burglary,_131018), user )
6077d 266 0 CALL:  user:myclause(2, burglary, _131018 )
6078d 266 0 CALL:  prolog:current_predicate(user:myclause/2 )
6079d 266 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048254, _1048253 )
6080d 266 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
6081d 266 0 TRY_OR 
6082d 338 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
6083d 347 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
6084d 338 0 TRY_OR 
6086d 338 0 CALL:  error:may_bind_to_type(atom, myclause )
6087d 355 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
6088d 338 0 CALL:  error:may_bind_to_type(integer, 2 )
6089d 347 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
6090d 266 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
6091d 266 0 TRY_OR 
6092d 332 0 CALL:  prolog:ground(myclause/2 )
6093d 266 0 CALL:  prolog:functor(_135131, myclause, 2 )
6094d 266 0 CALL:  prolog:current_predicate(myclause, user:myclause(_135132,_135133) )
6095d 266 0 CALL:  prolog:$yap_strip_module(user:myclause(_135132,_135133), _1048250, _1048249 )
6096d 266 0 CALL:  prolog:functor(myclause(_135132,_135133), myclause, _1048248 )
6097d 266 0 TRY_OR 
6098d 334 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_135132,_135133), user )
6099d 334 0 CALL:  user:myclause(burglary, _131018 )
6101d 266 0 CALL:  prolog:$imported_predicate(myclause(_135132,_135133), user, _1048253, _1048254 )
6102d 335 0 CALL:  prolog:$is_system_predicate(myclause(_135132,_135133), prolog )
6103d 335 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_135132,_135133), user, _1048253, _1048254 )
6104d 266 0 CALL:  prolog:$undefined(myclause(_135132,_135133), user )
6106d 241 0 CALL:  nb:nb_queue_close(queue(0,0,0,0), _131023, [] )
6107d 241 0 CALL:  prolog:\==([], [] )
6108d 241 0 FAIL RETRY:  idb:recorded(reachable, _1048356, _130999 )
6109d 241 0 CALL:  grounder:grounder_completion_for_atom(alarm, 2, _1048357 )
6110d 241 0 CALL:  prolog:findall(_131005, grounder: (user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), _1048327 )
6111d 241 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048327 )
6112d 265 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048327 )
6113d 241 0 TRY_OR 
6114d 272 0 CALL:  error:has_type(list_or_partial_list, _1048327 )
6115d 272 0 CALL:  error:is_list_or_partial_list(_1048327 )
6116d 272 0 CALL:  prolog:$skip_list(_131022, _1048327, _131023 )
6117d 241 0 CALL:  prolog:$findall(_131005, grounder: (user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), [], _131023 )
6118d 241 0 CALL:  nb:nb_queue(_1048319 )
6119d 241 0 TRY_OR 
6120d 266 0 CALL:  prolog:$execute(grounder: (user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)) )
6121d 266 0 CALL:  prolog:$call(grounder: (user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), 266, grounder: (user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6122d 277 0 FAIL RETRY:  prolog:$call(grounder: (user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), 266, grounder: (user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6123d 266 0 CALL:  prolog:$call(user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005), 266, grounder: (user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6124d 266 0 CALL:  prolog:$call(user:myclause(2,alarm,_131018), 266, grounder: (user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6125d 308 0 FAIL RETRY:  prolog:$call(user:myclause(2,alarm,_131018), 266, grounder: (user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6126d 266 0 CALL:  prolog:$call(myclause(2,alarm,_131018), 266, grounder: (user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6127d 319 0 FAIL RETRY:  prolog:$call(myclause(2,alarm,_131018), 266, grounder: (user:myclause(2,alarm,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6128d 266 0 CALL:  prolog:$execute0(myclause(2,alarm,_131018), user )
6129d 266 0 CALL:  user:myclause(2, alarm, _131018 )
6130d 266 0 CALL:  prolog:current_predicate(user:myclause/2 )
6131d 266 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048254, _1048253 )
6132d 266 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
6133d 266 0 TRY_OR 
6134d 338 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
6135d 347 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
6136d 338 0 TRY_OR 
6138d 338 0 CALL:  error:may_bind_to_type(atom, myclause )
6139d 355 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
6140d 338 0 CALL:  error:may_bind_to_type(integer, 2 )
6141d 347 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
6142d 266 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
6143d 266 0 TRY_OR 
6144d 332 0 CALL:  prolog:ground(myclause/2 )
6145d 266 0 CALL:  prolog:functor(_135131, myclause, 2 )
6146d 266 0 CALL:  prolog:current_predicate(myclause, user:myclause(_135132,_135133) )
6147d 266 0 CALL:  prolog:$yap_strip_module(user:myclause(_135132,_135133), _1048250, _1048249 )
6148d 266 0 CALL:  prolog:functor(myclause(_135132,_135133), myclause, _1048248 )
6149d 266 0 TRY_OR 
6150d 334 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_135132,_135133), user )
6151d 334 0 CALL:  user:myclause(alarm, _131018 )
6152d 343 0 CALL:  prolog:$call(grounder_ground_term_with_reachable_atoms(burglary,_131005), 266, grounder: (user:myclause(2,alarm,burglary),grounder_ground_term_with_reachable_atoms(burglary,_131005)), grounder )
6153d 354 0 FAIL RETRY:  prolog:$call(grounder_ground_term_with_reachable_atoms(burglary,_131005), 266, grounder: (user:myclause(2,alarm,burglary),grounder_ground_term_with_reachable_atoms(burglary,_131005)), grounder )
6154d 343 0 CALL:  prolog:$execute0(grounder_ground_term_with_reachable_atoms(burglary,_131005), grounder )
6155d 343 0 CALL:  grounder:grounder_ground_term_with_reachable_atoms(burglary, _131005 )
6156d 352 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(burglary, _131005 )
6157d 352 0 CALL:  prolog:predicate_property(grounder:burglary, built_in )
6158d 352 0 CALL:  prolog:strip_module(grounder:burglary, _135140, _135141 )
6159d 352 0 CALL:  prolog:$predicate_property2(burglary, built_in, grounder )
6160d 368 0 FAIL RETRY:  prolog:$predicate_property2(burglary, built_in, grounder )
6161d 368 0 FAIL RETRY:  prolog:$predicate_property2(burglary, built_in, grounder )
6162d 368 0 CALL:  prolog:$pred_exists(burglary, grounder )
6163d 368 0 FAIL RETRY:  prolog:$predicate_property2(burglary, built_in, grounder )
6164d 352 0 CALL:  prolog:$get_undefined_pred(burglary, grounder, _1048209, _1048210 )
6165d 352 0 CALL:  prolog:$get_undefined_predicates(burglary, grounder, _1048209, _1048210 )
6166d 382 0 CALL:  prolog:recorded('$import', '$import'(_135143,grounder,_135145,burglary,_135147,_135148), _1048183 )
6167d 382 0 FAIL RETRY:  prolog:$get_undefined_predicates(burglary, grounder, _1048209, _1048210 )
6168d 382 0 CALL:  prolog:$pred_exists(burglary, user )
6169d 352 0 TRY_OR 
6171d 352 0 CALL:  prolog:$predicate_property(burglary, user, user, built_in )
6172d 352 0 CALL:  prolog:$is_system_predicate(burglary, user )
6173d 352 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(burglary, _131005 )
6174d 343 0 CALL:  prolog:recorded(reachable, burglary, _135139 )
6175d 343 0 CALL:  nb:nb_queue_enqueue(queue(0,0,0,0), '$atom'(burglary) )
6176d 343 0 FAIL RETRY:  user:myclause(alarm, _131018 )
6177d 334 0 CALL:  prolog:$call(grounder_ground_term_with_reachable_atoms(earthquake,_131005), 266, grounder: (user:myclause(2,alarm,earthquake),grounder_ground_term_with_reachable_atoms(earthquake,_131005)), grounder )
6178d 345 0 FAIL RETRY:  prolog:$call(grounder_ground_term_with_reachable_atoms(earthquake,_131005), 266, grounder: (user:myclause(2,alarm,earthquake),grounder_ground_term_with_reachable_atoms(earthquake,_131005)), grounder )
6179d 334 0 CALL:  prolog:$execute0(grounder_ground_term_with_reachable_atoms(earthquake,_131005), grounder )
6180d 334 0 CALL:  grounder:grounder_ground_term_with_reachable_atoms(earthquake, _131005 )
6181d 343 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(earthquake, _131005 )
6182d 343 0 CALL:  prolog:predicate_property(grounder:earthquake, built_in )
6183d 343 0 CALL:  prolog:strip_module(grounder:earthquake, _135140, _135141 )
6184d 343 0 CALL:  prolog:$predicate_property2(earthquake, built_in, grounder )
6185d 359 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
6186d 359 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
6187d 359 0 CALL:  prolog:$pred_exists(earthquake, grounder )
6188d 359 0 FAIL RETRY:  prolog:$predicate_property2(earthquake, built_in, grounder )
6189d 343 0 CALL:  prolog:$get_undefined_pred(earthquake, grounder, _1048218, _1048219 )
6190d 343 0 CALL:  prolog:$get_undefined_predicates(earthquake, grounder, _1048218, _1048219 )
6191d 373 0 CALL:  prolog:recorded('$import', '$import'(_135143,grounder,_135145,earthquake,_135147,_135148), _1048192 )
6192d 373 0 FAIL RETRY:  prolog:$get_undefined_predicates(earthquake, grounder, _1048218, _1048219 )
6193d 373 0 CALL:  prolog:$pred_exists(earthquake, user )
6194d 343 0 TRY_OR 
6196d 343 0 CALL:  prolog:$predicate_property(earthquake, user, user, built_in )
6197d 343 0 CALL:  prolog:$is_system_predicate(earthquake, user )
6198d 343 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(earthquake, _131005 )
6199d 334 0 CALL:  prolog:recorded(reachable, earthquake, _135139 )
6200d 334 0 CALL:  nb:nb_queue_enqueue(queue(0,['$atom'(burglary) |_131032],_131032,1), '$atom'(earthquake) )
6202d 266 0 CALL:  prolog:$imported_predicate(myclause(_135132,_135133), user, _1048253, _1048254 )
6203d 335 0 CALL:  prolog:$is_system_predicate(myclause(_135132,_135133), prolog )
6204d 335 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_135132,_135133), user, _1048253, _1048254 )
6205d 266 0 CALL:  prolog:$undefined(myclause(_135132,_135133), user )
6207d 241 0 CALL:  nb:nb_queue_close(queue(0,['$atom'(burglary),'$atom'(earthquake) |_131036],_131036,2), _131023, [] )
6208d 241 0 CALL:  prolog:\==(['$atom'(burglary),'$atom'(earthquake)], [] )
6209d 241 0 CALL:  termhandling:list_to_disjunction(['$atom'(burglary),'$atom'(earthquake)], _131002 )
6210d 241 0 CALL:  termhandling:list_to_disjunction(['$atom'(earthquake)], _131039 )
6211d 241 0 TRY_OR 
6212d 249 0 CALL:  prolog:$current_choice_point(_1048353 )
6213d 249 0 CALL:  termhandling:propagate_interpretation(<=>('$atom'(alarm),('$atom'(burglary);'$atom'(earthquake))), 2, _1048358 )
6214d 249 0 CALL:  termhandling:propagate_interpretation('$atom'(alarm), 2, _131041 )
6215d 249 0 TRY_OR 
6216d 273 0 CALL:  user:known(2, alarm, _131041 )
6218d 249 0 CALL:  termhandling:propagate_interpretation('$atom'(burglary);'$atom'(earthquake), 2, _131042 )
6219d 249 0 CALL:  termhandling:propagate_interpretation('$atom'(burglary), 2, _131044 )
6220d 249 0 TRY_OR 
6221d 273 0 CALL:  user:known(2, burglary, _131044 )
6223d 249 0 CALL:  termhandling:propagate_interpretation('$atom'(earthquake), 2, _131045 )
6224d 249 0 TRY_OR 
6225d 265 0 CALL:  user:known(2, earthquake, _131045 )
6226d 249 0 CALL:  termhandling:simplify(<=>('$atom'(alarm),('$atom'(burglary);false)), _1048359, _1048354 )
6227d 259 0 CALL:  termhandling:simplify_intern(<=>('$atom'(alarm),('$atom'(burglary);false)), _1048309, _1048308 )
6228d 259 0 CALL:  termhandling:simplify_intern_implication('$atom'(alarm), '$atom'(burglary);false, _1048309, _1048308 )
6229d 278 0 FAIL RETRY:  termhandling:simplify_intern_implication('$atom'(alarm), '$atom'(burglary);false, _1048309, _1048308 )
6230d 278 0 FAIL RETRY:  termhandling:simplify_intern_implication('$atom'(alarm), '$atom'(burglary);false, _1048309, _1048308 )
6231d 259 0 CALL:  termhandling:simplify_intern('$atom'(burglary);false, _131048, _1048308 )
6232d 259 0 CALL:  termhandling:simplify_intern_or('$atom'(burglary), false, _131048, _1048308 )
6233d 278 0 FAIL RETRY:  termhandling:simplify_intern_or('$atom'(burglary), false, _131048, _1048308 )
6234d 259 0 CALL:  prolog:==(true, true )
6235d 249 0 CALL:  termhandling:simplify(<=>('$atom'(alarm),'$atom'(burglary)), _1048359, _131049 )
6236d 259 0 CALL:  termhandling:simplify_intern(<=>('$atom'(alarm),'$atom'(burglary)), _1048309, _1048308 )
6237d 259 0 CALL:  termhandling:simplify_intern_implication('$atom'(alarm), '$atom'(burglary), _1048309, _1048308 )
6238d 278 0 FAIL RETRY:  termhandling:simplify_intern_implication('$atom'(alarm), '$atom'(burglary), _1048309, _1048308 )
6239d 278 0 FAIL RETRY:  termhandling:simplify_intern_implication('$atom'(alarm), '$atom'(burglary), _1048309, _1048308 )
6240d 259 0 CALL:  termhandling:simplify_intern('$atom'(burglary), _131052, _1048308 )
6241d 259 0 CALL:  prolog:==(false, true )
6242d 259 0 FAIL RETRY:  termhandling:simplify(<=>('$atom'(alarm),'$atom'(burglary)), _1048359, _131049 )
6243d 249 0 TRY_OR 
6244d 257 0 CALL:  prolog:\==(<=>('$atom'(alarm),'$atom'(burglary)), false )
6245d 257 0 CALL:  completion:record_constraint_cs_check(<=>('$atom'(alarm),'$atom'(burglary)) )
6246d 257 0 CALL:  prolog:recorda(rules, <=>('$atom'(alarm),'$atom'(burglary)), _131050 )
+s 0x5602af28d780
 @0x7efdd88a3238 0
6247d 241 0 FAIL RETRY:  idb:recorded(reachable, _1048356, _130999 )
6248d 241 0 CALL:  grounder:grounder_completion_for_atom(person(mary), 2, _1048357 )
6249d 241 0 CALL:  prolog:findall(_131005, grounder: (user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), _1048327 )
6250d 241 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048327 )
6251d 265 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048327 )
6252d 241 0 TRY_OR 
6253d 272 0 CALL:  error:has_type(list_or_partial_list, _1048327 )
6254d 272 0 CALL:  error:is_list_or_partial_list(_1048327 )
6255d 272 0 CALL:  prolog:$skip_list(_131022, _1048327, _131023 )
6256d 241 0 CALL:  prolog:$findall(_131005, grounder: (user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), [], _131023 )
6257d 241 0 CALL:  nb:nb_queue(_1048319 )
6258d 241 0 TRY_OR 
6259d 266 0 CALL:  prolog:$execute(grounder: (user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)) )
6260d 266 0 CALL:  prolog:$call(grounder: (user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), 266, grounder: (user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6261d 277 0 FAIL RETRY:  prolog:$call(grounder: (user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), 266, grounder: (user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6262d 266 0 CALL:  prolog:$call(user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005), 266, grounder: (user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6263d 266 0 CALL:  prolog:$call(user:myclause(2,person(mary),_131018), 266, grounder: (user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6264d 308 0 FAIL RETRY:  prolog:$call(user:myclause(2,person(mary),_131018), 266, grounder: (user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6265d 266 0 CALL:  prolog:$call(myclause(2,person(mary),_131018), 266, grounder: (user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6266d 319 0 FAIL RETRY:  prolog:$call(myclause(2,person(mary),_131018), 266, grounder: (user:myclause(2,person(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6267d 266 0 CALL:  prolog:$execute0(myclause(2,person(mary),_131018), user )
6268d 266 0 CALL:  user:myclause(2, person(mary), _131018 )
6269d 266 0 CALL:  prolog:current_predicate(user:myclause/2 )
6270d 266 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048254, _1048253 )
6271d 266 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
6272d 266 0 TRY_OR 
6273d 338 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
6274d 347 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
6275d 338 0 TRY_OR 
6277d 338 0 CALL:  error:may_bind_to_type(atom, myclause )
6278d 355 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
6279d 338 0 CALL:  error:may_bind_to_type(integer, 2 )
6280d 347 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
6281d 266 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
6282d 266 0 TRY_OR 
6283d 332 0 CALL:  prolog:ground(myclause/2 )
6284d 266 0 CALL:  prolog:functor(_135131, myclause, 2 )
6285d 266 0 CALL:  prolog:current_predicate(myclause, user:myclause(_135132,_135133) )
6286d 266 0 CALL:  prolog:$yap_strip_module(user:myclause(_135132,_135133), _1048250, _1048249 )
6287d 266 0 CALL:  prolog:functor(myclause(_135132,_135133), myclause, _1048248 )
6288d 266 0 TRY_OR 
6289d 334 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_135132,_135133), user )
6290d 334 0 CALL:  user:myclause(person(mary), _131018 )
6291d 334 0 CALL:  prolog:$call(grounder_ground_term_with_reachable_atoms(true,_131005), 266, grounder: (user:myclause(2,person(mary),true),grounder_ground_term_with_reachable_atoms(true,_131005)), grounder )
6292d 345 0 FAIL RETRY:  prolog:$call(grounder_ground_term_with_reachable_atoms(true,_131005), 266, grounder: (user:myclause(2,person(mary),true),grounder_ground_term_with_reachable_atoms(true,_131005)), grounder )
6293d 334 0 CALL:  prolog:$execute0(grounder_ground_term_with_reachable_atoms(true,_131005), grounder )
6294d 334 0 CALL:  grounder:grounder_ground_term_with_reachable_atoms(true, _131005 )
6295d 343 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(true, _131005 )
6296d 343 0 CALL:  prolog:predicate_property(grounder:true, built_in )
6297d 343 0 CALL:  prolog:strip_module(grounder:true, _135140, _135141 )
6298d 343 0 CALL:  prolog:$predicate_property2(true, built_in, grounder )
6299d 359 0 FAIL RETRY:  prolog:$predicate_property2(true, built_in, grounder )
6300d 359 0 FAIL RETRY:  prolog:$predicate_property2(true, built_in, grounder )
6301d 359 0 CALL:  prolog:$pred_exists(true, grounder )
6302d 343 0 CALL:  prolog:$predicate_property(true, grounder, grounder, built_in )
6303d 343 0 CALL:  prolog:$is_system_predicate(true, grounder )
6304d 334 0 CALL:  prolog:call(grounder:true )
6305d 334 0 CALL:  prolog:$execute(grounder:true )
6306d 334 0 CALL:  nb:nb_queue_enqueue(queue(0,0,0,0), true )
6308d 266 0 CALL:  prolog:$imported_predicate(myclause(_135132,_135133), user, _1048253, _1048254 )
6309d 335 0 CALL:  prolog:$is_system_predicate(myclause(_135132,_135133), prolog )
6310d 335 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_135132,_135133), user, _1048253, _1048254 )
6311d 266 0 CALL:  prolog:$undefined(myclause(_135132,_135133), user )
6313d 241 0 CALL:  nb:nb_queue_close(queue(0,[true|_131030],_131030,1), _131023, [] )
6314d 241 0 CALL:  prolog:\==([true], [] )
6315d 241 0 CALL:  termhandling:list_to_disjunction([true], _131002 )
6316d 241 0 TRY_OR 
6317d 249 0 CALL:  prolog:$current_choice_point(_1048353 )
6318d 249 0 CALL:  termhandling:propagate_interpretation(<=>('$atom'(person(mary)),true), 2, _1048358 )
6319d 249 0 CALL:  termhandling:propagate_interpretation('$atom'(person(mary)), 2, _131032 )
6320d 249 0 TRY_OR 
6321d 273 0 CALL:  user:known(2, person(mary), _131032 )
6323d 249 0 CALL:  termhandling:propagate_interpretation(true, 2, _131033 )
6324d 249 0 CALL:  termhandling:simplify(<=>('$atom'(person(mary)),true), _1048359, _1048354 )
6325d 259 0 CALL:  termhandling:simplify_intern(<=>('$atom'(person(mary)),true), _1048309, _1048308 )
6326d 259 0 CALL:  termhandling:simplify_intern_implication('$atom'(person(mary)), true, _1048309, _1048308 )
6327d 259 0 CALL:  prolog:==(true, true )
6328d 249 0 CALL:  termhandling:simplify('$atom'(person(mary)), _1048359, _131034 )
6329d 259 0 CALL:  termhandling:simplify_intern('$atom'(person(mary)), _1048309, _1048308 )
6330d 259 0 CALL:  prolog:==(false, true )
6331d 259 0 FAIL RETRY:  termhandling:simplify('$atom'(person(mary)), _1048359, _131034 )
6332d 249 0 TRY_OR 
6333d 257 0 CALL:  prolog:\==('$atom'(person(mary)), false )
6334d 257 0 CALL:  completion:record_constraint_cs_check('$atom'(person(mary)) )
6335d 257 0 TRY_OR 
6336d 274 0 CALL:  prolog:recorded(unpropagated_rules, <=>('$atom'(person(mary)),_131037), _1048309 )
6338d 257 0 CALL:  prolog:recorda(unpropagated_rules, <=>('$atom'(person(mary)),true), _131038 )
+s 0x5602af01ad50
 @0x7efdd88a3238 0
6339d 241 0 FAIL RETRY:  idb:recorded(reachable, _1048356, _130999 )
6340d 241 0 CALL:  grounder:grounder_completion_for_atom(calls(mary), 2, _1048357 )
6341d 241 0 CALL:  prolog:findall(_131005, grounder: (user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), _1048327 )
6342d 241 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048327 )
6343d 265 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048327 )
6344d 241 0 TRY_OR 
6345d 272 0 CALL:  error:has_type(list_or_partial_list, _1048327 )
6346d 272 0 CALL:  error:is_list_or_partial_list(_1048327 )
6347d 272 0 CALL:  prolog:$skip_list(_131022, _1048327, _131023 )
6348d 241 0 CALL:  prolog:$findall(_131005, grounder: (user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), [], _131023 )
6349d 241 0 CALL:  nb:nb_queue(_1048319 )
6350d 241 0 TRY_OR 
6351d 266 0 CALL:  prolog:$execute(grounder: (user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)) )
6352d 266 0 CALL:  prolog:$call(grounder: (user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), 266, grounder: (user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6353d 277 0 FAIL RETRY:  prolog:$call(grounder: (user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), 266, grounder: (user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6354d 266 0 CALL:  prolog:$call(user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005), 266, grounder: (user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6355d 266 0 CALL:  prolog:$call(user:myclause(2,calls(mary),_131018), 266, grounder: (user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6356d 308 0 FAIL RETRY:  prolog:$call(user:myclause(2,calls(mary),_131018), 266, grounder: (user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6357d 266 0 CALL:  prolog:$call(myclause(2,calls(mary),_131018), 266, grounder: (user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6358d 319 0 FAIL RETRY:  prolog:$call(myclause(2,calls(mary),_131018), 266, grounder: (user:myclause(2,calls(mary),_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6359d 266 0 CALL:  prolog:$execute0(myclause(2,calls(mary),_131018), user )
6360d 266 0 CALL:  user:myclause(2, calls(mary), _131018 )
6361d 266 0 CALL:  prolog:current_predicate(user:myclause/2 )
6362d 266 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048254, _1048253 )
6363d 266 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
6364d 266 0 TRY_OR 
6365d 338 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
6366d 347 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
6367d 338 0 TRY_OR 
6369d 338 0 CALL:  error:may_bind_to_type(atom, myclause )
6370d 355 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
6371d 338 0 CALL:  error:may_bind_to_type(integer, 2 )
6372d 347 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
6373d 266 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
6374d 266 0 TRY_OR 
6375d 332 0 CALL:  prolog:ground(myclause/2 )
6376d 266 0 CALL:  prolog:functor(_135131, myclause, 2 )
6377d 266 0 CALL:  prolog:current_predicate(myclause, user:myclause(_135132,_135133) )
6378d 266 0 CALL:  prolog:$yap_strip_module(user:myclause(_135132,_135133), _1048250, _1048249 )
6379d 266 0 CALL:  prolog:functor(myclause(_135132,_135133), myclause, _1048248 )
6380d 266 0 TRY_OR 
6381d 334 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_135132,_135133), user )
6382d 334 0 CALL:  user:myclause(calls(mary), _131018 )
6383d 334 0 CALL:  prolog:$call(grounder_ground_term_with_reachable_atoms((person(mary),alarm,hears_alarm(mary)),_131005), 266, grounder: (user:myclause(2,calls(mary),(person(mary),alarm,hears_alarm(mary))),grounder_ground_term_with_reachable_atoms((person(mary),alarm,hears_alarm(mary)),_131005)), grounder )
6384d 345 0 FAIL RETRY:  prolog:$call(grounder_ground_term_with_reachable_atoms((person(mary),alarm,hears_alarm(mary)),_131005), 266, grounder: (user:myclause(2,calls(mary),(person(mary),alarm,hears_alarm(mary))),grounder_ground_term_with_reachable_atoms((person(mary),alarm,hears_alarm(mary)),_131005)), grounder )
6385d 334 0 CALL:  prolog:$execute0(grounder_ground_term_with_reachable_atoms((person(mary),alarm,hears_alarm(mary)),_131005), grounder )
6386d 334 0 CALL:  grounder:grounder_ground_term_with_reachable_atoms(person(mary),alarm,hears_alarm(mary), _131005 )
6387d 334 0 CALL:  grounder:grounder_ground_term_with_reachable_atoms(person(mary), _135148 )
6388d 359 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(person(mary), _135148 )
6389d 359 0 CALL:  prolog:predicate_property(grounder:person(mary), built_in )
6390d 359 0 CALL:  prolog:strip_module(grounder:person(mary), _135153, _135154 )
6391d 359 0 CALL:  prolog:$predicate_property2(person(mary), built_in, grounder )
6392d 375 0 FAIL RETRY:  prolog:$predicate_property2(person(mary), built_in, grounder )
6393d 375 0 FAIL RETRY:  prolog:$predicate_property2(person(mary), built_in, grounder )
6394d 375 0 CALL:  prolog:$pred_exists(person(mary), grounder )
6395d 375 0 FAIL RETRY:  prolog:$predicate_property2(person(mary), built_in, grounder )
6396d 359 0 CALL:  prolog:$get_undefined_pred(person(mary), grounder, _1048202, _1048203 )
6397d 359 0 CALL:  prolog:$get_undefined_predicates(person(mary), grounder, _1048202, _1048203 )
6398d 389 0 CALL:  prolog:recorded('$import', '$import'(_135156,grounder,_135158,person(mary),_135160,_135161), _1048176 )
6399d 389 0 FAIL RETRY:  prolog:$get_undefined_predicates(person(mary), grounder, _1048202, _1048203 )
6400d 389 0 CALL:  prolog:$pred_exists(person(mary), user )
6401d 389 0 FAIL RETRY:  prolog:$get_undefined_predicates(person(mary), grounder, _1048202, _1048203 )
6402d 389 0 CALL:  prolog:recorded('$dialect', swi, _1048171 )
6403d 389 0 FAIL RETRY:  prolog:$get_undefined_predicates(person(mary), grounder, _1048202, _1048203 )
6404d 359 0 CALL:  prolog:$parent_module(grounder, _1048189 )
6405d 359 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(person(mary), _135148 )
6406d 334 0 CALL:  prolog:recorded(reachable, person(mary), _135152 )
6407d 334 0 CALL:  grounder:grounder_ground_term_with_reachable_atoms(alarm,hears_alarm(mary), _135149 )
6408d 334 0 CALL:  grounder:grounder_ground_term_with_reachable_atoms(alarm, _135154 )
6409d 359 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(alarm, _135154 )
6410d 359 0 CALL:  prolog:predicate_property(grounder:alarm, built_in )
6411d 359 0 CALL:  prolog:strip_module(grounder:alarm, _135159, _135160 )
6412d 359 0 CALL:  prolog:$predicate_property2(alarm, built_in, grounder )
6413d 375 0 FAIL RETRY:  prolog:$predicate_property2(alarm, built_in, grounder )
6414d 375 0 FAIL RETRY:  prolog:$predicate_property2(alarm, built_in, grounder )
6415d 375 0 CALL:  prolog:$pred_exists(alarm, grounder )
6416d 375 0 FAIL RETRY:  prolog:$predicate_property2(alarm, built_in, grounder )
6417d 359 0 CALL:  prolog:$get_undefined_pred(alarm, grounder, _1048202, _1048203 )
6418d 359 0 CALL:  prolog:$get_undefined_predicates(alarm, grounder, _1048202, _1048203 )
6419d 389 0 CALL:  prolog:recorded('$import', '$import'(_135162,grounder,_135164,alarm,_135166,_135167), _1048176 )
6420d 389 0 FAIL RETRY:  prolog:$get_undefined_predicates(alarm, grounder, _1048202, _1048203 )
6421d 389 0 CALL:  prolog:$pred_exists(alarm, user )
6422d 389 0 FAIL RETRY:  prolog:$get_undefined_predicates(alarm, grounder, _1048202, _1048203 )
6423d 389 0 CALL:  prolog:recorded('$dialect', swi, _1048171 )
6424d 389 0 FAIL RETRY:  prolog:$get_undefined_predicates(alarm, grounder, _1048202, _1048203 )
6425d 359 0 CALL:  prolog:$parent_module(grounder, _1048189 )
6426d 359 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(alarm, _135154 )
6427d 334 0 CALL:  prolog:recorded(reachable, alarm, _135158 )
6428d 334 0 CALL:  grounder:grounder_ground_term_with_reachable_atoms(hears_alarm(mary), _135155 )
6429d 343 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(hears_alarm(mary), _135155 )
6430d 343 0 CALL:  prolog:predicate_property(grounder:hears_alarm(mary), built_in )
6431d 343 0 CALL:  prolog:strip_module(grounder:hears_alarm(mary), _135162, _135163 )
6432d 343 0 CALL:  prolog:$predicate_property2(hears_alarm(mary), built_in, grounder )
6433d 359 0 FAIL RETRY:  prolog:$predicate_property2(hears_alarm(mary), built_in, grounder )
6434d 359 0 FAIL RETRY:  prolog:$predicate_property2(hears_alarm(mary), built_in, grounder )
6435d 359 0 CALL:  prolog:$pred_exists(hears_alarm(mary), grounder )
6436d 359 0 FAIL RETRY:  prolog:$predicate_property2(hears_alarm(mary), built_in, grounder )
6437d 343 0 CALL:  prolog:$get_undefined_pred(hears_alarm(mary), grounder, _1048218, _1048219 )
6438d 343 0 CALL:  prolog:$get_undefined_predicates(hears_alarm(mary), grounder, _1048218, _1048219 )
6439d 373 0 CALL:  prolog:recorded('$import', '$import'(_135165,grounder,_135167,hears_alarm(mary),_135169,_135170), _1048192 )
6440d 373 0 FAIL RETRY:  prolog:$get_undefined_predicates(hears_alarm(mary), grounder, _1048218, _1048219 )
6441d 373 0 CALL:  prolog:$pred_exists(hears_alarm(mary), user )
6442d 343 0 TRY_OR 
6444d 343 0 CALL:  prolog:$predicate_property(hears_alarm(mary), user, user, built_in )
6445d 343 0 CALL:  prolog:$is_system_predicate(hears_alarm(mary), user )
6446d 343 0 FAIL RETRY:  grounder:grounder_ground_term_with_reachable_atoms(hears_alarm(mary), _135155 )
6447d 334 0 CALL:  prolog:recorded(reachable, hears_alarm(mary), _135161 )
6448d 334 0 CALL:  nb:nb_queue_enqueue(queue(0,0,0,0), '$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)) )
6450d 266 0 CALL:  prolog:$imported_predicate(myclause(_135132,_135133), user, _1048253, _1048254 )
6451d 335 0 CALL:  prolog:$is_system_predicate(myclause(_135132,_135133), prolog )
6452d 335 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_135132,_135133), user, _1048253, _1048254 )
6453d 266 0 CALL:  prolog:$undefined(myclause(_135132,_135133), user )
6455d 241 0 CALL:  nb:nb_queue_close(queue(0,[('$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary))) |_131046],_131046,1), _131023, [] )
6456d 241 0 CALL:  prolog:\==([('$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)))], [] )
6457d 241 0 CALL:  termhandling:list_to_disjunction([('$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)))], _131002 )
6458d 241 0 TRY_OR 
6459d 249 0 CALL:  prolog:$current_choice_point(_1048353 )
6460d 249 0 CALL:  termhandling:propagate_interpretation(<=>('$atom'(calls(mary)),('$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)))), 2, _1048358 )
6461d 249 0 CALL:  termhandling:propagate_interpretation('$atom'(calls(mary)), 2, _131048 )
6462d 249 0 TRY_OR 
6463d 273 0 CALL:  user:known(2, calls(mary), _131048 )
6464d 249 0 CALL:  termhandling:propagate_interpretation('$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)), 2, _131049 )
6465d 249 0 CALL:  termhandling:propagate_interpretation('$atom'(person(mary)), 2, _131051 )
6466d 249 0 TRY_OR 
6467d 273 0 CALL:  user:known(2, person(mary), _131051 )
6469d 249 0 CALL:  termhandling:propagate_interpretation('$atom'(alarm),'$atom'(hears_alarm(mary)), 2, _131052 )
6470d 249 0 CALL:  termhandling:propagate_interpretation('$atom'(alarm), 2, _131054 )
6471d 249 0 TRY_OR 
6472d 273 0 CALL:  user:known(2, alarm, _131054 )
6474d 249 0 CALL:  termhandling:propagate_interpretation('$atom'(hears_alarm(mary)), 2, _131055 )
6475d 249 0 TRY_OR 
6476d 265 0 CALL:  user:known(2, hears_alarm(mary), _131055 )
6478d 249 0 CALL:  termhandling:simplify(<=>(true,('$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)))), _1048359, _1048354 )
6479d 259 0 CALL:  termhandling:simplify_intern(<=>(true,('$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)))), _1048309, _1048308 )
6480d 259 0 CALL:  termhandling:simplify_intern_implication(true, '$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)), _1048309, _1048308 )
6481d 259 0 CALL:  prolog:==(true, true )
6482d 249 0 CALL:  termhandling:simplify('$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)), _1048359, _131056 )
6483d 259 0 CALL:  termhandling:simplify_intern('$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)), _1048309, _1048308 )
6484d 259 0 CALL:  termhandling:simplify_intern_and('$atom'(person(mary)), '$atom'(alarm),'$atom'(hears_alarm(mary)), _1048309, _1048308 )
+s 0x5602af28dc40
 @0x7efdd88a3238 0
+s 0x5602af2ace20
 @0x7efdd88a3238 0
- 0x5602af2ace20
 @0x7efdd88a3238 259
+s 0x5602af2acf90
 @0x7efdd88a3238 0
+s 0x5602af28c380
 @0x7efdd88a3238 0
- 0x5602af28dc40
 @0x7efdd88a3238 259
6485d 278 0 FAIL RETRY:  termhandling:simplify_intern_and('$atom'(person(mary)), '$atom'(alarm),'$atom'(hears_alarm(mary)), _1048309, _1048308 )
6486d 278 0 FAIL RETRY:  termhandling:simplify_intern_and('$atom'(person(mary)), '$atom'(alarm),'$atom'(hears_alarm(mary)), _1048309, _1048308 )
6487d 259 0 CALL:  termhandling:simplify_intern('$atom'(person(mary)), _131058, _1048300 )
6488d 259 0 CALL:  termhandling:simplify_intern('$atom'(alarm),'$atom'(hears_alarm(mary)), _131059, _1048301 )
6489d 259 0 CALL:  termhandling:simplify_intern_and('$atom'(alarm), '$atom'(hears_alarm(mary)), _131059, _1048301 )
6490d 286 0 FAIL RETRY:  termhandling:simplify_intern_and('$atom'(alarm), '$atom'(hears_alarm(mary)), _131059, _1048301 )
6491d 286 0 FAIL RETRY:  termhandling:simplify_intern_and('$atom'(alarm), '$atom'(hears_alarm(mary)), _131059, _1048301 )
6492d 259 0 CALL:  termhandling:simplify_intern('$atom'(alarm), _131061, _1048292 )
6493d 259 0 CALL:  termhandling:simplify_intern('$atom'(hears_alarm(mary)), _131062, _1048293 )
6494d 259 0 CALL:  termhandling:or(false, false, _1048301 )
6495d 259 0 CALL:  termhandling:or(false, false, _1048308 )
6496d 259 0 CALL:  prolog:==(false, true )
6497d 259 0 FAIL RETRY:  termhandling:simplify('$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)), _1048359, _131056 )
6498d 249 0 TRY_OR 
6499d 257 0 CALL:  prolog:\==('$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)), false )
6500d 257 0 CALL:  completion:record_constraint_cs_check('$atom'(person(mary)),'$atom'(alarm),'$atom'(hears_alarm(mary)) )
6501d 257 0 CALL:  completion:record_constraint_cs_check('$atom'(person(mary)) )
6502d 257 0 TRY_OR 
6503d 280 0 CALL:  prolog:recorded(unpropagated_rules, <=>('$atom'(person(mary)),_131059), _1048303 )
6504d 257 0 CALL:  prolog:==(true, true )
6505d 257 0 CALL:  completion:record_constraint_cs_check('$atom'(alarm),'$atom'(hears_alarm(mary)) )
6506d 257 0 CALL:  completion:record_constraint_cs_check('$atom'(alarm) )
6507d 257 0 TRY_OR 
6508d 280 0 CALL:  prolog:recorded(unpropagated_rules, <=>('$atom'(alarm),_131062), _1048303 )
6510d 257 0 CALL:  prolog:recorda(unpropagated_rules, <=>('$atom'(alarm),true), _131063 )
+s 0x5602af28dc40
 @0x7efdd88a3248 0
6511d 257 0 CALL:  completion:record_constraint_cs_check('$atom'(hears_alarm(mary)) )
6512d 257 0 TRY_OR 
6513d 274 0 CALL:  prolog:recorded(unpropagated_rules, <=>('$atom'(hears_alarm(mary)),_131066), _1048309 )
+s 0x5602af2ad980
 @0x7efdd88a3258 0
+s 0x5602af2adc30
 @0x7efdd88a3258 0
- 0x5602af2adc30
 @0x7efdd88a3258 274
+s 0x5602af2aca20
 @0x7efdd88a3258 0
+s 0x5602af2adc30
 @0x7efdd88a3258 0
- 0x5602af2adc30
 @0x7efdd88a3258 274
+s 0x5602af29a880
 @0x7efdd88a3258 0
+s 0x5602af2adc30
 @0x7efdd88a3258 0
- 0x5602af2adc30
 @0x7efdd88a3258 274
+s 0x5602af159630
 @0x7efdd88a3258 0
+s 0x5602aeff6af0
 @0x7efdd88a3258 0
+s 0x5602af239da0
 @0x7efdd88a3258 0
- 0x5602af2ad980
 @0x7efdd88a3258 274
6515d 257 0 CALL:  prolog:recorda(unpropagated_rules, <=>('$atom'(hears_alarm(mary)),true), _131067 )
+s 0x5602af2aaeb0
 @0x7efdd88a3258 0
+s 0x5602af2aa660
 @0x7efdd88a3258 0
- 0x5602aeff6af0
 @0x7efdd88a3258 257
6516d 241 0 FAIL RETRY:  idb:recorded(reachable, _1048356, _130999 )
6517d 230 0 CALL:  grounder:grounder_completion_for_atom(earthquake, 2, _1048357 )
6518d 230 0 CALL:  prolog:findall(_131005, grounder: (user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), _1048338 )
6519d 230 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048338 )
6520d 254 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048338 )
6521d 230 0 TRY_OR 
6522d 261 0 CALL:  error:has_type(list_or_partial_list, _1048338 )
6523d 261 0 CALL:  error:is_list_or_partial_list(_1048338 )
6524d 261 0 CALL:  prolog:$skip_list(_131022, _1048338, _131023 )
6525d 230 0 CALL:  prolog:$findall(_131005, grounder: (user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), [], _131023 )
6526d 230 0 CALL:  nb:nb_queue(_1048330 )
6527d 230 0 TRY_OR 
6528d 255 0 CALL:  prolog:$execute(grounder: (user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)) )
6529d 255 0 CALL:  prolog:$call(grounder: (user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), 255, grounder: (user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6530d 266 0 FAIL RETRY:  prolog:$call(grounder: (user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), 255, grounder: (user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6531d 255 0 CALL:  prolog:$call(user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005), 255, grounder: (user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6532d 255 0 CALL:  prolog:$call(user:myclause(2,earthquake,_131018), 255, grounder: (user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6533d 297 0 FAIL RETRY:  prolog:$call(user:myclause(2,earthquake,_131018), 255, grounder: (user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), grounder )
6534d 255 0 CALL:  prolog:$call(myclause(2,earthquake,_131018), 255, grounder: (user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6535d 308 0 FAIL RETRY:  prolog:$call(myclause(2,earthquake,_131018), 255, grounder: (user:myclause(2,earthquake,_131018),grounder_ground_term_with_reachable_atoms(_131018,_131005)), user )
6536d 255 0 CALL:  prolog:$execute0(myclause(2,earthquake,_131018), user )
6537d 255 0 CALL:  user:myclause(2, earthquake, _131018 )
6538d 255 0 CALL:  prolog:current_predicate(user:myclause/2 )
6539d 255 0 CALL:  prolog:$yap_strip_module(user:myclause/2, _1048265, _1048264 )
6540d 255 0 CALL:  prolog:must_bind_to_type(predicate_indicator, myclause/2 )
6541d 255 0 TRY_OR 
6542d 327 0 CALL:  error:may_bind_to_type(predicate_indicator, myclause/2 )
6543d 336 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, myclause/2 )
6544d 327 0 TRY_OR 
6546d 327 0 CALL:  error:may_bind_to_type(atom, myclause )
6547d 344 0 FAIL RETRY:  error:may_bind_to_type(atom, myclause )
6548d 327 0 CALL:  error:may_bind_to_type(integer, 2 )
6549d 336 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
6550d 255 0 CALL:  prolog:$c_i_predicate(myclause/2, user )
6551d 255 0 TRY_OR 
6552d 321 0 CALL:  prolog:ground(myclause/2 )
6553d 255 0 CALL:  prolog:functor(_135131, myclause, 2 )
6554d 255 0 CALL:  prolog:current_predicate(myclause, user:myclause(_135132,_135133) )
6555d 255 0 CALL:  prolog:$yap_strip_module(user:myclause(_135132,_135133), _1048261, _1048260 )
6556d 255 0 CALL:  prolog:functor(myclause(_135132,_135133), myclause, _1048259 )
6557d 255 0 TRY_OR 
6558d 323 0 CALL:  prolog:$current_predicate(myclause, user, myclause(_135132,_135133), user )
6559d 323 0 CALL:  user:myclause(earthquake, _131018 )
6561d 255 0 CALL:  prolog:$imported_predicate(myclause(_135132,_135133), user, _1048264, _1048265 )
6562d 324 0 CALL:  prolog:$is_system_predicate(myclause(_135132,_135133), prolog )
6563d 324 0 FAIL RETRY:  prolog:$imported_predicate(myclause(_135132,_135133), user, _1048264, _1048265 )
6564d 255 0 CALL:  prolog:$undefined(myclause(_135132,_135133), user )
6566d 230 0 CALL:  nb:nb_queue_close(queue(0,0,0,0), _131023, [] )
6567d 230 0 CALL:  prolog:\==([], [] )
6569d 173 0 TRY_OR 
6570d 221 0 CALL:  user:known(2, _1048363, _1048364 )
6571d 231 0 TRY_OR 
6572d 239 0 CALL:  prolog:recorda(known_atoms, <=>('$atom'(earthquake),false), _1048365 )
+s 0x5602af265b10
 @0x7efdd88a31c8 0
6573d 231 0 FAIL RETRY:  user:known(2, _1048363, _1048364 )
6574d 221 0 TRY_OR 
6575d 229 0 CALL:  prolog:recorda(known_atoms, <=>('$atom'(calls(mary)),true), _1048365 )
+s 0x5602af266c50
 @0x7efdd88a31c8 0
6577d 173 0 CALL:  logger:logger_stop_timer(train_bdd_script_generation_completion )
6578d 173 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_completion, _1048362 )
6579d 173 0 CALL:  prolog:bb_delete(logger:logger_start_time_train_bdd_script_generation_completion, _1048365 )
6580d 173 0 CALL:  prolog:statistics(walltime, [_131002,_131004] )
6581d 173 0 CALL:  prolog:$walltime(_131002, _131004 )
6582d 173 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_completion, null )
6583d 173 0 TRY_OR 
6584d 217 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation_completion )
6585d 217 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_completion, _1048351 )
6586d 217 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_completion, _1048352 )
6587d 217 0 CALL:  prolog:\=(1698, null )
6588d 173 0 CALL:  logger:logger_get_variable(train_bdd_script_generation_completion, _1048367 )
6589d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_completion, _1048359 )
6590d 173 0 TRY_OR 
6591d 225 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_completion, null )
6593d 225 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_completion, _1048367 )
6594d 173 0 CALL:  logger:logger_set_variable_again(train_bdd_script_generation_completion, 5417 )
6595d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_completion, _1048360 )
6596d 173 0 TRY_OR 
6597d 225 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_completion, _1048358 )
6598d 173 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation_completion, 5417 )
6599d 173 0 CALL:  grounder:grounder_reset
6600d 173 0 CALL:  prolog:eraseall(reachable )
- 0x5602af27fff0
 @0x7efdd88a31a8 173
- 0x5602af2a1fb0
 @0x7efdd88a31a8 173
- 0x5602af03be90
 @0x7efdd88a31a8 173
- 0x5602aefeaa80
 @0x7efdd88a31a8 173
- 0x5602aec1f700
 @0x7efdd88a31a8 173
- 0x5602aec8ed70
 @0x7efdd88a31a8 173
- 0x5602aeec6410
 @0x7efdd88a31a8 173
- 0x5602af08ccb0
 @0x7efdd88a31a8 173
- 0x5602af233b50
 @0x7efdd88a31a8 173
- 0x5602af28ce10
 @0x7efdd88a31a8 173
- 0x5602af266af0
 @0x7efdd88a31a8 173
- 0x5602af233a50
 @0x7efdd88a31a8 173
- 0x5602af2339c0
 @0x7efdd88a31a8 173
- 0x5602af2666d0
 @0x7efdd88a31a8 173
- 0x5602af28dfd0
 @0x7efdd88a31a8 173
- 0x5602af28e320
 @0x7efdd88a31a8 173
6601d 173 0 CALL:  prolog:garbage_collect_atoms
6602d 173 0 CALL:  prolog:$atom_gc
- 0x5602aeb49e10
 @0x7efdd88a31a8 173
- 0x5602af229bb0
 @0x7efdd88a31a8 173
- 0x5602aebb3a40
 @0x7efdd88a31a8 173
- 0x5602af20ebd0
 @0x7efdd88a31a8 173
- 0x5602af26d2e0
 @0x7efdd88a31a8 173
- 0x5602af26d4d0
 @0x7efdd88a31a8 173
- 0x5602af281820
 @0x7efdd88a31a8 173
- 0x5602af22d6a0
 @0x7efdd88a31a8 173
- 0x5602af222600
 @0x7efdd88a31a8 173
- 0x5602af267be0
 @0x7efdd88a31a8 173
- 0x5602af226060
 @0x7efdd88a31a8 173
- 0x5602af275d90
 @0x7efdd88a31a8 173
- 0x5602af27f850
 @0x7efdd88a31a8 173
- 0x5602af20eb60
 @0x7efdd88a31a8 173
6603d 173 0 CALL:  flags:problog_flag(propagate_known, _1048375 )
6604d 173 0 CALL:  gflags:flag_get(propagate_known, _1048375 )
6605d 173 0 CALL:  prolog:recorded(flag_values, flag(propagate_known,_131020), _131021 )
6606d 173 0 TRY_OR 
6607d 208 0 CALL:  prolog:==(true, true )
6608d 173 0 CALL:  logger:logger_start_timer(train_bdd_script_generation_propagation )
6609d 173 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_propagation, _1048367 )
6610d 173 0 TRY_OR 
6611d 217 0 CALL:  prolog:bb_get(logger:logger_start_time_train_bdd_script_generation_propagation, null )
6612d 173 0 CALL:  prolog:statistics(walltime, [_131025,_131027] )
6613d 173 0 CALL:  prolog:$walltime(_131025, _131027 )
6614d 173 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_propagation, 357409 )
6615d 173 0 CALL:  print_learning:format_learning(5, p, [] )
6616d 209 0 CALL:  flags:problog_flag(verbosity_learning, _1048357 )
6617d 209 0 CALL:  gflags:flag_get(verbosity_learning, _1048357 )
6618d 209 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_131034), _131035 )
6619d 209 0 CALL:  prolog:>=(5, 5 )
6620d 173 0 CALL:  prolog:format(p, print_learning:[] )
6621d 173 0 CALL:  prolog:flush_output(user )
p6622d 173 0 CALL:  prolog:$current_choice_point(_1048376 )
6623d 173 0 CALL:  completion:propagate
6624d 207 0 CALL:  flags:problog_flag(propagate_det, true )
6625d 207 0 CALL:  gflags:flag_get(propagate_det, true )
6626d 207 0 CALL:  prolog:recorded(flag_values, flag(propagate_det,true), _131042 )
6627d 173 0 TRY_OR 
6628d 224 0 CALL:  prolog:$current_choice_point(_1048359 )
6629d 224 0 CALL:  completion:propagate_intern_known(_1048360 )
6630d 232 0 CALL:  prolog:recorded(unpropagated_rules, <=>(_131044,_131045), _1048323 )
+s 0x5602af226060
 @0x7efdd88a31e8 0
+s 0x5602af2adaa0
 @0x7efdd88a31e8 0
- 0x5602af2adaa0
 @0x7efdd88a31e8 232
+s 0x5602af222600
 @0x7efdd88a31e8 0
+s 0x5602af2339c0
 @0x7efdd88a31e8 0
- 0x5602af226060
 @0x7efdd88a31e8 232
+s 0x5602af226060
 @0x7efdd88a31e8 0
+s 0x5602aeec6410
 @0x7efdd88a31e8 0
+s 0x5602af2afee0
 @0x7efdd88a31e8 0
+s 0x5602af2afd30
 @0x7efdd88a31e8 0
+s 0x5602af1de3e0
 @0x7efdd88a31e8 0
- 0x5602af226060
 @0x7efdd88a31e8 232
6631d 224 0 CALL:  prolog:erase('$dbref'(0x5602af2aaeb0,1) )
- 0x5602af2afee0
 @0x7efdd88a31f8 224
- 0x5602af2afd30
 @0x7efdd88a31f8 224
- 0x5602af1de3e0
 @0x7efdd88a31f8 224
- 0x5602aeec6410
 @0x7efdd88a31f8 224
- 0x5602af222600
 @0x7efdd88a31f8 224
- 0x5602af2339c0
 @0x7efdd88a31f8 224
- 0x5602af2aa660
 @0x7efdd88a31f8 224
- 0x5602af159630
 @0x7efdd88a31f8 224
- 0x5602af29a880
 @0x7efdd88a31f8 224
- 0x5602af2aca20
 @0x7efdd88a31f8 224
- 0x5602af239da0
 @0x7efdd88a31f8 224
6632d 224 0 CALL:  prolog:recorda(known_atoms, <=>('$atom'(hears_alarm(mary)),true), _1048325 )
+s 0x5602af266d10
 @0x7efdd88a31f8 0
6633d 224 0 TRY_OR 
6634d 257 0 CALL:  prolog:recorded(rules, _1048335, _1048327 )
6635d 257 0 CALL:  prolog:$current_choice_point(_1048326 )
6636d 257 0 CALL:  termhandling:propagate(<=>('$atom'(alarm),'$atom'(burglary)), '$atom'(hears_alarm(mary)), true, _1048328, true )
+s 0x5602af28c980
 @0x7efdd88a3248 0
+s 0x5602af2aa660
 @0x7efdd88a3248 0
- 0x5602af2aa660
 @0x7efdd88a3248 257
+s 0x5602aeff1e90
 @0x7efdd88a3248 0
+s 0x5602af2339c0
 @0x7efdd88a3248 0
+s 0x5602af266dd0
 @0x7efdd88a3248 0
- 0x5602af28c980
 @0x7efdd88a3248 257
6637d 257 0 CALL:  termhandling:propagate('$atom'(alarm), '$atom'(hears_alarm(mary)), true, _131047, _1048310 )
6638d 257 0 TRY_OR 
6639d 285 0 CALL:  prolog:==(alarm, hears_alarm(mary) )
6641d 257 0 CALL:  termhandling:propagate('$atom'(burglary), '$atom'(hears_alarm(mary)), true, _131048, _1048311 )
6642d 257 0 TRY_OR 
6643d 281 0 CALL:  prolog:==(burglary, hears_alarm(mary) )
6645d 257 0 CALL:  termhandling:or(false, false, true )
6647d 224 0 CALL:  prolog:==(true, false )
- 0x5602af2aaeb0
 @0x7efdd88a3208 224
6649d 224 0 CALL:  prolog:$current_choice_point(_1048359 )
6650d 224 0 CALL:  completion:propagate_intern_known(_1048360 )
6651d 232 0 CALL:  prolog:recorded(unpropagated_rules, <=>(_131044,_131045), _1048323 )
+s 0x5602af2afbc0
 @0x7efdd88a31e8 0
+s 0x5602af2b02c0
 @0x7efdd88a31e8 0
- 0x5602af2b02c0
 @0x7efdd88a31e8 232
+s 0x5602af222600
 @0x7efdd88a31e8 0
+s 0x5602af2b02c0
 @0x7efdd88a31e8 0
- 0x5602af2b02c0
 @0x7efdd88a31e8 232
+s 0x5602af226060
 @0x7efdd88a31e8 0
+s 0x5602af2669e0
 @0x7efdd88a31e8 0
- 0x5602af2afbc0
 @0x7efdd88a31e8 232
+s 0x5602af2afbc0
 @0x7efdd88a31e8 0
+s 0x5602af2b02c0
 @0x7efdd88a31e8 0
- 0x5602af2b02c0
 @0x7efdd88a31e8 232
+s 0x5602af22d6a0
 @0x7efdd88a31e8 0
+s 0x5602af266e90
 @0x7efdd88a31e8 0
- 0x5602af2afbc0
 @0x7efdd88a31e8 232
+s 0x5602af2afbc0
 @0x7efdd88a31e8 0
+s 0x5602aeec6410
 @0x7efdd88a31e8 0
+s 0x5602af2b02c0
 @0x7efdd88a31e8 0
+s 0x5602af2afd30
 @0x7efdd88a31e8 0
- 0x5602af2afbc0
 @0x7efdd88a31e8 232
6652d 224 0 CALL:  prolog:erase('$dbref'(0x5602af28dc40,1) )
- 0x5602af2b02c0
 @0x7efdd88a31f8 224
- 0x5602af2afd30
 @0x7efdd88a31f8 224
- 0x5602aeec6410
 @0x7efdd88a31f8 224
- 0x5602af22d6a0
 @0x7efdd88a31f8 224
- 0x5602af266e90
 @0x7efdd88a31f8 224
- 0x5602af226060
 @0x7efdd88a31f8 224
- 0x5602af222600
 @0x7efdd88a31f8 224
- 0x5602af2669e0
 @0x7efdd88a31f8 224
6653d 224 0 CALL:  prolog:recorda(known_atoms, <=>('$atom'(alarm),true), _1048325 )
+s 0x5602af266e90
 @0x7efdd88a31f8 0
6654d 224 0 TRY_OR 
6655d 257 0 CALL:  prolog:recorded(rules, _1048335, _1048327 )
6656d 257 0 CALL:  prolog:$current_choice_point(_1048326 )
6657d 257 0 CALL:  termhandling:propagate(<=>('$atom'(alarm),'$atom'(burglary)), '$atom'(alarm), true, _1048328, true )
6658d 257 0 CALL:  termhandling:propagate('$atom'(alarm), '$atom'(alarm), true, _131047, _1048310 )
6659d 257 0 TRY_OR 
6660d 285 0 CALL:  prolog:==(alarm, alarm )
6661d 257 0 CALL:  termhandling:propagate('$atom'(burglary), '$atom'(alarm), true, _131048, _1048311 )
6662d 257 0 TRY_OR 
6663d 281 0 CALL:  prolog:==(burglary, alarm )
6665d 257 0 CALL:  termhandling:or(true, false, true )
6666d 257 0 TRY_OR 
6667d 265 0 CALL:  prolog:erase('$dbref'(0x5602af28d780,0) )
6668d 265 0 CALL:  prolog:$current_choice_point(_1048330 )
6669d 265 0 CALL:  termhandling:simplify(<=>(true,'$atom'(burglary)), _1048331, _1048329 )
6670d 275 0 CALL:  termhandling:simplify_intern(<=>(true,'$atom'(burglary)), _1048293, _1048292 )
6671d 275 0 CALL:  termhandling:simplify_intern_implication(true, '$atom'(burglary), _1048293, _1048292 )
6672d 275 0 CALL:  prolog:==(true, true )
6673d 265 0 CALL:  termhandling:simplify('$atom'(burglary), _1048331, _131049 )
6674d 275 0 CALL:  termhandling:simplify_intern('$atom'(burglary), _1048293, _1048292 )
6675d 275 0 CALL:  prolog:==(false, true )
6676d 275 0 FAIL RETRY:  termhandling:simplify('$atom'(burglary), _1048331, _131049 )
6677d 265 0 TRY_OR 
6678d 273 0 CALL:  prolog:\==('$atom'(burglary), false )
6679d 273 0 CALL:  completion:record_constraint_cs_check('$atom'(burglary) )
6680d 273 0 TRY_OR 
6681d 290 0 CALL:  prolog:recorded(unpropagated_rules, <=>('$atom'(burglary),_131052), _1048293 )
6683d 273 0 CALL:  prolog:recorda(unpropagated_rules, <=>('$atom'(burglary),true), _131053 )
+s 0x5602af266f40
 @0x7efdd88a3288 0
- 0x5602af28d780
 @0x7efdd88a3298 257
6685d 224 0 CALL:  prolog:==(true, false )
- 0x5602af28dc40
 @0x7efdd88a3208 224
6687d 224 0 CALL:  prolog:$current_choice_point(_1048359 )
6688d 224 0 CALL:  completion:propagate_intern_known(_1048360 )
6689d 232 0 CALL:  prolog:recorded(unpropagated_rules, <=>(_131044,_131045), _1048323 )
+s 0x5602af2afbc0
 @0x7efdd88a31e8 0
+s 0x5602af2b0d00
 @0x7efdd88a31e8 0
- 0x5602af2b0d00
 @0x7efdd88a31e8 232
+s 0x5602af222600
 @0x7efdd88a31e8 0
+s 0x5602af2b0d00
 @0x7efdd88a31e8 0
- 0x5602af2b0d00
 @0x7efdd88a31e8 232
+s 0x5602af226060
 @0x7efdd88a31e8 0
+s 0x5602af2669e0
 @0x7efdd88a31e8 0
- 0x5602af2afbc0
 @0x7efdd88a31e8 232
+s 0x5602af2afbc0
 @0x7efdd88a31e8 0
+s 0x5602af2b0d00
 @0x7efdd88a31e8 0
- 0x5602af2b0d00
 @0x7efdd88a31e8 232
+s 0x5602af22d6a0
 @0x7efdd88a31e8 0
+s 0x5602af28dc40
 @0x7efdd88a31e8 0
- 0x5602af2afbc0
 @0x7efdd88a31e8 232
+s 0x5602af2afbc0
 @0x7efdd88a31e8 0
+s 0x5602aeec6410
 @0x7efdd88a31e8 0
+s 0x5602af2b0d00
 @0x7efdd88a31e8 0
+s 0x5602af2b02c0
 @0x7efdd88a31e8 0
- 0x5602af2afbc0
 @0x7efdd88a31e8 232
6690d 224 0 CALL:  prolog:erase('$dbref'(0x5602af266f40,1) )
- 0x5602af2b0d00
 @0x7efdd88a31f8 224
- 0x5602af2b02c0
 @0x7efdd88a31f8 224
- 0x5602aeec6410
 @0x7efdd88a31f8 224
- 0x5602af22d6a0
 @0x7efdd88a31f8 224
- 0x5602af28dc40
 @0x7efdd88a31f8 224
- 0x5602af226060
 @0x7efdd88a31f8 224
- 0x5602af222600
 @0x7efdd88a31f8 224
- 0x5602af2669e0
 @0x7efdd88a31f8 224
6691d 224 0 CALL:  prolog:recorda(known_atoms, <=>('$atom'(burglary),true), _1048325 )
+s 0x5602af28dc40
 @0x7efdd88a31f8 0
6692d 224 0 TRY_OR 
6693d 257 0 CALL:  prolog:recorded(rules, _1048335, _1048327 )
6695d 224 0 CALL:  prolog:==(true, false )
- 0x5602af266f40
 @0x7efdd88a3208 224
6697d 224 0 CALL:  prolog:$current_choice_point(_1048359 )
6698d 224 0 CALL:  completion:propagate_intern_known(_1048360 )
6699d 232 0 CALL:  prolog:recorded(unpropagated_rules, <=>(_131044,_131045), _1048323 )
6700d 224 0 CALL:  prolog:erase('$dbref'(0x5602af01ad50,0) )
6701d 224 0 CALL:  prolog:recorda(known_atoms, <=>('$atom'(person(mary)),true), _1048325 )
+s 0x5602af28d780
 @0x7efdd88a31f8 0
6702d 224 0 TRY_OR 
6703d 257 0 CALL:  prolog:recorded(rules, _1048335, _1048327 )
6705d 224 0 CALL:  prolog:==(true, false )
- 0x5602af01ad50
 @0x7efdd88a3208 224
6707d 224 0 CALL:  prolog:$current_choice_point(_1048359 )
6708d 224 0 CALL:  completion:propagate_intern_known(_1048360 )
6709d 232 0 CALL:  prolog:recorded(unpropagated_rules, <=>(_131044,_131045), _1048323 )
6710d 232 0 FAIL RETRY:  completion:propagate_intern_known(_1048360 )
6711d 224 0 CALL:  prolog:==(false, false )
6712d 224 0 CALL:  prolog:$current_choice_point(_1048361 )
6713d 224 0 CALL:  completion:propagate_intern_deterministic(_1048362 )
6714d 232 0 CALL:  prolog:recorded(rules, <=>(_131044,_131045), _1048325 )
6715d 232 0 FAIL RETRY:  completion:propagate_intern_deterministic(_1048362 )
6716d 224 0 CALL:  prolog:==(false, false )
6717d 173 0 CALL:  logger:logger_stop_timer(train_bdd_script_generation_propagation )
6718d 173 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_propagation, _1048365 )
6719d 173 0 CALL:  prolog:bb_delete(logger:logger_start_time_train_bdd_script_generation_propagation, _1048368 )
6720d 173 0 CALL:  prolog:statistics(walltime, [_131046,_131048] )
6721d 173 0 CALL:  prolog:$walltime(_131046, _131048 )
6722d 173 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_propagation, null )
6723d 173 0 TRY_OR 
6724d 214 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation_propagation )
6725d 214 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_propagation, _1048354 )
6726d 214 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_propagation, _1048355 )
6727d 214 0 CALL:  prolog:\=(167, null )
6728d 173 0 CALL:  logger:logger_get_variable(train_bdd_script_generation_propagation, _1048370 )
6729d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_propagation, _1048362 )
6730d 173 0 TRY_OR 
6731d 222 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_propagation, null )
6733d 222 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_propagation, _1048370 )
6734d 173 0 CALL:  logger:logger_set_variable_again(train_bdd_script_generation_propagation, 896 )
6735d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_propagation, _1048363 )
6736d 173 0 TRY_OR 
6737d 222 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_propagation, _1048361 )
6738d 173 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation_propagation, 896 )
6739d 173 0 CALL:  flags:problog_flag(split_bdds, _1048378 )
6740d 173 0 CALL:  gflags:flag_get(split_bdds, _1048378 )
6741d 173 0 CALL:  prolog:recorded(flag_values, flag(split_bdds,_131064), _131065 )
6742d 173 0 CALL:  print_learning:format_learning(5, 'S', [] )
6743d 207 0 CALL:  flags:problog_flag(verbosity_learning, _1048359 )
6744d 207 0 CALL:  gflags:flag_get(verbosity_learning, _1048359 )
6745d 207 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_131068), _131069 )
6746d 207 0 CALL:  prolog:>=(5, 5 )
6747d 173 0 CALL:  prolog:format('S', print_learning:[] )
6748d 173 0 CALL:  prolog:flush_output(user )
S6749d 173 0 TRY_OR 
6750d 205 0 CALL:  prolog:==(true, false )
6752d 173 0 CALL:  logger:logger_start_timer(train_bdd_script_generation_splitting )
6753d 173 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_splitting, _1048371 )
6754d 173 0 TRY_OR 
6755d 213 0 CALL:  prolog:bb_get(logger:logger_start_time_train_bdd_script_generation_splitting, null )
6756d 173 0 CALL:  prolog:statistics(walltime, [_131076,_131078] )
6757d 173 0 CALL:  prolog:$walltime(_131076, _131078 )
6758d 173 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_splitting, 358313 )
6759d 173 0 CALL:  completion:split_rules(_1048381 )
6760d 173 0 CALL:  prolog:eraseall(cluster )
6761d 173 0 TRY_OR 
6762d 216 0 CALL:  prolog:recorded(rules, _1048369, _1048370 )
6764d 173 0 TRY_OR 
6765d 214 0 CALL:  prolog:recorded(unpropagated_rules, _1048369, _1048370 )
6767d 173 0 CALL:  prolog:garbage_collect_atoms
6768d 173 0 CALL:  prolog:$atom_gc
6769d 173 0 TRY_OR 
6770d 210 0 CALL:  completion:merge_cluster(_1048373 )
6771d 218 0 CALL:  prolog:recorded(cluster, c(_131084,_131085), _1048343 )
6772d 218 0 FAIL RETRY:  completion:merge_cluster(_1048373 )
6773d 210 0 CALL:  prolog:==(false, false )
6774d 173 0 CALL:  prolog:findall(_131083, completion:recorded(cluster,c(_131092,_131083),_131090), _1048381 )
6775d 173 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048381 )
6776d 217 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048381 )
6777d 173 0 TRY_OR 
6778d 224 0 CALL:  error:has_type(list_or_partial_list, _1048381 )
6779d 224 0 CALL:  error:is_list_or_partial_list(_1048381 )
6780d 224 0 CALL:  prolog:$skip_list(_131094, _1048381, _131095 )
6781d 173 0 CALL:  prolog:$findall(_131083, completion:recorded(cluster,c(_131092,_131083),_131090), [], _131095 )
6782d 173 0 CALL:  nb:nb_queue(_1048367 )
6783d 173 0 TRY_OR 
6784d 218 0 CALL:  prolog:$execute(completion:recorded(cluster,c(_131092,_131083),_131090) )
6785d 218 0 CALL:  prolog:recorded(cluster, c(_131092,_131083), _131090 )
6786d 218 0 CALL:  prolog:recorded(cluster, c(_131092,_131083), _131090 )
6788d 173 0 CALL:  nb:nb_queue_close(queue(0,0,0,0), _131095, [] )
6789d 173 0 CALL:  prolog:eraseall(cluster )
6790d 173 0 CALL:  prolog:garbage_collect_atoms
6791d 173 0 CALL:  prolog:$atom_gc
6792d 173 0 CALL:  logger:logger_stop_timer(train_bdd_script_generation_splitting )
6793d 173 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation_splitting, _1048368 )
6794d 173 0 CALL:  prolog:bb_delete(logger:logger_start_time_train_bdd_script_generation_splitting, _1048371 )
6795d 173 0 CALL:  prolog:statistics(walltime, [_131104,_131106] )
6796d 173 0 CALL:  prolog:$walltime(_131104, _131106 )
6797d 173 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation_splitting, null )
6798d 173 0 TRY_OR 
6799d 211 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation_splitting )
6800d 211 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_splitting, _1048357 )
6801d 211 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_splitting, _1048358 )
6802d 211 0 CALL:  prolog:\=(14936, null )
6803d 173 0 CALL:  logger:logger_get_variable(train_bdd_script_generation_splitting, _1048373 )
6804d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_splitting, _1048365 )
6805d 173 0 TRY_OR 
6806d 219 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_splitting, null )
6808d 219 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_splitting, _1048373 )
6809d 173 0 CALL:  logger:logger_set_variable_again(train_bdd_script_generation_splitting, 28963 )
6810d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_splitting, _1048366 )
6811d 173 0 TRY_OR 
6812d 219 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_splitting, _1048364 )
6813d 173 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation_splitting, 28963 )
6814d 173 0 CALL:  print_learning:format_learning(5, s, [] )
6815d 204 0 CALL:  flags:problog_flag(verbosity_learning, _1048362 )
6816d 204 0 CALL:  gflags:flag_get(verbosity_learning, _1048362 )
6817d 204 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_131122), _131123 )
6818d 204 0 CALL:  prolog:>=(5, 5 )
6819d 173 0 CALL:  prolog:format(s, print_learning:[] )
6820d 173 0 CALL:  prolog:flush_output(user )
s6821d 173 0 CALL:  completion:print_script_per_cluster([], 2, 1, 0, _1048387, [], _1048383 )
6822d 173 0 CALL:  completion:store_known_atoms(2, [], training )
6823d 173 0 TRY_OR 
6824d 221 0 CALL:  prolog:==(training, test )
6826d 173 0 CALL:  prolog:retractall(completion:bdd_cluster(2,_131134) )
6827d 173 0 CALL:  prolog:$retractall(bdd_cluster(2,_131134), completion )
6828d 230 0 FAIL RETRY:  prolog:$retractall(bdd_cluster(2,_131134), completion )
6829d 173 0 CALL:  prolog:functor(bdd_cluster(2,_131134), _131136, _131137 )
6830d 173 0 CALL:  prolog:$is_log_updatable(bdd_cluster(2,_131134), completion )
6831d 173 0 CALL:  prolog:$is_multifile(bdd_cluster(2,_131134), completion )
6832d 173 0 CALL:  prolog:$retractall_lu_mf(bdd_cluster(2,_131134), completion, bdd_cluster, 2 )
6833d 224 0 CALL:  prolog:$log_update_clause(bdd_cluster(2,_131134), completion, _1048340, _1048345 )
6834d 224 0 FAIL RETRY:  prolog:$retractall_lu_mf(bdd_cluster(2,_131134), completion, bdd_cluster, 2 )
6835d 173 0 CALL:  prolog:assertz(completion:bdd_cluster(2,[]) )
6836d 173 0 CALL:  prolog:$assert(completion:bdd_cluster(2,[]), assertz, _131141 )
6837d 173 0 CALL:  prolog:$yap_strip_clause(completion:bdd_cluster(2,[]), _1048351, _1048352 )
6838d 173 0 CALL:  prolog:$expand_clause(completion:bdd_cluster(2,[]), _1048355, _1048353 )
6839d 234 0 CALL:  prolog:source_module(_131142 )
6840d 234 0 CALL:  prolog:$yap_strip_clause(user:completion:bdd_cluster(2,[]), _131146, _131147 )
6841d 234 0 CALL:  prolog:$expand_a_clause(completion:bdd_cluster(2,[]), user, _1048355, _1048353 )
6842d 234 0 CALL:  prolog:$yap_strip_module(user:completion:bdd_cluster(2,[]), _1048322, _131154 )
6843d 234 0 CALL:  prolog:$head_and_body(bdd_cluster(2,[]), _1048321, _1048323 )
6844d 264 0 FAIL RETRY:  prolog:$head_and_body(bdd_cluster(2,[]), _1048321, _1048323 )
6845d 234 0 CALL:  prolog:$yap_strip_module(completion:bdd_cluster(2,[]), _1048324, _1048325 )
6846d 234 0 CALL:  prolog:$not_imported(bdd_cluster(2,[]), completion )
6847d 262 0 CALL:  prolog:recorded('$import', '$import'(_131159,completion,_131161,bdd_cluster(2,[]),_131163,_131164), _1048307 )
6848d 262 0 FAIL RETRY:  prolog:$not_imported(bdd_cluster(2,[]), completion )
6849d 234 0 CALL:  prolog:$yap_strip_module(completion:true, _131161, _131162 )
6850d 234 0 CALL:  prolog:$expand_clause_body(true, bdd_cluster(2,[]), completion, user, completion, _1048327, _1048329 )
6851d 234 0 CALL:  prolog:$build_up(completion, bdd_cluster(2,[]), user, true, _1048355, true, _1048353 )
6852d 253 0 CALL:  prolog:==(completion, user )
6853d 253 0 FAIL RETRY:  prolog:$build_up(completion, bdd_cluster(2,[]), user, true, _1048355, true, _1048353 )
6854d 173 0 CALL:  prolog:$$compile(completion:bdd_cluster(2,[]), assertz, completion:bdd_cluster(2,[]), _131141 )
6855d 173 0 CALL:  prolog:$head_and_body(completion:bdd_cluster(2,[]), _1048350, _1048352 )
6856d 235 0 FAIL RETRY:  prolog:$head_and_body(completion:bdd_cluster(2,[]), _1048350, _1048352 )
6857d 173 0 CALL:  prolog:strip_module(completion:bdd_cluster(2,[]), _1048355, _1048351 )
6858d 173 0 CALL:  prolog:$undefined(bdd_cluster(2,[]), completion )
6859d 173 0 CALL:  prolog:$compile(bdd_cluster(2,[]):-true, assertz, completion:bdd_cluster(2,[]), completion, _131141 )
+s 0x5602af28dfd0
 @0x7efdd88a31d8 0
+s 0x5602af28d370
 @0x7efdd88a31e8 0
+s 0x5602af222600
 @0x7efdd88a31e8 0
6860d 173 0 CALL:  utils_learning:create_known_values_file_name(2, _1048362 )
6861d 222 0 CALL:  flags:problog_flag(bdd_directory, _1048345 )
6862d 222 0 CALL:  gflags:flag_get(bdd_directory, _1048345 )
6863d 222 0 CALL:  prolog:recorded(flag_values, flag(bdd_directory,_131177), _131178 )
6864d 173 0 CALL:  prolog:atomic_concat([query_,2,'_known_values'], _1048346 )
6865d 173 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries', query_2_known_values, _1048362 )
6866d 173 0 CALL:  os:path_separator(_1048354 )
6867d 230 0 CALL:  prolog:current_prolog_flag(windows, true )
6868d 230 0 FAIL RETRY:  os:path_separator(_1048354 )
6869d 173 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries',/,query_2_known_values], _1048362 )
6870d 173 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries',/,query_2_known_values], _1048362 )
6871d 173 0 CALL:  prolog:open('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/queries/query_2_known_values', write, _1048379 )
6872d 173 0 CALL:  prolog:format('$stream'(3), 'completion:bdd_cluster(~w,~w).~n', completion:[2,[]] )
6873d 173 0 TRY_OR 
6874d 219 0 CALL:  prolog:recorded(known_atoms, <=>('$atom'(_131206),_131204), _1048364 )
+s 0x5602af266ff0
 @0x7efdd88a3228 0
+s 0x5602af2b4110
 @0x7efdd88a3228 0
- 0x5602af2b4110
 @0x7efdd88a3228 219
+s 0x5602af2b4110
 @0x7efdd88a3228 0
+s 0x5602af26d4d0
 @0x7efdd88a3228 0
- 0x5602af26d4d0
 @0x7efdd88a3228 219
+s 0x5602af26d4d0
 @0x7efdd88a3228 0
+s 0x5602af20ebd0
 @0x7efdd88a3228 0
- 0x5602af20ebd0
 @0x7efdd88a3228 219
+s 0x5602aeec6410
 @0x7efdd88a3228 0
+s 0x5602af1e08d0
 @0x7efdd88a3228 0
+s 0x5602af239da0
 @0x7efdd88a3228 0
- 0x5602af266ff0
 @0x7efdd88a3228 219
+s 0x5602af266ff0
 @0x7efdd88a3228 0
+s 0x5602af000ee0
 @0x7efdd88a3228 0
+s 0x5602af2b4250
 @0x7efdd88a3228 0
+s 0x5602af2b0e30
 @0x7efdd88a3228 0
+s 0x5602af2affd0
 @0x7efdd88a3228 0
+s 0x5602aeebe100
 @0x7efdd88a3228 0
+s 0x5602af001a10
 @0x7efdd88a3228 0
+s 0x5602af1b7ee0
 @0x7efdd88a3228 0
- 0x5602af266ff0
 @0x7efdd88a3228 219
6875d 230 0 CALL:  completion:remember(person(mary), _1048365 )
6876d 239 0 CALL:  completion:seen_atom(person(mary), _1048365, _1048329, _1048330 )
6877d 239 0 FAIL RETRY:  completion:remember(person(mary), _1048365 )
6878d 239 0 FAIL RETRY:  completion:remember(person(mary), _1048365 )
6879d 239 0 CALL:  problog:probabilistic_fact(_1048330, person(mary), _1048329 )
6880d 260 0 CALL:  prolog:ground(person(mary) )
6881d 239 0 CALL:  prolog:=..(person(mary), [_131207|_131208] )
6882d 239 0 CALL:  prolog:atomic_concat(problog_, person, _1048305 )
6883d 239 0 CALL:  lists:append([_131213,mary], [_131215], _1048304 )
6884d 239 0 CALL:  lists:append([mary], [_131215], _131218 )
6885d 239 0 CALL:  lists:append([], [_131215], _131220 )
6886d 239 0 CALL:  prolog:=..(_1048307, [problog_person,_131213,mary,_131215] )
6887d 239 0 CALL:  prolog:length([_131213,mary,_131215], _1048306 )
6888d 239 0 CALL:  prolog:$skip_list([_131213,mary,_131215], _1048306, _131227, _131228 )
6889d 239 0 CALL:  prolog:==([], [] )
6890d 239 0 CALL:  prolog:current_predicate(problog:problog_person/3 )
6891d 239 0 CALL:  prolog:$yap_strip_module(problog:problog_person/3, _1048301, _1048300 )
6892d 239 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_person/3 )
6893d 239 0 TRY_OR 
6894d 291 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_person/3 )
6895d 300 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_person/3 )
6896d 291 0 TRY_OR 
6898d 291 0 CALL:  error:may_bind_to_type(atom, problog_person )
6899d 308 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_person )
6900d 291 0 CALL:  error:may_bind_to_type(integer, 3 )
6901d 300 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
6902d 239 0 CALL:  prolog:$c_i_predicate(problog_person/3, problog )
6903d 239 0 TRY_OR 
6904d 285 0 CALL:  prolog:ground(problog_person/3 )
6905d 239 0 CALL:  prolog:functor(_131235, problog_person, 3 )
6906d 239 0 CALL:  prolog:current_predicate(problog_person, problog:problog_person(_131236,_131237,_131238) )
6907d 239 0 CALL:  prolog:$yap_strip_module(problog:problog_person(_131236,_131237,_131238), _1048297, _1048296 )
6908d 239 0 CALL:  prolog:functor(problog_person(_131236,_131237,_131238), problog_person, _1048295 )
6909d 239 0 TRY_OR 
6910d 287 0 CALL:  prolog:$current_predicate(problog_person, problog, problog_person(_131236,_131237,_131238), user )
6912d 239 0 CALL:  prolog:$imported_predicate(problog_person(_131236,_131237,_131238), problog, _1048300, _1048301 )
6913d 288 0 CALL:  prolog:$is_system_predicate(problog_person(_131236,_131237,_131238), prolog )
6914d 288 0 FAIL RETRY:  prolog:$imported_predicate(problog_person(_131236,_131237,_131238), problog, _1048300, _1048301 )
6915d 239 0 CALL:  prolog:$undefined(problog_person(_131236,_131237,_131238), problog )
6916d 239 0 CALL:  prolog:$get_undefined_predicates(problog_person(_131236,_131237,_131238), problog, _1048300, _1048301 )
6917d 295 0 CALL:  prolog:recorded('$import', '$import'(_131243,problog,_131245,problog_person(_131236,_131237,_131238),_131247,_131248), _1048270 )
6918d 295 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_person(_131236,_131237,_131238), problog, _1048300, _1048301 )
6919d 295 0 CALL:  prolog:$pred_exists(problog_person(_131236,_131237,_131238), user )
6920d 295 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_person(_131236,_131237,_131238), problog, _1048300, _1048301 )
6921d 295 0 CALL:  prolog:recorded('$dialect', swi, _1048265 )
6922d 295 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_person(_131236,_131237,_131238), problog, _1048300, _1048301 )
6923d 239 0 CALL:  prolog:$parent_module(problog, _1048283 )
6924d 239 0 FAIL RETRY:  completion:remember(person(mary), _1048365 )
6925d 230 0 CALL:  completion:next_det_counter(_1048337 )
6926d 230 0 CALL:  prolog:bb_get(completion:det_counter, _1048328 )
6927d 230 0 CALL:  prolog:atomic_concat([y,2], _1048337 )
6928d 230 0 CALL:  prolog:bb_put(completion:det_counter, 2 )
6929d 230 0 CALL:  prolog:atomic_concat([y,y2], _1048365 )
6930d 230 0 CALL:  prolog:assertz(completion:seen_atom(person(mary),yy2,det,1) )
6931d 230 0 CALL:  prolog:$assert(completion:seen_atom(person(mary),yy2,det,1), assertz, _131226 )
6932d 230 0 CALL:  prolog:$yap_strip_clause(completion:seen_atom(person(mary),yy2,det,1), _1048334, _1048335 )
6933d 230 0 CALL:  prolog:$expand_clause(completion:seen_atom(person(mary),yy2,det,1), _1048338, _1048336 )
6934d 251 0 CALL:  prolog:source_module(_131227 )
6935d 251 0 CALL:  prolog:$yap_strip_clause(user:completion:seen_atom(person(mary),yy2,det,1), _131231, _131232 )
6936d 251 0 CALL:  prolog:$expand_a_clause(completion:seen_atom(person(mary),yy2,det,1), user, _1048338, _1048336 )
6937d 251 0 CALL:  prolog:$yap_strip_module(user:completion:seen_atom(person(mary),yy2,det,1), _1048305, _131239 )
6938d 251 0 CALL:  prolog:$head_and_body(seen_atom(person(mary),yy2,det,1), _1048304, _1048306 )
6939d 281 0 FAIL RETRY:  prolog:$head_and_body(seen_atom(person(mary),yy2,det,1), _1048304, _1048306 )
6940d 251 0 CALL:  prolog:$yap_strip_module(completion:seen_atom(person(mary),yy2,det,1), _1048307, _1048308 )
6941d 251 0 CALL:  prolog:$not_imported(seen_atom(person(mary),yy2,det,1), completion )
6942d 279 0 CALL:  prolog:recorded('$import', '$import'(_131244,completion,_131246,seen_atom(person(mary),yy2,det,1),_131248,_131249), _1048290 )
6943d 279 0 FAIL RETRY:  prolog:$not_imported(seen_atom(person(mary),yy2,det,1), completion )
6944d 251 0 CALL:  prolog:$yap_strip_module(completion:true, _131246, _131247 )
6945d 251 0 CALL:  prolog:$expand_clause_body(true, seen_atom(person(mary),yy2,det,1), completion, user, completion, _1048310, _1048312 )
6946d 251 0 CALL:  prolog:$build_up(completion, seen_atom(person(mary),yy2,det,1), user, true, _1048338, true, _1048336 )
6947d 270 0 CALL:  prolog:==(completion, user )
6948d 270 0 FAIL RETRY:  prolog:$build_up(completion, seen_atom(person(mary),yy2,det,1), user, true, _1048338, true, _1048336 )
6949d 230 0 CALL:  prolog:$$compile(completion:seen_atom(person(mary),yy2,det,1), assertz, completion:seen_atom(person(mary),yy2,det,1), _131226 )
6950d 230 0 CALL:  prolog:$head_and_body(completion:seen_atom(person(mary),yy2,det,1), _1048333, _1048335 )
6951d 252 0 FAIL RETRY:  prolog:$head_and_body(completion:seen_atom(person(mary),yy2,det,1), _1048333, _1048335 )
6952d 230 0 CALL:  prolog:strip_module(completion:seen_atom(person(mary),yy2,det,1), _1048338, _1048334 )
6953d 230 0 CALL:  prolog:$undefined(seen_atom(person(mary),yy2,det,1), completion )
6954d 230 0 CALL:  prolog:$compile(seen_atom(person(mary),yy2,det,1):-true, assertz, completion:seen_atom(person(mary),yy2,det,1), completion, _131226 )
+s 0x5602af28b690
 @0x7efdd88a3288 0
6955d 230 0 CALL:  completion:split_atom_name(yy2, _1048373, _1048374 )
6956d 230 0 CALL:  prolog:atomic_concat(x, _1048333, yy2 )
6957d 230 0 FAIL RETRY:  idb:recorded(known_atoms, <=>('$atom'(_131206),_131204), _1048364 )
6958d 230 0 CALL:  completion:remember(burglary, _1048365 )
6959d 239 0 CALL:  completion:seen_atom(burglary, _1048365, _1048329, _1048330 )
+s 0x5602af281870
 @0x7efdd88a3278 0
+s 0x5602af2b6110
 @0x7efdd88a3278 0
- 0x5602af2b6110
 @0x7efdd88a3278 239
+s 0x5602af2b4eb0
 @0x7efdd88a3278 0
+s 0x5602af229bb0
 @0x7efdd88a3278 0
+s 0x5602af266ff0
 @0x7efdd88a3278 0
- 0x5602af281870
 @0x7efdd88a3278 239
6960d 239 0 FAIL RETRY:  completion:remember(burglary, _1048365 )
6961d 239 0 CALL:  prolog:atom_codes(burglary, [76|_131208] )
6962d 239 0 FAIL RETRY:  completion:remember(burglary, _1048365 )
6963d 239 0 CALL:  problog:probabilistic_fact(_1048330, burglary, _1048329 )
6964d 260 0 CALL:  prolog:ground(burglary )
6965d 239 0 CALL:  prolog:=..(burglary, [_131207|_131208] )
6966d 239 0 CALL:  prolog:atomic_concat(problog_, burglary, _1048305 )
6967d 239 0 CALL:  lists:append([_131211], [_131213], _1048304 )
6968d 239 0 CALL:  lists:append([], [_131213], _131216 )
6969d 239 0 CALL:  prolog:=..(_1048307, [problog_burglary,_131211,_131213] )
6970d 239 0 CALL:  prolog:length([_131211,_131213], _1048306 )
6971d 239 0 CALL:  prolog:$skip_list([_131211,_131213], _1048306, _131222, _131223 )
6972d 239 0 CALL:  prolog:==([], [] )
6973d 239 0 CALL:  prolog:current_predicate(problog:problog_burglary/2 )
6974d 239 0 CALL:  prolog:$yap_strip_module(problog:problog_burglary/2, _1048301, _1048300 )
6975d 239 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_burglary/2 )
6976d 239 0 TRY_OR 
6977d 291 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_burglary/2 )
6978d 300 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_burglary/2 )
6979d 291 0 TRY_OR 
6981d 291 0 CALL:  error:may_bind_to_type(atom, problog_burglary )
6982d 308 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_burglary )
6983d 291 0 CALL:  error:may_bind_to_type(integer, 2 )
6984d 300 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
6985d 239 0 CALL:  prolog:$c_i_predicate(problog_burglary/2, problog )
6986d 239 0 TRY_OR 
6987d 285 0 CALL:  prolog:ground(problog_burglary/2 )
6988d 239 0 CALL:  prolog:functor(_131230, problog_burglary, 2 )
6989d 239 0 CALL:  prolog:current_predicate(problog_burglary, problog:problog_burglary(_131231,_131232) )
6990d 239 0 CALL:  prolog:$yap_strip_module(problog:problog_burglary(_131231,_131232), _1048297, _1048296 )
6991d 239 0 CALL:  prolog:functor(problog_burglary(_131231,_131232), problog_burglary, _1048295 )
6992d 239 0 TRY_OR 
6993d 287 0 CALL:  prolog:$current_predicate(problog_burglary, problog, problog_burglary(_131231,_131232), user )
6994d 287 0 CALL:  problog:problog_burglary(_131211, _131213 )
6995d 287 0 CALL:  prolog:is(_1048330, 3, -1.249826789005093 )
6996d 230 0 TRY_OR 
6997d 258 0 CALL:  problog:non_ground_fact(0 )
6999d 230 0 CALL:  prolog:atomic_concat([x,0], _1048365 )
7000d 230 0 CALL:  prolog:assertz(completion:seen_atom(burglary,x0,0,0.2865544269392134) )
7001d 230 0 CALL:  prolog:$assert(completion:seen_atom(burglary,x0,0,0.2865544269392134), assertz, _131251 )
7002d 230 0 CALL:  prolog:$yap_strip_clause(completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048334, _1048335 )
7003d 230 0 CALL:  prolog:$expand_clause(completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048338, _1048336 )
7004d 251 0 CALL:  prolog:source_module(_131252 )
7005d 251 0 CALL:  prolog:$yap_strip_clause(user:completion:seen_atom(burglary,x0,0,0.2865544269392134), _131256, _131257 )
7006d 251 0 CALL:  prolog:$expand_a_clause(completion:seen_atom(burglary,x0,0,0.2865544269392134), user, _1048338, _1048336 )
7007d 251 0 CALL:  prolog:$yap_strip_module(user:completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048305, _131264 )
7008d 251 0 CALL:  prolog:$head_and_body(seen_atom(burglary,x0,0,0.2865544269392134), _1048304, _1048306 )
7009d 281 0 FAIL RETRY:  prolog:$head_and_body(seen_atom(burglary,x0,0,0.2865544269392134), _1048304, _1048306 )
7010d 251 0 CALL:  prolog:$yap_strip_module(completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048307, _1048308 )
7011d 251 0 CALL:  prolog:$not_imported(seen_atom(burglary,x0,0,0.2865544269392134), completion )
7012d 279 0 CALL:  prolog:recorded('$import', '$import'(_131269,completion,_131271,seen_atom(burglary,x0,0,0.2865544269392134),_131273,_131274), _1048290 )
7013d 279 0 FAIL RETRY:  prolog:$not_imported(seen_atom(burglary,x0,0,0.2865544269392134), completion )
7014d 251 0 CALL:  prolog:$yap_strip_module(completion:true, _131271, _131272 )
7015d 251 0 CALL:  prolog:$expand_clause_body(true, seen_atom(burglary,x0,0,0.2865544269392134), completion, user, completion, _1048310, _1048312 )
7016d 251 0 CALL:  prolog:$build_up(completion, seen_atom(burglary,x0,0,0.2865544269392134), user, true, _1048338, true, _1048336 )
7017d 270 0 CALL:  prolog:==(completion, user )
7018d 270 0 FAIL RETRY:  prolog:$build_up(completion, seen_atom(burglary,x0,0,0.2865544269392134), user, true, _1048338, true, _1048336 )
7019d 230 0 CALL:  prolog:$$compile(completion:seen_atom(burglary,x0,0,0.2865544269392134), assertz, completion:seen_atom(burglary,x0,0,0.2865544269392134), _131251 )
7020d 230 0 CALL:  prolog:$head_and_body(completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048333, _1048335 )
7021d 252 0 FAIL RETRY:  prolog:$head_and_body(completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048333, _1048335 )
7022d 230 0 CALL:  prolog:strip_module(completion:seen_atom(burglary,x0,0,0.2865544269392134), _1048338, _1048334 )
7023d 230 0 CALL:  prolog:$undefined(seen_atom(burglary,x0,0,0.2865544269392134), completion )
7024d 230 0 CALL:  prolog:$compile(seen_atom(burglary,x0,0,0.2865544269392134):-true, assertz, completion:seen_atom(burglary,x0,0,0.2865544269392134), completion, _131251 )
+s 0x5602af2670c0
 @0x7efdd88a3298 0
+s 0x5602af2aa660
 @0x7efdd88a3298 0
- 0x5602af2b4eb0
 @0x7efdd88a3298 230
7025d 230 0 CALL:  completion:split_atom_name(x0, _1048373, _1048374 )
7026d 230 0 CALL:  prolog:atomic_concat(x, _1048333, x0 )
7027d 230 0 CALL:  prolog:atom_codes('0', _1048338 )
7028d 230 0 TRY_OR 
7029d 249 0 CALL:  lists:append(_1048335, [95|_131282], [48] )
7030d 259 0 FAIL RETRY:  lists:append(_1048335, [95|_131282], [48] )
7031d 249 0 CALL:  lists:append(_131284, [95|_131282], [] )
7032d 259 0 FAIL RETRY:  lists:append(_131284, [95|_131282], [] )
7034d 230 0 CALL:  prolog:number_chars(_1048373, [48] )
7035d 230 0 TRY_OR 
7036d 238 0 TRY_OR 
7037d 246 0 CALL:  prolog:==(true, true )
7038d 238 0 CALL:  prolog:add_to_array_element(known_count_true_training, 0, 1, _1048370 )
7039d 238 0 CALL:  completion:know_atom_expected_count(true, _1048375 )
+s 0x5602af2b6f20
 @0x7efdd88a32e8 0
+s 0x5602af2b7cc0
 @0x7efdd88a32e8 0
- 0x5602af2b7cc0
 @0x7efdd88a32e8 238
+s 0x5602af2b5890
 @0x7efdd88a32e8 0
+s 0x5602af05bf90
 @0x7efdd88a32e8 0
- 0x5602af2b6f20
 @0x7efdd88a32e8 238
7040d 238 0 CALL:  prolog:format('$stream'(3), 'completion:known_count(~w,~w,~w,~w). % ~w~n', completion:[2,0,0,1,burglary] )
7041d 230 0 FAIL RETRY:  idb:recorded(known_atoms, <=>('$atom'(_131206),_131204), _1048364 )
7042d 230 0 CALL:  completion:remember(alarm, _1048365 )
7043d 239 0 CALL:  completion:seen_atom(alarm, _1048365, _1048329, _1048330 )
7044d 230 0 CALL:  completion:split_atom_name(yy1, _1048373, _1048374 )
7045d 230 0 CALL:  prolog:atomic_concat(x, _1048333, yy1 )
7046d 230 0 FAIL RETRY:  idb:recorded(known_atoms, <=>('$atom'(_131206),_131204), _1048364 )
7047d 230 0 CALL:  completion:remember(hears_alarm(mary), _1048365 )
7048d 239 0 CALL:  completion:seen_atom(hears_alarm(mary), _1048365, _1048329, _1048330 )
7049d 239 0 FAIL RETRY:  completion:remember(hears_alarm(mary), _1048365 )
7050d 239 0 FAIL RETRY:  completion:remember(hears_alarm(mary), _1048365 )
7051d 239 0 CALL:  problog:probabilistic_fact(_1048330, hears_alarm(mary), _1048329 )
7052d 260 0 CALL:  prolog:ground(hears_alarm(mary) )
7053d 239 0 CALL:  prolog:=..(hears_alarm(mary), [_131207|_131208] )
7054d 239 0 CALL:  prolog:atomic_concat(problog_, hears_alarm, _1048305 )
7055d 239 0 CALL:  lists:append([_131213,mary], [_131215], _1048304 )
7056d 239 0 CALL:  lists:append([mary], [_131215], _131218 )
7057d 239 0 CALL:  lists:append([], [_131215], _131220 )
7058d 239 0 CALL:  prolog:=..(_1048307, [problog_hears_alarm,_131213,mary,_131215] )
7059d 239 0 CALL:  prolog:length([_131213,mary,_131215], _1048306 )
7060d 239 0 CALL:  prolog:$skip_list([_131213,mary,_131215], _1048306, _131227, _131228 )
7061d 239 0 CALL:  prolog:==([], [] )
7062d 239 0 CALL:  prolog:current_predicate(problog:problog_hears_alarm/3 )
7063d 239 0 CALL:  prolog:$yap_strip_module(problog:problog_hears_alarm/3, _1048301, _1048300 )
7064d 239 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_hears_alarm/3 )
7065d 239 0 TRY_OR 
7066d 291 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_hears_alarm/3 )
7067d 300 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_hears_alarm/3 )
7068d 291 0 TRY_OR 
7070d 291 0 CALL:  error:may_bind_to_type(atom, problog_hears_alarm )
7071d 308 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_hears_alarm )
7072d 291 0 CALL:  error:may_bind_to_type(integer, 3 )
7073d 300 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
7074d 239 0 CALL:  prolog:$c_i_predicate(problog_hears_alarm/3, problog )
7075d 239 0 TRY_OR 
7076d 285 0 CALL:  prolog:ground(problog_hears_alarm/3 )
7077d 239 0 CALL:  prolog:functor(_131235, problog_hears_alarm, 3 )
7078d 239 0 CALL:  prolog:current_predicate(problog_hears_alarm, problog:problog_hears_alarm(_131236,_131237,_131238) )
7079d 239 0 CALL:  prolog:$yap_strip_module(problog:problog_hears_alarm(_131236,_131237,_131238), _1048297, _1048296 )
7080d 239 0 CALL:  prolog:functor(problog_hears_alarm(_131236,_131237,_131238), problog_hears_alarm, _1048295 )
7081d 239 0 TRY_OR 
7082d 287 0 CALL:  prolog:$current_predicate(problog_hears_alarm, problog, problog_hears_alarm(_131236,_131237,_131238), user )
7083d 287 0 CALL:  problog:problog_hears_alarm(_131213, mary, _131215 )
7084d 287 0 CALL:  prolog:is(_1048330, 3, -0.8533637893529484 )
7085d 230 0 TRY_OR 
7086d 258 0 CALL:  problog:non_ground_fact(2 )
7087d 230 0 CALL:  completion:next_grounding_id(_1048326 )
7088d 230 0 CALL:  prolog:bb_get(completion:grounding_counter, _1048326 )
7089d 230 0 CALL:  prolog:bb_put(completion:grounding_counter, 1 )
7090d 230 0 CALL:  prolog:atomic_concat([x,2,'_',0], _1048365 )
7091d 230 0 CALL:  prolog:assertz(completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997) )
7092d 230 0 CALL:  prolog:$assert(completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), assertz, _131264 )
7093d 230 0 CALL:  prolog:$yap_strip_clause(completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), _1048334, _1048335 )
7094d 230 0 CALL:  prolog:$expand_clause(completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), _1048338, _1048336 )
7095d 251 0 CALL:  prolog:source_module(_131265 )
7096d 251 0 CALL:  prolog:$yap_strip_clause(user:completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), _131269, _131270 )
7097d 251 0 CALL:  prolog:$expand_a_clause(completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), user, _1048338, _1048336 )
7098d 251 0 CALL:  prolog:$yap_strip_module(user:completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), _1048305, _131277 )
7099d 251 0 CALL:  prolog:$head_and_body(seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), _1048304, _1048306 )
7100d 281 0 FAIL RETRY:  prolog:$head_and_body(seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), _1048304, _1048306 )
7101d 251 0 CALL:  prolog:$yap_strip_module(completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), _1048307, _1048308 )
7102d 251 0 CALL:  prolog:$not_imported(seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), completion )
7103d 279 0 CALL:  prolog:recorded('$import', '$import'(_131282,completion,_131284,seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997),_131286,_131287), _1048290 )
7104d 279 0 FAIL RETRY:  prolog:$not_imported(seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), completion )
7105d 251 0 CALL:  prolog:$yap_strip_module(completion:true, _131284, _131285 )
7106d 251 0 CALL:  prolog:$expand_clause_body(true, seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), completion, user, completion, _1048310, _1048312 )
7107d 251 0 CALL:  prolog:$build_up(completion, seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), user, true, _1048338, true, _1048336 )
7108d 270 0 CALL:  prolog:==(completion, user )
7109d 270 0 FAIL RETRY:  prolog:$build_up(completion, seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), user, true, _1048338, true, _1048336 )
7110d 230 0 CALL:  prolog:$$compile(completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), assertz, completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), _131264 )
7111d 230 0 CALL:  prolog:$head_and_body(completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), _1048333, _1048335 )
7112d 252 0 FAIL RETRY:  prolog:$head_and_body(completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), _1048333, _1048335 )
7113d 230 0 CALL:  prolog:strip_module(completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), _1048338, _1048334 )
7114d 230 0 CALL:  prolog:$undefined(seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), completion )
7115d 230 0 CALL:  prolog:$compile(seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997):-true, assertz, completion:seen_atom(hears_alarm(mary),x2_0,2,0.4259796135590997), completion, _131264 )
+s 0x5602af267190
 @0x7efdd88a3298 0
+s 0x5602af2b9280
 @0x7efdd88a3298 0
- 0x5602af229bb0
 @0x7efdd88a3298 230
7116d 230 0 CALL:  completion:split_atom_name(x2_0, _1048373, _1048374 )
7117d 230 0 CALL:  prolog:atomic_concat(x, _1048333, x2_0 )
7118d 230 0 CALL:  prolog:atom_codes('2_0', _1048338 )
7119d 230 0 TRY_OR 
7120d 249 0 CALL:  lists:append(_1048335, [95|_131299], [50,95,48] )
7121d 259 0 FAIL RETRY:  lists:append(_1048335, [95|_131299], [50,95,48] )
7122d 249 0 CALL:  lists:append(_131301, [95|_131299], [95,48] )
7123d 230 0 CALL:  prolog:number_chars(_1048373, [50] )
7124d 230 0 CALL:  prolog:number_chars(_1048374, [48] )
7125d 230 0 TRY_OR 
7126d 238 0 TRY_OR 
7127d 246 0 CALL:  prolog:==(true, true )
7128d 238 0 CALL:  prolog:add_to_array_element(known_count_true_training, 2, 1, _1048370 )
7129d 238 0 CALL:  completion:know_atom_expected_count(true, _1048375 )
7130d 238 0 CALL:  prolog:format('$stream'(3), 'completion:known_count(~w,~w,~w,~w). % ~w~n', completion:[2,2,0,1,hears_alarm(mary)] )
7131d 230 0 FAIL RETRY:  idb:recorded(known_atoms, <=>('$atom'(_131206),_131204), _1048364 )
7132d 230 0 CALL:  completion:remember(calls(mary), _1048365 )
7133d 239 0 CALL:  completion:seen_atom(calls(mary), _1048365, _1048329, _1048330 )
7134d 239 0 FAIL RETRY:  completion:remember(calls(mary), _1048365 )
7135d 239 0 FAIL RETRY:  completion:remember(calls(mary), _1048365 )
7136d 239 0 CALL:  problog:probabilistic_fact(_1048330, calls(mary), _1048329 )
7137d 260 0 CALL:  prolog:ground(calls(mary) )
7138d 239 0 CALL:  prolog:=..(calls(mary), [_131207|_131208] )
7139d 239 0 CALL:  prolog:atomic_concat(problog_, calls, _1048305 )
7140d 239 0 CALL:  lists:append([_131213,mary], [_131215], _1048304 )
7141d 239 0 CALL:  lists:append([mary], [_131215], _131218 )
7142d 239 0 CALL:  lists:append([], [_131215], _131220 )
7143d 239 0 CALL:  prolog:=..(_1048307, [problog_calls,_131213,mary,_131215] )
7144d 239 0 CALL:  prolog:length([_131213,mary,_131215], _1048306 )
7145d 239 0 CALL:  prolog:$skip_list([_131213,mary,_131215], _1048306, _131227, _131228 )
7146d 239 0 CALL:  prolog:==([], [] )
7147d 239 0 CALL:  prolog:current_predicate(problog:problog_calls/3 )
7148d 239 0 CALL:  prolog:$yap_strip_module(problog:problog_calls/3, _1048301, _1048300 )
7149d 239 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_calls/3 )
7150d 239 0 TRY_OR 
7151d 291 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_calls/3 )
7152d 300 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_calls/3 )
7153d 291 0 TRY_OR 
7155d 291 0 CALL:  error:may_bind_to_type(atom, problog_calls )
7156d 308 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_calls )
7157d 291 0 CALL:  error:may_bind_to_type(integer, 3 )
7158d 300 0 FAIL RETRY:  error:may_bind_to_type(integer, 3 )
7159d 239 0 CALL:  prolog:$c_i_predicate(problog_calls/3, problog )
7160d 239 0 TRY_OR 
7161d 285 0 CALL:  prolog:ground(problog_calls/3 )
7162d 239 0 CALL:  prolog:functor(_131235, problog_calls, 3 )
7163d 239 0 CALL:  prolog:current_predicate(problog_calls, problog:problog_calls(_131236,_131237,_131238) )
7164d 239 0 CALL:  prolog:$yap_strip_module(problog:problog_calls(_131236,_131237,_131238), _1048297, _1048296 )
7165d 239 0 CALL:  prolog:functor(problog_calls(_131236,_131237,_131238), problog_calls, _1048295 )
7166d 239 0 TRY_OR 
7167d 287 0 CALL:  prolog:$current_predicate(problog_calls, problog, problog_calls(_131236,_131237,_131238), user )
7169d 239 0 CALL:  prolog:$imported_predicate(problog_calls(_131236,_131237,_131238), problog, _1048300, _1048301 )
7170d 288 0 CALL:  prolog:$is_system_predicate(problog_calls(_131236,_131237,_131238), prolog )
7171d 288 0 FAIL RETRY:  prolog:$imported_predicate(problog_calls(_131236,_131237,_131238), problog, _1048300, _1048301 )
7172d 239 0 CALL:  prolog:$undefined(problog_calls(_131236,_131237,_131238), problog )
7173d 239 0 CALL:  prolog:$get_undefined_predicates(problog_calls(_131236,_131237,_131238), problog, _1048300, _1048301 )
7174d 295 0 CALL:  prolog:recorded('$import', '$import'(_131243,problog,_131245,problog_calls(_131236,_131237,_131238),_131247,_131248), _1048270 )
7175d 295 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_calls(_131236,_131237,_131238), problog, _1048300, _1048301 )
7176d 295 0 CALL:  prolog:$pred_exists(problog_calls(_131236,_131237,_131238), user )
7177d 295 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_calls(_131236,_131237,_131238), problog, _1048300, _1048301 )
7178d 295 0 CALL:  prolog:recorded('$dialect', swi, _1048265 )
7179d 295 0 FAIL RETRY:  prolog:$get_undefined_predicates(problog_calls(_131236,_131237,_131238), problog, _1048300, _1048301 )
7180d 239 0 CALL:  prolog:$parent_module(problog, _1048283 )
7181d 239 0 FAIL RETRY:  completion:remember(calls(mary), _1048365 )
7182d 230 0 CALL:  completion:next_det_counter(_1048337 )
7183d 230 0 CALL:  prolog:bb_get(completion:det_counter, _1048328 )
7184d 230 0 CALL:  prolog:atomic_concat([y,3], _1048337 )
7185d 230 0 CALL:  prolog:bb_put(completion:det_counter, 3 )
7186d 230 0 CALL:  prolog:atomic_concat([y,y3], _1048365 )
7187d 230 0 CALL:  prolog:assertz(completion:seen_atom(calls(mary),yy3,det,1) )
7188d 230 0 CALL:  prolog:$assert(completion:seen_atom(calls(mary),yy3,det,1), assertz, _131226 )
7189d 230 0 CALL:  prolog:$yap_strip_clause(completion:seen_atom(calls(mary),yy3,det,1), _1048334, _1048335 )
7190d 230 0 CALL:  prolog:$expand_clause(completion:seen_atom(calls(mary),yy3,det,1), _1048338, _1048336 )
7191d 251 0 CALL:  prolog:source_module(_131227 )
7192d 251 0 CALL:  prolog:$yap_strip_clause(user:completion:seen_atom(calls(mary),yy3,det,1), _131231, _131232 )
7193d 251 0 CALL:  prolog:$expand_a_clause(completion:seen_atom(calls(mary),yy3,det,1), user, _1048338, _1048336 )
7194d 251 0 CALL:  prolog:$yap_strip_module(user:completion:seen_atom(calls(mary),yy3,det,1), _1048305, _131239 )
7195d 251 0 CALL:  prolog:$head_and_body(seen_atom(calls(mary),yy3,det,1), _1048304, _1048306 )
7196d 281 0 FAIL RETRY:  prolog:$head_and_body(seen_atom(calls(mary),yy3,det,1), _1048304, _1048306 )
7197d 251 0 CALL:  prolog:$yap_strip_module(completion:seen_atom(calls(mary),yy3,det,1), _1048307, _1048308 )
7198d 251 0 CALL:  prolog:$not_imported(seen_atom(calls(mary),yy3,det,1), completion )
7199d 279 0 CALL:  prolog:recorded('$import', '$import'(_131244,completion,_131246,seen_atom(calls(mary),yy3,det,1),_131248,_131249), _1048290 )
7200d 279 0 FAIL RETRY:  prolog:$not_imported(seen_atom(calls(mary),yy3,det,1), completion )
7201d 251 0 CALL:  prolog:$yap_strip_module(completion:true, _131246, _131247 )
7202d 251 0 CALL:  prolog:$expand_clause_body(true, seen_atom(calls(mary),yy3,det,1), completion, user, completion, _1048310, _1048312 )
7203d 251 0 CALL:  prolog:$build_up(completion, seen_atom(calls(mary),yy3,det,1), user, true, _1048338, true, _1048336 )
7204d 270 0 CALL:  prolog:==(completion, user )
7205d 270 0 FAIL RETRY:  prolog:$build_up(completion, seen_atom(calls(mary),yy3,det,1), user, true, _1048338, true, _1048336 )
7206d 230 0 CALL:  prolog:$$compile(completion:seen_atom(calls(mary),yy3,det,1), assertz, completion:seen_atom(calls(mary),yy3,det,1), _131226 )
7207d 230 0 CALL:  prolog:$head_and_body(completion:seen_atom(calls(mary),yy3,det,1), _1048333, _1048335 )
7208d 252 0 FAIL RETRY:  prolog:$head_and_body(completion:seen_atom(calls(mary),yy3,det,1), _1048333, _1048335 )
7209d 230 0 CALL:  prolog:strip_module(completion:seen_atom(calls(mary),yy3,det,1), _1048338, _1048334 )
7210d 230 0 CALL:  prolog:$undefined(seen_atom(calls(mary),yy3,det,1), completion )
7211d 230 0 CALL:  prolog:$compile(seen_atom(calls(mary),yy3,det,1):-true, assertz, completion:seen_atom(calls(mary),yy3,det,1), completion, _131226 )
+s 0x5602af267380
 @0x7efdd88a3288 0
+s 0x5602af1db490
 @0x7efdd88a3288 0
- 0x5602af2b9280
 @0x7efdd88a3288 230
7212d 230 0 CALL:  completion:split_atom_name(yy3, _1048373, _1048374 )
7213d 230 0 CALL:  prolog:atomic_concat(x, _1048333, yy3 )
7214d 230 0 FAIL RETRY:  idb:recorded(known_atoms, <=>('$atom'(_131206),_131204), _1048364 )
7215d 219 0 CALL:  completion:remember(earthquake, _1048365 )
7216d 228 0 CALL:  completion:seen_atom(earthquake, _1048365, _1048340, _1048341 )
7217d 228 0 FAIL RETRY:  completion:remember(earthquake, _1048365 )
7218d 228 0 CALL:  prolog:atom_codes(earthquake, [76|_131208] )
7219d 228 0 FAIL RETRY:  completion:remember(earthquake, _1048365 )
7220d 228 0 CALL:  problog:probabilistic_fact(_1048341, earthquake, _1048340 )
7221d 249 0 CALL:  prolog:ground(earthquake )
7222d 228 0 CALL:  prolog:=..(earthquake, [_131207|_131208] )
7223d 228 0 CALL:  prolog:atomic_concat(problog_, earthquake, _1048316 )
7224d 228 0 CALL:  lists:append([_131211], [_131213], _1048315 )
7225d 228 0 CALL:  lists:append([], [_131213], _131216 )
7226d 228 0 CALL:  prolog:=..(_1048318, [problog_earthquake,_131211,_131213] )
7227d 228 0 CALL:  prolog:length([_131211,_131213], _1048317 )
7228d 228 0 CALL:  prolog:$skip_list([_131211,_131213], _1048317, _131222, _131223 )
7229d 228 0 CALL:  prolog:==([], [] )
7230d 228 0 CALL:  prolog:current_predicate(problog:problog_earthquake/2 )
7231d 228 0 CALL:  prolog:$yap_strip_module(problog:problog_earthquake/2, _1048312, _1048311 )
7232d 228 0 CALL:  prolog:must_bind_to_type(predicate_indicator, problog_earthquake/2 )
7233d 228 0 TRY_OR 
7234d 280 0 CALL:  error:may_bind_to_type(predicate_indicator, problog_earthquake/2 )
7235d 289 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, problog_earthquake/2 )
7236d 280 0 TRY_OR 
7238d 280 0 CALL:  error:may_bind_to_type(atom, problog_earthquake )
7239d 297 0 FAIL RETRY:  error:may_bind_to_type(atom, problog_earthquake )
7240d 280 0 CALL:  error:may_bind_to_type(integer, 2 )
7241d 289 0 FAIL RETRY:  error:may_bind_to_type(integer, 2 )
7242d 228 0 CALL:  prolog:$c_i_predicate(problog_earthquake/2, problog )
7243d 228 0 TRY_OR 
7244d 274 0 CALL:  prolog:ground(problog_earthquake/2 )
7245d 228 0 CALL:  prolog:functor(_131230, problog_earthquake, 2 )
7246d 228 0 CALL:  prolog:current_predicate(problog_earthquake, problog:problog_earthquake(_131231,_131232) )
7247d 228 0 CALL:  prolog:$yap_strip_module(problog:problog_earthquake(_131231,_131232), _1048308, _1048307 )
7248d 228 0 CALL:  prolog:functor(problog_earthquake(_131231,_131232), problog_earthquake, _1048306 )
7249d 228 0 TRY_OR 
7250d 276 0 CALL:  prolog:$current_predicate(problog_earthquake, problog, problog_earthquake(_131231,_131232), user )
7251d 276 0 CALL:  problog:problog_earthquake(_131211, _131213 )
7252d 276 0 CALL:  prolog:is(_1048341, 3, -0.6596650473806767 )
7253d 219 0 TRY_OR 
7254d 247 0 CALL:  problog:non_ground_fact(1 )
7256d 219 0 CALL:  prolog:atomic_concat([x,1], _1048365 )
7257d 219 0 CALL:  prolog:assertz(completion:seen_atom(earthquake,x1,1,0.5170244841968428) )
7258d 219 0 CALL:  prolog:$assert(completion:seen_atom(earthquake,x1,1,0.5170244841968428), assertz, _131251 )
7259d 219 0 CALL:  prolog:$yap_strip_clause(completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048345, _1048346 )
7260d 219 0 CALL:  prolog:$expand_clause(completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048349, _1048347 )
7261d 240 0 CALL:  prolog:source_module(_131252 )
7262d 240 0 CALL:  prolog:$yap_strip_clause(user:completion:seen_atom(earthquake,x1,1,0.5170244841968428), _131256, _131257 )
7263d 240 0 CALL:  prolog:$expand_a_clause(completion:seen_atom(earthquake,x1,1,0.5170244841968428), user, _1048349, _1048347 )
7264d 240 0 CALL:  prolog:$yap_strip_module(user:completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048316, _131264 )
7265d 240 0 CALL:  prolog:$head_and_body(seen_atom(earthquake,x1,1,0.5170244841968428), _1048315, _1048317 )
7266d 270 0 FAIL RETRY:  prolog:$head_and_body(seen_atom(earthquake,x1,1,0.5170244841968428), _1048315, _1048317 )
7267d 240 0 CALL:  prolog:$yap_strip_module(completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048318, _1048319 )
7268d 240 0 CALL:  prolog:$not_imported(seen_atom(earthquake,x1,1,0.5170244841968428), completion )
7269d 268 0 CALL:  prolog:recorded('$import', '$import'(_131269,completion,_131271,seen_atom(earthquake,x1,1,0.5170244841968428),_131273,_131274), _1048301 )
7270d 268 0 FAIL RETRY:  prolog:$not_imported(seen_atom(earthquake,x1,1,0.5170244841968428), completion )
7271d 240 0 CALL:  prolog:$yap_strip_module(completion:true, _131271, _131272 )
7272d 240 0 CALL:  prolog:$expand_clause_body(true, seen_atom(earthquake,x1,1,0.5170244841968428), completion, user, completion, _1048321, _1048323 )
7273d 240 0 CALL:  prolog:$build_up(completion, seen_atom(earthquake,x1,1,0.5170244841968428), user, true, _1048349, true, _1048347 )
7274d 259 0 CALL:  prolog:==(completion, user )
7275d 259 0 FAIL RETRY:  prolog:$build_up(completion, seen_atom(earthquake,x1,1,0.5170244841968428), user, true, _1048349, true, _1048347 )
7276d 219 0 CALL:  prolog:$$compile(completion:seen_atom(earthquake,x1,1,0.5170244841968428), assertz, completion:seen_atom(earthquake,x1,1,0.5170244841968428), _131251 )
7277d 219 0 CALL:  prolog:$head_and_body(completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048344, _1048346 )
7278d 241 0 FAIL RETRY:  prolog:$head_and_body(completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048344, _1048346 )
7279d 219 0 CALL:  prolog:strip_module(completion:seen_atom(earthquake,x1,1,0.5170244841968428), _1048349, _1048345 )
7280d 219 0 CALL:  prolog:$undefined(seen_atom(earthquake,x1,1,0.5170244841968428), completion )
7281d 219 0 CALL:  prolog:$compile(seen_atom(earthquake,x1,1,0.5170244841968428):-true, assertz, completion:seen_atom(earthquake,x1,1,0.5170244841968428), completion, _131251 )
+s 0x5602af2672b0
 @0x7efdd88a3268 0
+s 0x5602af1db2f0
 @0x7efdd88a3268 0
- 0x5602af2aa660
 @0x7efdd88a3268 219
7282d 219 0 CALL:  completion:split_atom_name(x1, _1048373, _1048374 )
7283d 219 0 CALL:  prolog:atomic_concat(x, _1048344, x1 )
7284d 219 0 CALL:  prolog:atom_codes('1', _1048349 )
7285d 219 0 TRY_OR 
7286d 238 0 CALL:  lists:append(_1048346, [95|_131282], [49] )
7287d 248 0 FAIL RETRY:  lists:append(_1048346, [95|_131282], [49] )
7288d 238 0 CALL:  lists:append(_131284, [95|_131282], [] )
7289d 248 0 FAIL RETRY:  lists:append(_131284, [95|_131282], [] )
7291d 219 0 CALL:  prolog:number_chars(_1048373, [49] )
7292d 219 0 TRY_OR 
7293d 227 0 TRY_OR 
7294d 235 0 CALL:  prolog:==(false, true )
7296d 227 0 CALL:  prolog:add_to_array_element(known_count_false_training, 1, 1, _1048371 )
7297d 227 0 CALL:  completion:know_atom_expected_count(false, _1048375 )
7298d 227 0 CALL:  prolog:format('$stream'(3), 'completion:known_count(~w,~w,~w,~w). % ~w~n', completion:[2,1,0,0,earthquake] )
7300d 173 0 CALL:  prolog:close('$stream'(3) )
7301d 173 0 CALL:  prolog:key_statistics(known_atoms, _1048389, _1048385 )
7302d 173 0 CALL:  prolog:key_statistics(known_atoms, _1048389, _1048377, _1048378 )
7303d 173 0 CALL:  logger:logger_add_to_variable(train_bdd_script_generation_active_ground_atoms, 0 )
7304d 173 0 TRY_OR 
7305d 204 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation_active_ground_atoms )
7306d 204 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_active_ground_atoms, _1048364 )
7307d 204 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_active_ground_atoms, _1048365 )
7308d 204 0 CALL:  prolog:\=(2, null )
7309d 173 0 CALL:  logger:logger_get_variable(train_bdd_script_generation_active_ground_atoms, _1048380 )
7310d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_active_ground_atoms, _1048372 )
7311d 173 0 TRY_OR 
7312d 212 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_active_ground_atoms, null )
7314d 212 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_active_ground_atoms, _1048380 )
7315d 173 0 CALL:  logger:logger_set_variable_again(train_bdd_script_generation_active_ground_atoms, 2 )
7316d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_active_ground_atoms, _1048380 )
7317d 173 0 TRY_OR 
7318d 205 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_active_ground_atoms, _1048378 )
7319d 173 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation_active_ground_atoms, 2 )
7320d 173 0 CALL:  logger:logger_add_to_variable(train_bdd_script_generation_propagated_ground_atoms, 6 )
7321d 173 0 TRY_OR 
7322d 202 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation_propagated_ground_atoms )
7323d 202 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_propagated_ground_atoms, _1048366 )
7324d 202 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_propagated_ground_atoms, _1048367 )
7325d 202 0 CALL:  prolog:\=(1, null )
7326d 173 0 CALL:  logger:logger_get_variable(train_bdd_script_generation_propagated_ground_atoms, _1048382 )
7327d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_propagated_ground_atoms, _1048374 )
7328d 173 0 TRY_OR 
7329d 210 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_propagated_ground_atoms, null )
7331d 210 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_propagated_ground_atoms, _1048382 )
7332d 173 0 CALL:  logger:logger_set_variable_again(train_bdd_script_generation_propagated_ground_atoms, 7 )
7333d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation_propagated_ground_atoms, _1048382 )
7334d 173 0 TRY_OR 
7335d 203 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation_propagated_ground_atoms, _1048380 )
7336d 173 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation_propagated_ground_atoms, 7 )
7337d 173 0 CALL:  prolog:eraseall(rules )
7338d 173 0 CALL:  prolog:eraseall(unpropagated_rules )
7339d 173 0 CALL:  prolog:eraseall(known_atoms )
- 0x5602af2b4250
 @0x7efdd88a3208 173
- 0x5602af2b0e30
 @0x7efdd88a3208 173
- 0x5602af2affd0
 @0x7efdd88a3208 173
- 0x5602aeebe100
 @0x7efdd88a3208 173
- 0x5602af001a10
 @0x7efdd88a3208 173
- 0x5602af1b7ee0
 @0x7efdd88a3208 173
- 0x5602af000ee0
 @0x7efdd88a3208 173
- 0x5602af1e08d0
 @0x7efdd88a3208 173
- 0x5602aeec6410
 @0x7efdd88a3208 173
- 0x5602af26d4d0
 @0x7efdd88a3208 173
- 0x5602af2b4110
 @0x7efdd88a3208 173
- 0x5602af239da0
 @0x7efdd88a3208 173
- 0x5602af28d780
 @0x7efdd88a3208 173
- 0x5602af28dc40
 @0x7efdd88a3208 173
- 0x5602af266e90
 @0x7efdd88a3208 173
- 0x5602af266d10
 @0x7efdd88a3208 173
- 0x5602af266c50
 @0x7efdd88a3208 173
- 0x5602af265b10
 @0x7efdd88a3208 173
7340d 173 0 CALL:  grounder:grounder_reset
7341d 173 0 CALL:  prolog:eraseall(reachable )
7342d 173 0 CALL:  logger:logger_stop_timer(train_bdd_script_generation )
7343d 173 0 CALL:  prolog:atom_concat(logger_start_time_, train_bdd_script_generation, _1048383 )
7344d 173 0 CALL:  prolog:bb_delete(logger:logger_start_time_train_bdd_script_generation, _1048386 )
7345d 173 0 CALL:  prolog:statistics(walltime, [_131229,_131231] )
7346d 173 0 CALL:  prolog:$walltime(_131229, _131231 )
7347d 173 0 CALL:  prolog:bb_put(logger:logger_start_time_train_bdd_script_generation, null )
7348d 173 0 TRY_OR 
7349d 196 0 CALL:  logger:logger_variable_is_set(train_bdd_script_generation )
7350d 196 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation, _1048372 )
7351d 196 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation, _1048373 )
7352d 196 0 CALL:  prolog:\=(35794, null )
7353d 173 0 CALL:  logger:logger_get_variable(train_bdd_script_generation, _1048388 )
7354d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation, _1048380 )
7355d 173 0 TRY_OR 
7356d 204 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation, null )
7358d 204 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation, _1048388 )
7359d 173 0 CALL:  logger:logger_set_variable_again(train_bdd_script_generation, 69727 )
7360d 173 0 CALL:  prolog:atom_concat(logger_data_, train_bdd_script_generation, _1048381 )
7361d 173 0 TRY_OR 
7362d 204 0 CALL:  prolog:bb_get(logger:logger_data_train_bdd_script_generation, _1048379 )
7363d 173 0 CALL:  prolog:bb_put(logger:logger_data_train_bdd_script_generation, 69727 )
7364d 173 0 CALL:  print_learning:format_learning(3, '~n', [] )
7365d 188 0 CALL:  flags:problog_flag(verbosity_learning, _1048378 )
7366d 188 0 CALL:  gflags:flag_get(verbosity_learning, _1048378 )
7367d 188 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_131247), _131248 )
7368d 188 0 CALL:  prolog:>=(5, 3 )
7369d 173 0 CALL:  prolog:format('~n', print_learning:[] )
7370d 173 0 CALL:  prolog:flush_output(user )

7371d 173 0 CALL:  prolog:garbage_collect_atoms
7372d 173 0 CALL:  prolog:$atom_gc
- 0x5602af2b7c60
 @0x7efdd88a3208 173
- 0x5602af2b9bb0
 @0x7efdd88a3208 173
- 0x5602af2bd850
 @0x7efdd88a3208 173
- 0x5602af2b52a0
 @0x7efdd88a3208 173
- 0x5602af2baff0
 @0x7efdd88a3208 173
- 0x5602af2b4080
 @0x7efdd88a3208 173
7373d 173 0 CALL:  prolog:garbage_collect
7374d 173 0 CALL:  prolog:$gc
7376d 140 0 TRY_OR 
7377d 162 0 CALL:  prolog:current_predicate(user:test_example/1 )
7378d 162 0 CALL:  prolog:$yap_strip_module(user:test_example/1, _1048407, _1048406 )
7379d 162 0 CALL:  prolog:must_bind_to_type(predicate_indicator, test_example/1 )
7380d 162 0 TRY_OR 
7381d 185 0 CALL:  error:may_bind_to_type(predicate_indicator, test_example/1 )
7382d 194 0 FAIL RETRY:  error:may_bind_to_type(predicate_indicator, test_example/1 )
7383d 185 0 TRY_OR 
7385d 185 0 CALL:  error:may_bind_to_type(atom, test_example )
7386d 202 0 FAIL RETRY:  error:may_bind_to_type(atom, test_example )
7387d 185 0 CALL:  error:may_bind_to_type(integer, 1 )
7388d 194 0 FAIL RETRY:  error:may_bind_to_type(integer, 1 )
7389d 162 0 CALL:  prolog:$c_i_predicate(test_example/1, user )
7390d 162 0 TRY_OR 
7391d 179 0 CALL:  prolog:ground(test_example/1 )
7392d 162 0 CALL:  prolog:functor(_130925, test_example, 1 )
7393d 162 0 CALL:  prolog:current_predicate(test_example, user:test_example(_130926) )
7394d 162 0 CALL:  prolog:$yap_strip_module(user:test_example(_130926), _1048403, _1048402 )
7395d 162 0 CALL:  prolog:functor(test_example(_130926), test_example, _1048401 )
7396d 162 0 TRY_OR 
7397d 181 0 CALL:  prolog:$current_predicate(test_example, user, test_example(_130926), user )
7398d 181 0 CALL:  user:test_example(_1048421 )
7400d 162 0 CALL:  prolog:$imported_predicate(test_example(_130926), user, _1048406, _1048407 )
7401d 182 0 CALL:  prolog:$is_system_predicate(test_example(_130926), prolog )
7402d 182 0 FAIL RETRY:  prolog:$imported_predicate(test_example(_130926), user, _1048406, _1048407 )
7403d 162 0 CALL:  prolog:$undefined(test_example(_130926), user )
7405d 140 0 TRY_OR 
7406d 159 0 CALL:  prolog:==(true, true )
7407d 140 0 CALL:  print_learning:format_learning(2, 'Calculate MD5s for training example BDD scripts~n', [] )
7408d 160 0 CALL:  flags:problog_flag(verbosity_learning, _1048406 )
7409d 160 0 CALL:  gflags:flag_get(verbosity_learning, _1048406 )
7410d 160 0 CALL:  prolog:recorded(flag_values, flag(verbosity_learning,_130921), _130922 )
7411d 160 0 CALL:  prolog:>=(5, 2 )
7412d 140 0 CALL:  prolog:format('Calculate MD5s for training example BDD scripts~n', print_learning:[] )
7413d 140 0 CALL:  prolog:flush_output(user )
Calculate MD5s for training example BDD scripts
7414d 140 0 CALL:  problog_lfi:create_training_query_cluster_list(_1048428 )
7415d 140 0 CALL:  prolog:findall(a(_130927,_130928), problog_lfi: (user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945)), _1048416 )
7416d 140 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048416 )
7417d 180 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048416 )
7418d 140 0 TRY_OR 
7419d 187 0 CALL:  error:has_type(list_or_partial_list, _1048416 )
7420d 187 0 CALL:  error:is_list_or_partial_list(_1048416 )
7421d 187 0 CALL:  prolog:$skip_list(_130949, _1048416, _130950 )
7422d 140 0 CALL:  prolog:$findall(a(_130927,_130928), problog_lfi: (user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945)), [], _130950 )
7423d 140 0 CALL:  nb:nb_queue(_1048404 )
7424d 140 0 TRY_OR 
7425d 181 0 CALL:  prolog:$execute(problog_lfi: (user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945)) )
7426d 181 0 CALL:  prolog:$call(problog_lfi: (user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945)), 181, problog_lfi: (user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945)), user )
7427d 192 0 FAIL RETRY:  prolog:$call(problog_lfi: (user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945)), 181, problog_lfi: (user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945)), user )
7428d 181 0 CALL:  prolog:$call(user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945), 181, problog_lfi: (user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945)), problog_lfi )
7429d 181 0 CALL:  prolog:$call(user:example(_130927), 181, problog_lfi: (user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945)), problog_lfi )
7430d 223 0 FAIL RETRY:  prolog:$call(user:example(_130927), 181, problog_lfi: (user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945)), problog_lfi )
7431d 181 0 CALL:  prolog:$call(example(_130927), 181, problog_lfi: (user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945)), user )
7432d 234 0 FAIL RETRY:  prolog:$call(example(_130927), 181, problog_lfi: (user:example(_130927),bdd_cluster(_130927,_130945),member(_130928,_130945)), user )
7433d 181 0 CALL:  prolog:$execute0(example(_130927), user )
7434d 181 0 CALL:  user:example(_130927 )
7435d 231 0 CALL:  prolog:$call(bdd_cluster(1,_130945),member(_130928,_130945), 181, problog_lfi: (user:example(1),bdd_cluster(1,_130945),member(_130928,_130945)), problog_lfi )
7436d 231 0 CALL:  prolog:$call(bdd_cluster(1,_130945), 181, problog_lfi: (user:example(1),bdd_cluster(1,_130945),member(_130928,_130945)), problog_lfi )
7437d 262 0 FAIL RETRY:  prolog:$call(bdd_cluster(1,_130945), 181, problog_lfi: (user:example(1),bdd_cluster(1,_130945),member(_130928,_130945)), problog_lfi )
7438d 231 0 CALL:  prolog:$execute0(bdd_cluster(1,_130945), problog_lfi )
+s 0x5602af265b10
 @0x7efdd88a31a8 0
7439d 231 0 CALL:  problog_lfi:bdd_cluster(1, _130945 )
7440d 231 0 CALL:  prolog:$undefp([problog_lfi|bdd_cluster(1,_130945)], error )
7441d 231 0 CALL:  prolog:yap_flag(unknown, error, fail )
7442d 231 0 CALL:  prolog:$stop_creeping(_1048311 )
7443d 231 0 TRY_OR 
7444d 275 0 CALL:  prolog:$undefp_search(problog_lfi:bdd_cluster(1,_130945), _135061:_135062 )
7445d 284 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_135064,_135065,_135066,_135067), user )
7446d 284 0 FAIL RETRY:  prolog:$undefp_search(problog_lfi:bdd_cluster(1,_130945), _135061:_135062 )
7447d 275 0 CALL:  prolog:expand_goal(problog_lfi:bdd_cluster(1,_130945), _135061:_135062 )
7448d 275 0 CALL:  prolog:$expand_meta_call(problog_lfi:bdd_cluster(1,_130945), [], _135061:_135062 )
7449d 275 0 CALL:  prolog:source_module(_135063 )
7450d 275 0 CALL:  prolog:$yap_strip_module(user:problog_lfi:bdd_cluster(1,_130945), _1048291, _135067 )
7451d 275 0 CALL:  prolog:$expand_goals(bdd_cluster(1,_130945), _1048290, _1048292, problog_lfi, user, problog_lfi, []- (problog_lfi:bdd_cluster(1,_130945)) )
7452d 299 0 FAIL RETRY:  prolog:$expand_goals(bdd_cluster(1,_130945), _1048290, _1048292, problog_lfi, user, problog_lfi, []- (problog_lfi:bdd_cluster(1,_130945)) )
7453d 299 0 FAIL RETRY:  prolog:$expand_goals(bdd_cluster(1,_130945), _1048290, _1048292, problog_lfi, user, problog_lfi, []- (problog_lfi:bdd_cluster(1,_130945)) )
7454d 299 0 FAIL RETRY:  prolog:$expand_goals(bdd_cluster(1,_130945), _1048290, _1048292, problog_lfi, user, problog_lfi, []- (problog_lfi:bdd_cluster(1,_130945)) )
7455d 275 0 CALL:  prolog:$yap_strip_module(problog_lfi:bdd_cluster(1,_130945), _135074, _135075 )
7456d 275 0 CALL:  prolog:$expand_goal(bdd_cluster(1,_130945), _1048290, _1048292, problog_lfi, user, problog_lfi, []- (problog_lfi:bdd_cluster(1,_130945)) )
7457d 275 0 CALL:  prolog:$yap_strip_module(problog_lfi:bdd_cluster(1,_130945), _135079, _135080 )
7458d 275 0 CALL:  prolog:$user_expansion(problog_lfi:bdd_cluster(1,_130945), _135085:_135086 )
7459d 309 0 CALL:  prolog:_user_expand_goal(problog_lfi:bdd_cluster(1,_130945), _135088:_135089 )
7463d 309 0 FAIL RETRY:  prolog:$user_expansion(problog_lfi:bdd_cluster(1,_130945), _135085:_135086 )
7464d 275 0 CALL:  prolog:$import_expansion(problog_lfi:bdd_cluster(1,_130945), _135088:_135089 )
7465d 308 0 CALL:  prolog:$imported_predicate(bdd_cluster(1,_130945), problog_lfi, _135089, _135088 )
7466d 324 0 CALL:  prolog:$is_system_predicate(bdd_cluster(1,_130945), prolog )
7467d 324 0 FAIL RETRY:  prolog:$imported_predicate(bdd_cluster(1,_130945), problog_lfi, _135089, _135088 )
7468d 308 0 CALL:  prolog:$undefined(bdd_cluster(1,_130945), problog_lfi )
7469d 308 0 CALL:  prolog:$get_undefined_predicates(bdd_cluster(1,_130945), problog_lfi, _135089, _135088 )
7470d 331 0 CALL:  prolog:recorded('$import', '$import'(_135091,problog_lfi,_135093,bdd_cluster(1,_130945),_135095,_135096), _1048234 )
7471d 331 0 CALL:  prolog:$continue_imported(_135088, completion, _135089, bdd_cluster(1,_130945) )
7472d 342 0 CALL:  prolog:$pred_exists(bdd_cluster(1,_130945), completion )
7473d 331 0 CALL:  prolog:\=(completion, problog_lfi )
7474d 275 0 CALL:  prolog:$meta_expansion(completion:bdd_cluster(1,_130945), problog_lfi, [], _1048279 )
7475d 307 0 CALL:  prolog:$yap_strip_module(completion:bdd_cluster(1,_130945), _135111, _1048258 )
7476d 307 0 CALL:  prolog:functor(bdd_cluster(1,_130945), _135114, _135115 )
7477d 307 0 CALL:  prolog:$meta_predicate(bdd_cluster, completion, 2, _1048259 )
7478d 307 0 FAIL RETRY:  prolog:$meta_expansion(completion:bdd_cluster(1,_130945), problog_lfi, [], _1048279 )
7479d 275 0 CALL:  prolog:$yap_strip_module(completion:bdd_cluster(1,_130945), _135111, _135112 )
7480d 275 0 CALL:  prolog:$yap_strip_module(completion:bdd_cluster(1,_130945), _135113, _135114 )
7481d 275 0 CALL:  prolog:$end_goal_expansion(bdd_cluster(1,_130945), _1048290, _1048292, problog_lfi, user, completion, problog_lfi:bdd_cluster(1,_130945) )
7482d 275 0 CALL:  prolog:$match_mod(bdd_cluster(1,_130945), problog_lfi, user, completion, _1048290 )
7483d 275 0 CALL:  prolog:$is_system_predicate(bdd_cluster(1,_130945), completion )
7484d 275 0 TRY_OR 
7485d 313 0 CALL:  prolog:==(completion, problog_lfi )
7487d 275 0 CALL:  prolog:$c_built_in(completion:bdd_cluster(1,_130945), completion, problog_lfi:bdd_cluster(1,_130945), _1048281 )
7488d 306 0 CALL:  prolog:get_value('$c_arith', true )
7489d 275 0 CALL:  prolog:do_c_built_in(completion:bdd_cluster(1,_130945), completion, problog_lfi:bdd_cluster(1,_130945), _1048281 )
7490d 317 0 CALL:  prolog:$yap_strip_module(completion:bdd_cluster(1,_130945), _135118, _135119 )
7491d 317 0 FAIL RETRY:  prolog:do_c_built_in(completion:bdd_cluster(1,_130945), completion, problog_lfi:bdd_cluster(1,_130945), _1048281 )
7492d 317 0 CALL:  prolog:$compop(completion:bdd_cluster(1,_130945), _1048243, _1048244, _1048246 )
7493d 317 0 FAIL RETRY:  prolog:do_c_built_in(completion:bdd_cluster(1,_130945), completion, problog_lfi:bdd_cluster(1,_130945), _1048281 )
7494d 317 0 CALL:  prolog:$yap_strip_module(completion:completion:bdd_cluster(1,_130945), _135121, _135122 )
7495d 317 0 CALL:  prolog:$match_mod(bdd_cluster(1,_130945), problog_lfi, user, completion, _1048292 )
7496d 317 0 CALL:  prolog:$is_system_predicate(bdd_cluster(1,_130945), completion )
7497d 317 0 TRY_OR 
7498d 333 0 CALL:  prolog:==(completion, problog_lfi )
7500d 317 0 CALL:  prolog:$yap_strip_module(problog_lfi:completion:bdd_cluster(1,_130945), _135061, _135062 )
7501d 317 0 TRY_OR 
7502d 325 0 CALL:  prolog:\==(problog_lfi, completion )
7503d 317 0 CALL:  prolog:\=(bdd_cluster(1,_130945), fail )
7504d 231 0 CALL:  prolog:yap_flag(unknown, _1048310, error )
7505d 231 0 TRY_OR 
7506d 272 0 CALL:  prolog:==(false, true )
7508d 231 0 CALL:  prolog:$execute0(bdd_cluster(1,_130945), completion )
7509d 231 0 CALL:  completion:bdd_cluster(1, _130945 )
+s 0x5602af2c0770
 @0x7efdd88a31b8 0
+s 0x5602af2c1d10
 @0x7efdd88a31b8 0
- 0x5602af2c1d10
 @0x7efdd88a31b8 231
+s 0x5602af2aa660
 @0x7efdd88a31b8 0
+s 0x5602af266e90
 @0x7efdd88a31b8 0
- 0x5602af2c0770
 @0x7efdd88a31b8 231
7510d 231 0 CALL:  prolog:$call(member(_130928,[1]), 181, problog_lfi: (user:example(1),bdd_cluster(1,[1]),member(_130928,[1])), problog_lfi )
7511d 242 0 FAIL RETRY:  prolog:$call(member(_130928,[1]), 181, problog_lfi: (user:example(1),bdd_cluster(1,[1]),member(_130928,[1])), problog_lfi )
7512d 231 0 CALL:  prolog:$execute0(member(_130928,[1]), problog_lfi )
+s 0x5602af28dc40
 @0x7efdd88a31c8 0
7513d 231 0 CALL:  problog_lfi:member(_130928, [1] )
7514d 231 0 CALL:  prolog:$undefp([problog_lfi|member(_130928,[1])], error )
7515d 231 0 CALL:  prolog:yap_flag(unknown, error, fail )
7516d 231 0 CALL:  prolog:$stop_creeping(_1048331 )
7517d 231 0 TRY_OR 
7518d 255 0 CALL:  prolog:$undefp_search(problog_lfi:member(_130928,[1]), _135140:_135141 )
7519d 264 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_135143,_135144,_135145,_135146), user )
7520d 264 0 FAIL RETRY:  prolog:$undefp_search(problog_lfi:member(_130928,[1]), _135140:_135141 )
7521d 255 0 CALL:  prolog:expand_goal(problog_lfi:member(_130928,[1]), _135140:_135141 )
7522d 255 0 CALL:  prolog:$expand_meta_call(problog_lfi:member(_130928,[1]), [], _135140:_135141 )
7523d 255 0 CALL:  prolog:source_module(_135142 )
7524d 255 0 CALL:  prolog:$yap_strip_module(user:problog_lfi:member(_130928,[1]), _1048311, _135146 )
7525d 255 0 CALL:  prolog:$expand_goals(member(_130928,[1]), _1048310, _1048312, problog_lfi, user, problog_lfi, []- (problog_lfi:member(_130928,[1])) )
7526d 279 0 FAIL RETRY:  prolog:$expand_goals(member(_130928,[1]), _1048310, _1048312, problog_lfi, user, problog_lfi, []- (problog_lfi:member(_130928,[1])) )
7527d 279 0 FAIL RETRY:  prolog:$expand_goals(member(_130928,[1]), _1048310, _1048312, problog_lfi, user, problog_lfi, []- (problog_lfi:member(_130928,[1])) )
7528d 279 0 FAIL RETRY:  prolog:$expand_goals(member(_130928,[1]), _1048310, _1048312, problog_lfi, user, problog_lfi, []- (problog_lfi:member(_130928,[1])) )
7529d 255 0 CALL:  prolog:$yap_strip_module(problog_lfi:member(_130928,[1]), _135153, _135154 )
7530d 255 0 CALL:  prolog:$expand_goal(member(_130928,[1]), _1048310, _1048312, problog_lfi, user, problog_lfi, []- (problog_lfi:member(_130928,[1])) )
7531d 255 0 CALL:  prolog:$yap_strip_module(problog_lfi:member(_130928,[1]), _135158, _135159 )
7532d 255 0 CALL:  prolog:$user_expansion(problog_lfi:member(_130928,[1]), _135164:_135165 )
7533d 289 0 CALL:  prolog:_user_expand_goal(problog_lfi:member(_130928,[1]), _135167:_135168 )
7537d 289 0 FAIL RETRY:  prolog:$user_expansion(problog_lfi:member(_130928,[1]), _135164:_135165 )
7538d 255 0 CALL:  prolog:$import_expansion(problog_lfi:member(_130928,[1]), _135167:_135168 )
7539d 288 0 CALL:  prolog:$imported_predicate(member(_130928,[1]), problog_lfi, _135168, _135167 )
7540d 304 0 CALL:  prolog:$is_system_predicate(member(_130928,[1]), prolog )
7541d 304 0 FAIL RETRY:  prolog:$imported_predicate(member(_130928,[1]), problog_lfi, _135168, _135167 )
7542d 288 0 CALL:  prolog:$undefined(member(_130928,[1]), problog_lfi )
7543d 288 0 CALL:  prolog:$get_undefined_predicates(member(_130928,[1]), problog_lfi, _135168, _135167 )
7544d 311 0 CALL:  prolog:recorded('$import', '$import'(_135170,problog_lfi,_135172,member(_130928,[1]),_135174,_135175), _1048254 )
7545d 311 0 CALL:  prolog:$continue_imported(_135167, lists, _135168, member(_130928,[1]) )
7546d 322 0 CALL:  prolog:$pred_exists(member(_130928,[1]), lists )
7547d 311 0 CALL:  prolog:\=(lists, problog_lfi )
7548d 255 0 CALL:  prolog:$meta_expansion(lists:member(_130928,[1]), problog_lfi, [], _1048299 )
7549d 287 0 CALL:  prolog:$yap_strip_module(lists:member(_130928,[1]), _135190, _1048278 )
7550d 287 0 CALL:  prolog:functor(member(_130928,[1]), _135193, _135194 )
7551d 287 0 CALL:  prolog:$meta_predicate(member, lists, 2, _1048279 )
7552d 287 0 FAIL RETRY:  prolog:$meta_expansion(lists:member(_130928,[1]), problog_lfi, [], _1048299 )
7553d 255 0 CALL:  prolog:$yap_strip_module(lists:member(_130928,[1]), _135190, _135191 )
7554d 255 0 CALL:  prolog:$yap_strip_module(lists:member(_130928,[1]), _135192, _135193 )
7555d 255 0 CALL:  prolog:$end_goal_expansion(member(_130928,[1]), _1048310, _1048312, problog_lfi, user, lists, problog_lfi:member(_130928,[1]) )
7556d 255 0 CALL:  prolog:$match_mod(member(_130928,[1]), problog_lfi, user, lists, _1048310 )
7557d 255 0 CALL:  prolog:$is_system_predicate(member(_130928,[1]), lists )
7558d 255 0 TRY_OR 
7559d 293 0 CALL:  prolog:==(lists, problog_lfi )
7561d 255 0 CALL:  prolog:$c_built_in(lists:member(_130928,[1]), lists, problog_lfi:member(_130928,[1]), _1048301 )
7562d 286 0 CALL:  prolog:get_value('$c_arith', true )
7563d 255 0 CALL:  prolog:do_c_built_in(lists:member(_130928,[1]), lists, problog_lfi:member(_130928,[1]), _1048301 )
7564d 297 0 CALL:  prolog:$yap_strip_module(lists:member(_130928,[1]), _135197, _135198 )
7565d 297 0 FAIL RETRY:  prolog:do_c_built_in(lists:member(_130928,[1]), lists, problog_lfi:member(_130928,[1]), _1048301 )
7566d 297 0 CALL:  prolog:$compop(lists:member(_130928,[1]), _1048263, _1048264, _1048266 )
7567d 297 0 FAIL RETRY:  prolog:do_c_built_in(lists:member(_130928,[1]), lists, problog_lfi:member(_130928,[1]), _1048301 )
7568d 297 0 CALL:  prolog:$yap_strip_module(lists:lists:member(_130928,[1]), _135200, _135201 )
7569d 297 0 CALL:  prolog:$match_mod(member(_130928,[1]), problog_lfi, user, lists, _1048312 )
7570d 297 0 CALL:  prolog:$is_system_predicate(member(_130928,[1]), lists )
7571d 297 0 TRY_OR 
7572d 313 0 CALL:  prolog:==(lists, problog_lfi )
7574d 297 0 CALL:  prolog:$yap_strip_module(problog_lfi:lists:member(_130928,[1]), _135140, _135141 )
7575d 297 0 TRY_OR 
7576d 305 0 CALL:  prolog:\==(problog_lfi, lists )
7577d 297 0 CALL:  prolog:\=(member(_130928,[1]), fail )
7578d 231 0 CALL:  prolog:yap_flag(unknown, _1048330, error )
7579d 231 0 TRY_OR 
7580d 252 0 CALL:  prolog:==(false, true )
7582d 231 0 CALL:  prolog:$execute0(member(_130928,[1]), lists )
7583d 231 0 CALL:  lists:member(_130928, [1] )
7584d 240 0 CALL:  nb:nb_queue_enqueue(queue(0,0,0,0), a(1,1) )
7585d 240 0 FAIL RETRY:  lists:member(_130928, [1] )
7586d 231 0 CALL:  lists:member(_130928, [] )
7587d 231 0 FAIL RETRY:  user:example(_130927 )
7588d 181 0 CALL:  prolog:$call(bdd_cluster(2,_130945),member(_130928,_130945), 181, problog_lfi: (user:example(2),bdd_cluster(2,_130945),member(_130928,_130945)), problog_lfi )
7589d 181 0 CALL:  prolog:$call(bdd_cluster(2,_130945), 181, problog_lfi: (user:example(2),bdd_cluster(2,_130945),member(_130928,_130945)), problog_lfi )
7590d 212 0 FAIL RETRY:  prolog:$call(bdd_cluster(2,_130945), 181, problog_lfi: (user:example(2),bdd_cluster(2,_130945),member(_130928,_130945)), problog_lfi )
7591d 181 0 CALL:  prolog:$execute0(bdd_cluster(2,_130945), problog_lfi )
7592d 181 0 CALL:  problog_lfi:bdd_cluster(2, _130945 )
7593d 181 0 CALL:  prolog:$undefp([problog_lfi|bdd_cluster(2,_130945)], error )
7594d 181 0 CALL:  prolog:yap_flag(unknown, error, fail )
7595d 181 0 CALL:  prolog:$stop_creeping(_1048361 )
7596d 181 0 TRY_OR 
7597d 225 0 CALL:  prolog:$undefp_search(problog_lfi:bdd_cluster(2,_130945), _135061:_135062 )
7598d 234 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_135064,_135065,_135066,_135067), user )
7599d 234 0 FAIL RETRY:  prolog:$undefp_search(problog_lfi:bdd_cluster(2,_130945), _135061:_135062 )
7600d 225 0 CALL:  prolog:expand_goal(problog_lfi:bdd_cluster(2,_130945), _135061:_135062 )
7601d 225 0 CALL:  prolog:$expand_meta_call(problog_lfi:bdd_cluster(2,_130945), [], _135061:_135062 )
7602d 225 0 CALL:  prolog:source_module(_135063 )
7603d 225 0 CALL:  prolog:$yap_strip_module(user:problog_lfi:bdd_cluster(2,_130945), _1048341, _135067 )
7604d 225 0 CALL:  prolog:$expand_goals(bdd_cluster(2,_130945), _1048340, _1048342, problog_lfi, user, problog_lfi, []- (problog_lfi:bdd_cluster(2,_130945)) )
7605d 249 0 FAIL RETRY:  prolog:$expand_goals(bdd_cluster(2,_130945), _1048340, _1048342, problog_lfi, user, problog_lfi, []- (problog_lfi:bdd_cluster(2,_130945)) )
7606d 249 0 FAIL RETRY:  prolog:$expand_goals(bdd_cluster(2,_130945), _1048340, _1048342, problog_lfi, user, problog_lfi, []- (problog_lfi:bdd_cluster(2,_130945)) )
7607d 249 0 FAIL RETRY:  prolog:$expand_goals(bdd_cluster(2,_130945), _1048340, _1048342, problog_lfi, user, problog_lfi, []- (problog_lfi:bdd_cluster(2,_130945)) )
7608d 225 0 CALL:  prolog:$yap_strip_module(problog_lfi:bdd_cluster(2,_130945), _135074, _135075 )
7609d 225 0 CALL:  prolog:$expand_goal(bdd_cluster(2,_130945), _1048340, _1048342, problog_lfi, user, problog_lfi, []- (problog_lfi:bdd_cluster(2,_130945)) )
7610d 225 0 CALL:  prolog:$yap_strip_module(problog_lfi:bdd_cluster(2,_130945), _135079, _135080 )
7611d 225 0 CALL:  prolog:$user_expansion(problog_lfi:bdd_cluster(2,_130945), _135085:_135086 )
7612d 259 0 CALL:  prolog:_user_expand_goal(problog_lfi:bdd_cluster(2,_130945), _135088:_135089 )
7616d 259 0 FAIL RETRY:  prolog:$user_expansion(problog_lfi:bdd_cluster(2,_130945), _135085:_135086 )
7617d 225 0 CALL:  prolog:$import_expansion(problog_lfi:bdd_cluster(2,_130945), _135088:_135089 )
7618d 258 0 CALL:  prolog:$imported_predicate(bdd_cluster(2,_130945), problog_lfi, _135089, _135088 )
7619d 274 0 CALL:  prolog:$is_system_predicate(bdd_cluster(2,_130945), prolog )
7620d 274 0 FAIL RETRY:  prolog:$imported_predicate(bdd_cluster(2,_130945), problog_lfi, _135089, _135088 )
7621d 258 0 CALL:  prolog:$undefined(bdd_cluster(2,_130945), problog_lfi )
7622d 258 0 CALL:  prolog:$get_undefined_predicates(bdd_cluster(2,_130945), problog_lfi, _135089, _135088 )
7623d 281 0 CALL:  prolog:recorded('$import', '$import'(_135091,problog_lfi,_135093,bdd_cluster(2,_130945),_135095,_135096), _1048284 )
7624d 281 0 CALL:  prolog:$continue_imported(_135088, completion, _135089, bdd_cluster(2,_130945) )
7625d 292 0 CALL:  prolog:$pred_exists(bdd_cluster(2,_130945), completion )
7626d 281 0 CALL:  prolog:\=(completion, problog_lfi )
7627d 225 0 CALL:  prolog:$meta_expansion(completion:bdd_cluster(2,_130945), problog_lfi, [], _1048329 )
7628d 257 0 CALL:  prolog:$yap_strip_module(completion:bdd_cluster(2,_130945), _135111, _1048308 )
7629d 257 0 CALL:  prolog:functor(bdd_cluster(2,_130945), _135114, _135115 )
7630d 257 0 CALL:  prolog:$meta_predicate(bdd_cluster, completion, 2, _1048309 )
7631d 257 0 FAIL RETRY:  prolog:$meta_expansion(completion:bdd_cluster(2,_130945), problog_lfi, [], _1048329 )
7632d 225 0 CALL:  prolog:$yap_strip_module(completion:bdd_cluster(2,_130945), _135111, _135112 )
7633d 225 0 CALL:  prolog:$yap_strip_module(completion:bdd_cluster(2,_130945), _135113, _135114 )
7634d 225 0 CALL:  prolog:$end_goal_expansion(bdd_cluster(2,_130945), _1048340, _1048342, problog_lfi, user, completion, problog_lfi:bdd_cluster(2,_130945) )
7635d 225 0 CALL:  prolog:$match_mod(bdd_cluster(2,_130945), problog_lfi, user, completion, _1048340 )
7636d 225 0 CALL:  prolog:$is_system_predicate(bdd_cluster(2,_130945), completion )
7637d 225 0 TRY_OR 
7638d 263 0 CALL:  prolog:==(completion, problog_lfi )
7640d 225 0 CALL:  prolog:$c_built_in(completion:bdd_cluster(2,_130945), completion, problog_lfi:bdd_cluster(2,_130945), _1048331 )
7641d 256 0 CALL:  prolog:get_value('$c_arith', true )
7642d 225 0 CALL:  prolog:do_c_built_in(completion:bdd_cluster(2,_130945), completion, problog_lfi:bdd_cluster(2,_130945), _1048331 )
7643d 267 0 CALL:  prolog:$yap_strip_module(completion:bdd_cluster(2,_130945), _135118, _135119 )
7644d 267 0 FAIL RETRY:  prolog:do_c_built_in(completion:bdd_cluster(2,_130945), completion, problog_lfi:bdd_cluster(2,_130945), _1048331 )
7645d 267 0 CALL:  prolog:$compop(completion:bdd_cluster(2,_130945), _1048293, _1048294, _1048296 )
7646d 267 0 FAIL RETRY:  prolog:do_c_built_in(completion:bdd_cluster(2,_130945), completion, problog_lfi:bdd_cluster(2,_130945), _1048331 )
7647d 267 0 CALL:  prolog:$yap_strip_module(completion:completion:bdd_cluster(2,_130945), _135121, _135122 )
7648d 267 0 CALL:  prolog:$match_mod(bdd_cluster(2,_130945), problog_lfi, user, completion, _1048342 )
7649d 267 0 CALL:  prolog:$is_system_predicate(bdd_cluster(2,_130945), completion )
7650d 267 0 TRY_OR 
7651d 283 0 CALL:  prolog:==(completion, problog_lfi )
7653d 267 0 CALL:  prolog:$yap_strip_module(problog_lfi:completion:bdd_cluster(2,_130945), _135061, _135062 )
7654d 267 0 TRY_OR 
7655d 275 0 CALL:  prolog:\==(problog_lfi, completion )
7656d 267 0 CALL:  prolog:\=(bdd_cluster(2,_130945), fail )
7657d 181 0 CALL:  prolog:yap_flag(unknown, _1048360, error )
7658d 181 0 TRY_OR 
7659d 222 0 CALL:  prolog:==(false, true )
7661d 181 0 CALL:  prolog:$execute0(bdd_cluster(2,_130945), completion )
7662d 181 0 CALL:  completion:bdd_cluster(2, _130945 )
7663d 181 0 CALL:  prolog:$call(member(_130928,[]), 181, problog_lfi: (user:example(2),bdd_cluster(2,[]),member(_130928,[])), problog_lfi )
7664d 192 0 FAIL RETRY:  prolog:$call(member(_130928,[]), 181, problog_lfi: (user:example(2),bdd_cluster(2,[]),member(_130928,[])), problog_lfi )
7665d 181 0 CALL:  prolog:$execute0(member(_130928,[]), problog_lfi )
7666d 181 0 CALL:  problog_lfi:member(_130928, [] )
7667d 181 0 CALL:  prolog:$undefp([problog_lfi|member(_130928,[])], error )
7668d 181 0 CALL:  prolog:yap_flag(unknown, error, fail )
7669d 181 0 CALL:  prolog:$stop_creeping(_1048381 )
7670d 181 0 TRY_OR 
7671d 205 0 CALL:  prolog:$undefp_search(problog_lfi:member(_130928,[]), _135138:_135139 )
7672d 214 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_135141,_135142,_135143,_135144), user )
7673d 214 0 FAIL RETRY:  prolog:$undefp_search(problog_lfi:member(_130928,[]), _135138:_135139 )
7674d 205 0 CALL:  prolog:expand_goal(problog_lfi:member(_130928,[]), _135138:_135139 )
7675d 205 0 CALL:  prolog:$expand_meta_call(problog_lfi:member(_130928,[]), [], _135138:_135139 )
7676d 205 0 CALL:  prolog:source_module(_135140 )
7677d 205 0 CALL:  prolog:$yap_strip_module(user:problog_lfi:member(_130928,[]), _1048361, _135144 )
7678d 205 0 CALL:  prolog:$expand_goals(member(_130928,[]), _1048360, _1048362, problog_lfi, user, problog_lfi, []- (problog_lfi:member(_130928,[])) )
7679d 229 0 FAIL RETRY:  prolog:$expand_goals(member(_130928,[]), _1048360, _1048362, problog_lfi, user, problog_lfi, []- (problog_lfi:member(_130928,[])) )
7680d 229 0 FAIL RETRY:  prolog:$expand_goals(member(_130928,[]), _1048360, _1048362, problog_lfi, user, problog_lfi, []- (problog_lfi:member(_130928,[])) )
7681d 229 0 FAIL RETRY:  prolog:$expand_goals(member(_130928,[]), _1048360, _1048362, problog_lfi, user, problog_lfi, []- (problog_lfi:member(_130928,[])) )
7682d 205 0 CALL:  prolog:$yap_strip_module(problog_lfi:member(_130928,[]), _135151, _135152 )
7683d 205 0 CALL:  prolog:$expand_goal(member(_130928,[]), _1048360, _1048362, problog_lfi, user, problog_lfi, []- (problog_lfi:member(_130928,[])) )
7684d 205 0 CALL:  prolog:$yap_strip_module(problog_lfi:member(_130928,[]), _135156, _135157 )
7685d 205 0 CALL:  prolog:$user_expansion(problog_lfi:member(_130928,[]), _135162:_135163 )
7686d 239 0 CALL:  prolog:_user_expand_goal(problog_lfi:member(_130928,[]), _135165:_135166 )
7690d 239 0 FAIL RETRY:  prolog:$user_expansion(problog_lfi:member(_130928,[]), _135162:_135163 )
7691d 205 0 CALL:  prolog:$import_expansion(problog_lfi:member(_130928,[]), _135165:_135166 )
7692d 238 0 CALL:  prolog:$imported_predicate(member(_130928,[]), problog_lfi, _135166, _135165 )
7693d 254 0 CALL:  prolog:$is_system_predicate(member(_130928,[]), prolog )
7694d 254 0 FAIL RETRY:  prolog:$imported_predicate(member(_130928,[]), problog_lfi, _135166, _135165 )
7695d 238 0 CALL:  prolog:$undefined(member(_130928,[]), problog_lfi )
7696d 238 0 CALL:  prolog:$get_undefined_predicates(member(_130928,[]), problog_lfi, _135166, _135165 )
7697d 261 0 CALL:  prolog:recorded('$import', '$import'(_135168,problog_lfi,_135170,member(_130928,[]),_135172,_135173), _1048304 )
7698d 261 0 CALL:  prolog:$continue_imported(_135165, lists, _135166, member(_130928,[]) )
7699d 272 0 CALL:  prolog:$pred_exists(member(_130928,[]), lists )
7700d 261 0 CALL:  prolog:\=(lists, problog_lfi )
7701d 205 0 CALL:  prolog:$meta_expansion(lists:member(_130928,[]), problog_lfi, [], _1048349 )
7702d 237 0 CALL:  prolog:$yap_strip_module(lists:member(_130928,[]), _135188, _1048328 )
7703d 237 0 CALL:  prolog:functor(member(_130928,[]), _135191, _135192 )
7704d 237 0 CALL:  prolog:$meta_predicate(member, lists, 2, _1048329 )
7705d 237 0 FAIL RETRY:  prolog:$meta_expansion(lists:member(_130928,[]), problog_lfi, [], _1048349 )
7706d 205 0 CALL:  prolog:$yap_strip_module(lists:member(_130928,[]), _135188, _135189 )
7707d 205 0 CALL:  prolog:$yap_strip_module(lists:member(_130928,[]), _135190, _135191 )
7708d 205 0 CALL:  prolog:$end_goal_expansion(member(_130928,[]), _1048360, _1048362, problog_lfi, user, lists, problog_lfi:member(_130928,[]) )
7709d 205 0 CALL:  prolog:$match_mod(member(_130928,[]), problog_lfi, user, lists, _1048360 )
7710d 205 0 CALL:  prolog:$is_system_predicate(member(_130928,[]), lists )
7711d 205 0 TRY_OR 
7712d 243 0 CALL:  prolog:==(lists, problog_lfi )
7714d 205 0 CALL:  prolog:$c_built_in(lists:member(_130928,[]), lists, problog_lfi:member(_130928,[]), _1048351 )
7715d 236 0 CALL:  prolog:get_value('$c_arith', true )
7716d 205 0 CALL:  prolog:do_c_built_in(lists:member(_130928,[]), lists, problog_lfi:member(_130928,[]), _1048351 )
7717d 247 0 CALL:  prolog:$yap_strip_module(lists:member(_130928,[]), _135195, _135196 )
7718d 247 0 FAIL RETRY:  prolog:do_c_built_in(lists:member(_130928,[]), lists, problog_lfi:member(_130928,[]), _1048351 )
7719d 247 0 CALL:  prolog:$compop(lists:member(_130928,[]), _1048313, _1048314, _1048316 )
7720d 247 0 FAIL RETRY:  prolog:do_c_built_in(lists:member(_130928,[]), lists, problog_lfi:member(_130928,[]), _1048351 )
7721d 247 0 CALL:  prolog:$yap_strip_module(lists:lists:member(_130928,[]), _135198, _135199 )
7722d 247 0 CALL:  prolog:$match_mod(member(_130928,[]), problog_lfi, user, lists, _1048362 )
7723d 247 0 CALL:  prolog:$is_system_predicate(member(_130928,[]), lists )
7724d 247 0 TRY_OR 
7725d 263 0 CALL:  prolog:==(lists, problog_lfi )
7727d 247 0 CALL:  prolog:$yap_strip_module(problog_lfi:lists:member(_130928,[]), _135138, _135139 )
7728d 247 0 TRY_OR 
7729d 255 0 CALL:  prolog:\==(problog_lfi, lists )
7730d 247 0 CALL:  prolog:\=(member(_130928,[]), fail )
7731d 181 0 CALL:  prolog:yap_flag(unknown, _1048380, error )
7732d 181 0 TRY_OR 
7733d 202 0 CALL:  prolog:==(false, true )
7735d 181 0 CALL:  prolog:$execute0(member(_130928,[]), lists )
7736d 181 0 CALL:  lists:member(_130928, [] )
7738d 140 0 CALL:  nb:nb_queue_close(queue(0,[a(1,1) |_130960],_130960,1), _130950, [] )
7739d 140 0 CALL:  problog_lfi:calc_all_md5([a(1,1)], _1048415 )
+s 0x5602af2c5ef0
 @0x7efdd88a3198 0
+s 0x5602af2c7830
 @0x7efdd88a3198 0
- 0x5602af2c7830
 @0x7efdd88a3198 140
+s 0x5602af2b3ee0
 @0x7efdd88a3198 0
+s 0x5602af2c0280
 @0x7efdd88a3198 0
- 0x5602af2b3ee0
 @0x7efdd88a3198 140
- 0x5602af2c5ef0
 @0x7efdd88a3198 140
7740d 140 0 CALL:  utils_learning:create_bdd_file_name(1, 1, _1048403 )
7741d 140 0 CALL:  flags:problog_flag(output_directory, _1048395 )
7742d 140 0 CALL:  gflags:flag_get(output_directory, _1048395 )
7743d 140 0 CALL:  prolog:recorded(flag_values, flag(output_directory,_130969), _130970 )
7744d 140 0 CALL:  prolog:atomic_concat([',_query_',1,'_cluster_',1], _1048396 )
7745d 140 0 CALL:  os:concat_path_with_filename('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output', ',_query_1_cluster_1', _1048403 )
7746d 140 0 CALL:  os:path_separator(_1048395 )
7747d 189 0 CALL:  prolog:current_prolog_flag(windows, true )
7748d 189 0 FAIL RETRY:  os:path_separator(_1048395 )
7749d 140 0 CALL:  prolog:atomic_list_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,',_query_1_cluster_1'], _1048403 )
7750d 140 0 CALL:  prolog:atomic_concat(['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output',/,',_query_1_cluster_1'], _1048403 )
7751d 140 0 CALL:  os:calc_md5('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', _130966 )
+s 0x5602af2c7a80
 @0x7efdd88a31a8 0
+s 0x5602af2b9280
 @0x7efdd88a31a8 0
- 0x5602af2c7a80
 @0x7efdd88a31a8 140
7752d 179 0 CALL:  prolog:catch(os:calc_md5_intern('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',_130966), _1048390, os:fail )
7753d 179 0 CALL:  prolog:$catch(os:calc_md5_intern('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',_130966), _1048390, os:fail )
7754d 195 0 CALL:  prolog:$execute(os:calc_md5_intern('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',_130966) )
7755d 195 0 CALL:  os:calc_md5_intern('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', _130966 )
7756d 195 0 TRY_OR 
7757d 218 0 CALL:  prolog:file_exists('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1' )
7758d 218 0 CALL:  prolog:absolute_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', _130994, [expand(true),solutions(first),access(exist)] )
7759d 218 0 CALL:  prolog:absolute_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', [expand(true),solutions(first),access(exist)], _130994 )
7760d 238 0 FAIL RETRY:  prolog:absolute_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', [expand(true),solutions(first),access(exist)], _130994 )
7761d 218 0 CALL:  prolog:$absolute_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', [expand(true),solutions(first),access(exist)], _130994 )
7762d 218 0 CALL:  prolog:gated_call('$enter_absf'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',[expand(true),solutions(first),access(exist)],_131010,_131011,_131012,_131013,_131014,_131015,_131016,_131017,_131018), '$find_in_path'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',_131010,_130994,_131011,_131017), _131025, '$absf_port'(_131025,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',_130994,_131011,_131012,_131013,_131014,_131015,_131016,_131017,_131018) )
7763d 218 0 CALL:  prolog:$setup_call_catcher_cleanup('$enter_absf'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',[expand(true),solutions(first),access(exist)],_131010,_131011,_131012,_131013,_131014,_131015,_131016,_131017,_131018) )
7764d 248 0 CALL:  prolog:abs_file_parameters([expand(true),solutions(first),access(exist)], _131010 )
7765d 248 0 CALL:  prolog:current_prolog_flag(open_expands_filename, _131012 )
7766d 248 0 CALL:  prolog:current_prolog_flag(fileerrors, _131013 )
7767d 248 0 CALL:  prolog:current_prolog_flag(verbose_file_search, _131014 )
7768d 248 0 CALL:  prolog:get_abs_file_parameter(verbose_file_search, opt(exist,true,[],error,txt,'','',first,false), _131016 )
7769d 248 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), _131015 )
7770d 248 0 CALL:  prolog:set_prolog_flag(verbose_file_search, false )
7771d 248 0 CALL:  prolog:get_abs_file_parameter(file_errors, opt(exist,true,[],error,txt,'','',first,false), _131048 )
7772d 248 0 CALL:  prolog:get_abs_file_parameter(solutions, opt(exist,true,[],error,txt,'','',first,false), _131017 )
7773d 248 0 TRY_OR 
7774d 266 0 CALL:  prolog:==(error, fail )
7776d 248 0 CALL:  prolog:set_prolog_flag(fileerrors, true )
7777d 248 0 CALL:  prolog:set_prolog_flag(file_name_variables, true )
7778d 248 0 CALL:  prolog:$absf_trace('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1' )
7779d 263 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
7780d 263 0 FAIL RETRY:  prolog:$absf_trace('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1' )
7781d 248 0 CALL:  prolog:$absf_trace_options([expand(true),solutions(first),access(exist)] )
7782d 262 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
7783d 262 0 FAIL RETRY:  prolog:$absf_trace_options([expand(true),solutions(first),access(exist)] )
7784d 218 0 CALL:  prolog:$gated_call(true, '$find_in_path'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',opt(exist,true,[],error,txt,'','',first,false),_130994,t(no),first), _131025, '$absf_port'(_131025,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',_130994,t(no),false,true,false,true,false,first,true) )
7785d 218 0 CALL:  prolog:$tag_cleanup(_131057, cleanup(true,_131025,'$absf_port'(_131025,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',_130994,t(no),false,true,false,true,false,first,true),_131055,true,_131057) )
7786d 218 0 CALL:  prolog:$execute('$find_in_path'('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',opt(exist,true,[],error,txt,'','',first,false),_130994,t(no),first) )
7787d 218 0 CALL:  prolog:$find_in_path('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', opt(exist,true,[],error,txt,'','',first,false), _130994, t(no), first )
7788d 237 0 FAIL RETRY:  prolog:$find_in_path('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', opt(exist,true,[],error,txt,'','',first,false), _130994, t(no), first )
7789d 218 0 CALL:  prolog:get_abs_file_parameter(file_type, opt(exist,true,[],error,txt,'','',first,false), _1048342 )
7790d 218 0 CALL:  prolog:get_abs_file_parameter(access, opt(exist,true,[],error,txt,'','',first,false), _1048343 )
7791d 218 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), _1048337 )
7792d 218 0 CALL:  prolog:$absf_trace('start with ~w', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1'] )
7793d 253 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
7794d 253 0 FAIL RETRY:  prolog:$absf_trace('start with ~w', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1'] )
7795d 218 0 CALL:  prolog:$core_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', opt(exist,true,[],error,txt,'','',first,false), _1048333, [] )
7796d 218 0 CALL:  prolog:$file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', opt(exist,true,[],error,txt,'','',first,false), _1048322, _1048333, _1048323 )
7797d 265 0 CALL:  prolog:=..('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', [_131075,_131077] )
7798d 265 0 FAIL RETRY:  prolog:$file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', opt(exist,true,[],error,txt,'','',first,false), _1048322, _1048333, _1048323 )
7799d 218 0 CALL:  prolog:$cat_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', _1048322, _1048333, _1048323 )
7800d 264 0 FAIL RETRY:  prolog:$cat_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', _1048322, _1048333, _1048323 )
7801d 264 0 CALL:  prolog:atom_codes('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', _1048322 )
7802d 218 0 CALL:  prolog:phrase([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _1048333, _1048323 )
7803d 218 0 CALL:  prolog:$phrase_list([104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131246, _1048323 )
7804d 218 0 CALL:  prolog:$phrase_list([111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131248, _1048323 )
7805d 218 0 CALL:  prolog:$phrase_list([109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131250, _1048323 )
7806d 218 0 CALL:  prolog:$phrase_list([101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131252, _1048323 )
7807d 218 0 CALL:  prolog:$phrase_list([47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131254, _1048323 )
7808d 218 0 CALL:  prolog:$phrase_list([118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131256, _1048323 )
7809d 218 0 CALL:  prolog:$phrase_list([115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131258, _1048323 )
7810d 218 0 CALL:  prolog:$phrase_list([99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131260, _1048323 )
7811d 218 0 CALL:  prolog:$phrase_list([47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131262, _1048323 )
7812d 218 0 CALL:  prolog:$phrase_list([103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131264, _1048323 )
7813d 218 0 CALL:  prolog:$phrase_list([105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131266, _1048323 )
7814d 218 0 CALL:  prolog:$phrase_list([116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131268, _1048323 )
7815d 218 0 CALL:  prolog:$phrase_list([104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131270, _1048323 )
7816d 218 0 CALL:  prolog:$phrase_list([117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131272, _1048323 )
7817d 218 0 CALL:  prolog:$phrase_list([98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131274, _1048323 )
7818d 218 0 CALL:  prolog:$phrase_list([47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131276, _1048323 )
7819d 218 0 CALL:  prolog:$phrase_list([121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131278, _1048323 )
7820d 218 0 CALL:  prolog:$phrase_list([97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131280, _1048323 )
7821d 218 0 CALL:  prolog:$phrase_list([112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131282, _1048323 )
7822d 218 0 CALL:  prolog:$phrase_list([45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131284, _1048323 )
7823d 218 0 CALL:  prolog:$phrase_list([54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131286, _1048323 )
7824d 218 0 CALL:  prolog:$phrase_list([46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131288, _1048323 )
7825d 218 0 CALL:  prolog:$phrase_list([51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131290, _1048323 )
7826d 218 0 CALL:  prolog:$phrase_list([47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131292, _1048323 )
7827d 218 0 CALL:  prolog:$phrase_list([112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131294, _1048323 )
7828d 218 0 CALL:  prolog:$phrase_list([97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131296, _1048323 )
7829d 218 0 CALL:  prolog:$phrase_list([99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131298, _1048323 )
7830d 218 0 CALL:  prolog:$phrase_list([107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131300, _1048323 )
7831d 218 0 CALL:  prolog:$phrase_list([97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131302, _1048323 )
7832d 218 0 CALL:  prolog:$phrase_list([103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131304, _1048323 )
7833d 218 0 CALL:  prolog:$phrase_list([101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131306, _1048323 )
7834d 218 0 CALL:  prolog:$phrase_list([115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131308, _1048323 )
7835d 218 0 CALL:  prolog:$phrase_list([47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131310, _1048323 )
7836d 218 0 CALL:  prolog:$phrase_list([80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131312, _1048323 )
7837d 218 0 CALL:  prolog:$phrase_list([114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131314, _1048323 )
7838d 218 0 CALL:  prolog:$phrase_list([111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131316, _1048323 )
7839d 218 0 CALL:  prolog:$phrase_list([98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131318, _1048323 )
7840d 218 0 CALL:  prolog:$phrase_list([76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131320, _1048323 )
7841d 218 0 CALL:  prolog:$phrase_list([111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131322, _1048323 )
7842d 218 0 CALL:  prolog:$phrase_list([103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131324, _1048323 )
7843d 218 0 CALL:  prolog:$phrase_list([47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131326, _1048323 )
7844d 218 0 CALL:  prolog:$phrase_list([112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131328, _1048323 )
7845d 218 0 CALL:  prolog:$phrase_list([114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131330, _1048323 )
7846d 218 0 CALL:  prolog:$phrase_list([111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131332, _1048323 )
7847d 218 0 CALL:  prolog:$phrase_list([98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131334, _1048323 )
7848d 218 0 CALL:  prolog:$phrase_list([108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131336, _1048323 )
7849d 218 0 CALL:  prolog:$phrase_list([111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131338, _1048323 )
7850d 218 0 CALL:  prolog:$phrase_list([103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131340, _1048323 )
7851d 218 0 CALL:  prolog:$phrase_list([95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131342, _1048323 )
7852d 218 0 CALL:  prolog:$phrase_list([101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131344, _1048323 )
7853d 218 0 CALL:  prolog:$phrase_list([120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131346, _1048323 )
7854d 218 0 CALL:  prolog:$phrase_list([97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131348, _1048323 )
7855d 218 0 CALL:  prolog:$phrase_list([109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131350, _1048323 )
7856d 218 0 CALL:  prolog:$phrase_list([112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131352, _1048323 )
7857d 218 0 CALL:  prolog:$phrase_list([108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131354, _1048323 )
7858d 218 0 CALL:  prolog:$phrase_list([101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131356, _1048323 )
7859d 218 0 CALL:  prolog:$phrase_list([115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131358, _1048323 )
7860d 218 0 CALL:  prolog:$phrase_list([47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131360, _1048323 )
7861d 218 0 CALL:  prolog:$phrase_list([111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131362, _1048323 )
7862d 218 0 CALL:  prolog:$phrase_list([117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131364, _1048323 )
7863d 218 0 CALL:  prolog:$phrase_list([116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131366, _1048323 )
7864d 218 0 CALL:  prolog:$phrase_list([112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131368, _1048323 )
7865d 218 0 CALL:  prolog:$phrase_list([117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131370, _1048323 )
7866d 218 0 CALL:  prolog:$phrase_list([116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131372, _1048323 )
7867d 218 0 CALL:  prolog:$phrase_list([47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131374, _1048323 )
7868d 218 0 CALL:  prolog:$phrase_list([44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131376, _1048323 )
7869d 218 0 CALL:  prolog:$phrase_list([95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131378, _1048323 )
7870d 218 0 CALL:  prolog:$phrase_list([113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131380, _1048323 )
7871d 218 0 CALL:  prolog:$phrase_list([117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131382, _1048323 )
7872d 218 0 CALL:  prolog:$phrase_list([101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131384, _1048323 )
7873d 218 0 CALL:  prolog:$phrase_list([114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131386, _1048323 )
7874d 218 0 CALL:  prolog:$phrase_list([121,95,49,95,99,108,117,115,116,101,114,95,49], _131388, _1048323 )
7875d 218 0 CALL:  prolog:$phrase_list([95,49,95,99,108,117,115,116,101,114,95,49], _131390, _1048323 )
7876d 218 0 CALL:  prolog:$phrase_list([49,95,99,108,117,115,116,101,114,95,49], _131392, _1048323 )
7877d 218 0 CALL:  prolog:$phrase_list([95,99,108,117,115,116,101,114,95,49], _131394, _1048323 )
7878d 218 0 CALL:  prolog:$phrase_list([99,108,117,115,116,101,114,95,49], _131396, _1048323 )
7879d 218 0 CALL:  prolog:$phrase_list([108,117,115,116,101,114,95,49], _131398, _1048323 )
7880d 218 0 CALL:  prolog:$phrase_list([117,115,116,101,114,95,49], _131400, _1048323 )
7881d 218 0 CALL:  prolog:$phrase_list([115,116,101,114,95,49], _131402, _1048323 )
7882d 218 0 CALL:  prolog:$phrase_list([116,101,114,95,49], _131404, _1048323 )
7883d 218 0 CALL:  prolog:$phrase_list([101,114,95,49], _131406, _1048323 )
7884d 218 0 CALL:  prolog:$phrase_list([114,95,49], _131408, _1048323 )
7885d 218 0 CALL:  prolog:$phrase_list([95,49], _131410, _1048323 )
7886d 218 0 CALL:  prolog:$phrase_list([49], _131412, _1048323 )
7887d 218 0 CALL:  prolog:$phrase_list([], _131414, _1048323 )
7888d 218 0 CALL:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], opt(exist,true,[],error,txt,'','',first,false), _131414, _1048325 )
7889d 262 0 CALL:  lists:append(_1048303, [46|_131416], [47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7890d 282 0 FAIL RETRY:  lists:append(_1048303, [46|_131416], [47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7891d 262 0 CALL:  lists:append(_131418, [46|_131416], [104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7892d 282 0 FAIL RETRY:  lists:append(_131418, [46|_131416], [104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7893d 262 0 CALL:  lists:append(_131420, [46|_131416], [111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7894d 282 0 FAIL RETRY:  lists:append(_131420, [46|_131416], [111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7895d 262 0 CALL:  lists:append(_131422, [46|_131416], [109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7896d 282 0 FAIL RETRY:  lists:append(_131422, [46|_131416], [109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7897d 262 0 CALL:  lists:append(_131424, [46|_131416], [101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7898d 282 0 FAIL RETRY:  lists:append(_131424, [46|_131416], [101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7899d 262 0 CALL:  lists:append(_131426, [46|_131416], [47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7900d 282 0 FAIL RETRY:  lists:append(_131426, [46|_131416], [47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7901d 262 0 CALL:  lists:append(_131428, [46|_131416], [118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7902d 282 0 FAIL RETRY:  lists:append(_131428, [46|_131416], [118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7903d 262 0 CALL:  lists:append(_131430, [46|_131416], [115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7904d 282 0 FAIL RETRY:  lists:append(_131430, [46|_131416], [115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7905d 262 0 CALL:  lists:append(_131432, [46|_131416], [99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7906d 282 0 FAIL RETRY:  lists:append(_131432, [46|_131416], [99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7907d 262 0 CALL:  lists:append(_131434, [46|_131416], [47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7908d 282 0 FAIL RETRY:  lists:append(_131434, [46|_131416], [47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7909d 262 0 CALL:  lists:append(_131436, [46|_131416], [103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7910d 282 0 FAIL RETRY:  lists:append(_131436, [46|_131416], [103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7911d 262 0 CALL:  lists:append(_131438, [46|_131416], [105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7912d 282 0 FAIL RETRY:  lists:append(_131438, [46|_131416], [105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7913d 262 0 CALL:  lists:append(_131440, [46|_131416], [116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7914d 282 0 FAIL RETRY:  lists:append(_131440, [46|_131416], [116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7915d 262 0 CALL:  lists:append(_131442, [46|_131416], [104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7916d 282 0 FAIL RETRY:  lists:append(_131442, [46|_131416], [104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7917d 262 0 CALL:  lists:append(_131444, [46|_131416], [117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7918d 282 0 FAIL RETRY:  lists:append(_131444, [46|_131416], [117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7919d 262 0 CALL:  lists:append(_131446, [46|_131416], [98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7920d 282 0 FAIL RETRY:  lists:append(_131446, [46|_131416], [98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7921d 262 0 CALL:  lists:append(_131448, [46|_131416], [47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7922d 282 0 FAIL RETRY:  lists:append(_131448, [46|_131416], [47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7923d 262 0 CALL:  lists:append(_131450, [46|_131416], [121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7924d 282 0 FAIL RETRY:  lists:append(_131450, [46|_131416], [121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7925d 262 0 CALL:  lists:append(_131452, [46|_131416], [97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7926d 282 0 FAIL RETRY:  lists:append(_131452, [46|_131416], [97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7927d 262 0 CALL:  lists:append(_131454, [46|_131416], [112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7928d 282 0 FAIL RETRY:  lists:append(_131454, [46|_131416], [112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7929d 262 0 CALL:  lists:append(_131456, [46|_131416], [45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7930d 282 0 FAIL RETRY:  lists:append(_131456, [46|_131416], [45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7931d 262 0 CALL:  lists:append(_131458, [46|_131416], [54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7932d 282 0 FAIL RETRY:  lists:append(_131458, [46|_131416], [54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7933d 262 0 CALL:  lists:append(_131460, [46|_131416], [46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7934d 282 0 CALL:  prolog:$id([51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _1048304, [] )
7935d 282 0 CALL:  prolog:C(_1048304, 51, _1048286 )
7936d 282 0 TRY_OR 
7937d 299 0 CALL:  prolog:>=(51, 97 )
7939d 299 0 CALL:  prolog:>=(51, 65 )
7941d 299 0 CALL:  prolog:>=(51, 48 )
7942d 299 0 CALL:  prolog:=<(51, 57 )
7943d 282 0 CALL:  prolog:$id([47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131462, [] )
7944d 282 0 CALL:  prolog:C(_131462, 47, _1048286 )
7945d 282 0 TRY_OR 
7946d 299 0 CALL:  prolog:>=(47, 97 )
7948d 299 0 CALL:  prolog:>=(47, 65 )
7950d 299 0 CALL:  prolog:>=(47, 48 )
7952d 282 0 CALL:  prolog:=:=(47, 95 )
7953d 282 0 FAIL RETRY:  lists:append(_131460, [46|_131416], [46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7954d 262 0 CALL:  lists:append(_131462, [46|_131416], [51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7955d 282 0 FAIL RETRY:  lists:append(_131462, [46|_131416], [51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7956d 262 0 CALL:  lists:append(_131464, [46|_131416], [47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7957d 282 0 FAIL RETRY:  lists:append(_131464, [46|_131416], [47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7958d 262 0 CALL:  lists:append(_131466, [46|_131416], [112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7959d 282 0 FAIL RETRY:  lists:append(_131466, [46|_131416], [112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7960d 262 0 CALL:  lists:append(_131468, [46|_131416], [97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7961d 282 0 FAIL RETRY:  lists:append(_131468, [46|_131416], [97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7962d 262 0 CALL:  lists:append(_131470, [46|_131416], [99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7963d 282 0 FAIL RETRY:  lists:append(_131470, [46|_131416], [99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7964d 262 0 CALL:  lists:append(_131472, [46|_131416], [107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7965d 282 0 FAIL RETRY:  lists:append(_131472, [46|_131416], [107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7966d 262 0 CALL:  lists:append(_131474, [46|_131416], [97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7967d 282 0 FAIL RETRY:  lists:append(_131474, [46|_131416], [97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7968d 262 0 CALL:  lists:append(_131476, [46|_131416], [103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7969d 282 0 FAIL RETRY:  lists:append(_131476, [46|_131416], [103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7970d 262 0 CALL:  lists:append(_131478, [46|_131416], [101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7971d 282 0 FAIL RETRY:  lists:append(_131478, [46|_131416], [101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7972d 262 0 CALL:  lists:append(_131480, [46|_131416], [115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7973d 282 0 FAIL RETRY:  lists:append(_131480, [46|_131416], [115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7974d 262 0 CALL:  lists:append(_131482, [46|_131416], [47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7975d 282 0 FAIL RETRY:  lists:append(_131482, [46|_131416], [47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7976d 262 0 CALL:  lists:append(_131484, [46|_131416], [80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7977d 282 0 FAIL RETRY:  lists:append(_131484, [46|_131416], [80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7978d 262 0 CALL:  lists:append(_131486, [46|_131416], [114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7979d 282 0 FAIL RETRY:  lists:append(_131486, [46|_131416], [114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7980d 262 0 CALL:  lists:append(_131488, [46|_131416], [111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7981d 282 0 FAIL RETRY:  lists:append(_131488, [46|_131416], [111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7982d 262 0 CALL:  lists:append(_131490, [46|_131416], [98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7983d 282 0 FAIL RETRY:  lists:append(_131490, [46|_131416], [98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7984d 262 0 CALL:  lists:append(_131492, [46|_131416], [76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7985d 282 0 FAIL RETRY:  lists:append(_131492, [46|_131416], [76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7986d 262 0 CALL:  lists:append(_131494, [46|_131416], [111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7987d 282 0 FAIL RETRY:  lists:append(_131494, [46|_131416], [111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7988d 262 0 CALL:  lists:append(_131496, [46|_131416], [103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7989d 282 0 FAIL RETRY:  lists:append(_131496, [46|_131416], [103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7990d 262 0 CALL:  lists:append(_131498, [46|_131416], [47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7991d 282 0 FAIL RETRY:  lists:append(_131498, [46|_131416], [47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7992d 262 0 CALL:  lists:append(_131500, [46|_131416], [112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7993d 282 0 FAIL RETRY:  lists:append(_131500, [46|_131416], [112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7994d 262 0 CALL:  lists:append(_131502, [46|_131416], [114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7995d 282 0 FAIL RETRY:  lists:append(_131502, [46|_131416], [114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7996d 262 0 CALL:  lists:append(_131504, [46|_131416], [111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7997d 282 0 FAIL RETRY:  lists:append(_131504, [46|_131416], [111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7998d 262 0 CALL:  lists:append(_131506, [46|_131416], [98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
7999d 282 0 FAIL RETRY:  lists:append(_131506, [46|_131416], [98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8000d 262 0 CALL:  lists:append(_131508, [46|_131416], [108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8001d 282 0 FAIL RETRY:  lists:append(_131508, [46|_131416], [108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8002d 262 0 CALL:  lists:append(_131510, [46|_131416], [111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8003d 282 0 FAIL RETRY:  lists:append(_131510, [46|_131416], [111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8004d 262 0 CALL:  lists:append(_131512, [46|_131416], [103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8005d 282 0 FAIL RETRY:  lists:append(_131512, [46|_131416], [103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8006d 262 0 CALL:  lists:append(_131514, [46|_131416], [95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8007d 282 0 FAIL RETRY:  lists:append(_131514, [46|_131416], [95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8008d 262 0 CALL:  lists:append(_131516, [46|_131416], [101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8009d 282 0 FAIL RETRY:  lists:append(_131516, [46|_131416], [101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8010d 262 0 CALL:  lists:append(_131518, [46|_131416], [120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8011d 282 0 FAIL RETRY:  lists:append(_131518, [46|_131416], [120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8012d 262 0 CALL:  lists:append(_131520, [46|_131416], [97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8013d 282 0 FAIL RETRY:  lists:append(_131520, [46|_131416], [97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8014d 262 0 CALL:  lists:append(_131522, [46|_131416], [109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8015d 282 0 FAIL RETRY:  lists:append(_131522, [46|_131416], [109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8016d 262 0 CALL:  lists:append(_131524, [46|_131416], [112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8017d 282 0 FAIL RETRY:  lists:append(_131524, [46|_131416], [112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8018d 262 0 CALL:  lists:append(_131526, [46|_131416], [108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8019d 282 0 FAIL RETRY:  lists:append(_131526, [46|_131416], [108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8020d 262 0 CALL:  lists:append(_131528, [46|_131416], [101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8021d 282 0 FAIL RETRY:  lists:append(_131528, [46|_131416], [101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8022d 262 0 CALL:  lists:append(_131530, [46|_131416], [115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8023d 282 0 FAIL RETRY:  lists:append(_131530, [46|_131416], [115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8024d 262 0 CALL:  lists:append(_131532, [46|_131416], [47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8025d 282 0 FAIL RETRY:  lists:append(_131532, [46|_131416], [47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8026d 262 0 CALL:  lists:append(_131534, [46|_131416], [111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8027d 282 0 FAIL RETRY:  lists:append(_131534, [46|_131416], [111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8028d 262 0 CALL:  lists:append(_131536, [46|_131416], [117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8029d 282 0 FAIL RETRY:  lists:append(_131536, [46|_131416], [117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8030d 262 0 CALL:  lists:append(_131538, [46|_131416], [116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8031d 282 0 FAIL RETRY:  lists:append(_131538, [46|_131416], [116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8032d 262 0 CALL:  lists:append(_131540, [46|_131416], [112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8033d 282 0 FAIL RETRY:  lists:append(_131540, [46|_131416], [112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8034d 262 0 CALL:  lists:append(_131542, [46|_131416], [117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8035d 282 0 FAIL RETRY:  lists:append(_131542, [46|_131416], [117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8036d 262 0 CALL:  lists:append(_131544, [46|_131416], [116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8037d 282 0 FAIL RETRY:  lists:append(_131544, [46|_131416], [116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8038d 262 0 CALL:  lists:append(_131546, [46|_131416], [47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8039d 282 0 FAIL RETRY:  lists:append(_131546, [46|_131416], [47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8040d 262 0 CALL:  lists:append(_131548, [46|_131416], [44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8041d 282 0 FAIL RETRY:  lists:append(_131548, [46|_131416], [44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8042d 262 0 CALL:  lists:append(_131550, [46|_131416], [95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8043d 282 0 FAIL RETRY:  lists:append(_131550, [46|_131416], [95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8044d 262 0 CALL:  lists:append(_131552, [46|_131416], [113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8045d 282 0 FAIL RETRY:  lists:append(_131552, [46|_131416], [113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8046d 262 0 CALL:  lists:append(_131554, [46|_131416], [117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8047d 282 0 FAIL RETRY:  lists:append(_131554, [46|_131416], [117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8048d 262 0 CALL:  lists:append(_131556, [46|_131416], [101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8049d 282 0 FAIL RETRY:  lists:append(_131556, [46|_131416], [101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8050d 262 0 CALL:  lists:append(_131558, [46|_131416], [114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8051d 282 0 FAIL RETRY:  lists:append(_131558, [46|_131416], [114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8052d 262 0 CALL:  lists:append(_131560, [46|_131416], [121,95,49,95,99,108,117,115,116,101,114,95,49] )
8053d 282 0 FAIL RETRY:  lists:append(_131560, [46|_131416], [121,95,49,95,99,108,117,115,116,101,114,95,49] )
8054d 262 0 CALL:  lists:append(_131562, [46|_131416], [95,49,95,99,108,117,115,116,101,114,95,49] )
8055d 282 0 FAIL RETRY:  lists:append(_131562, [46|_131416], [95,49,95,99,108,117,115,116,101,114,95,49] )
8056d 262 0 CALL:  lists:append(_131564, [46|_131416], [49,95,99,108,117,115,116,101,114,95,49] )
8057d 282 0 FAIL RETRY:  lists:append(_131564, [46|_131416], [49,95,99,108,117,115,116,101,114,95,49] )
8058d 262 0 CALL:  lists:append(_131566, [46|_131416], [95,99,108,117,115,116,101,114,95,49] )
8059d 282 0 FAIL RETRY:  lists:append(_131566, [46|_131416], [95,99,108,117,115,116,101,114,95,49] )
8060d 262 0 CALL:  lists:append(_131568, [46|_131416], [99,108,117,115,116,101,114,95,49] )
8061d 282 0 FAIL RETRY:  lists:append(_131568, [46|_131416], [99,108,117,115,116,101,114,95,49] )
8062d 262 0 CALL:  lists:append(_131570, [46|_131416], [108,117,115,116,101,114,95,49] )
8063d 282 0 FAIL RETRY:  lists:append(_131570, [46|_131416], [108,117,115,116,101,114,95,49] )
8064d 262 0 CALL:  lists:append(_131572, [46|_131416], [117,115,116,101,114,95,49] )
8065d 282 0 FAIL RETRY:  lists:append(_131572, [46|_131416], [117,115,116,101,114,95,49] )
8066d 262 0 CALL:  lists:append(_131574, [46|_131416], [115,116,101,114,95,49] )
8067d 282 0 FAIL RETRY:  lists:append(_131574, [46|_131416], [115,116,101,114,95,49] )
8068d 262 0 CALL:  lists:append(_131576, [46|_131416], [116,101,114,95,49] )
8069d 282 0 FAIL RETRY:  lists:append(_131576, [46|_131416], [116,101,114,95,49] )
8070d 262 0 CALL:  lists:append(_131578, [46|_131416], [101,114,95,49] )
8071d 282 0 FAIL RETRY:  lists:append(_131578, [46|_131416], [101,114,95,49] )
8072d 262 0 CALL:  lists:append(_131580, [46|_131416], [114,95,49] )
8073d 282 0 FAIL RETRY:  lists:append(_131580, [46|_131416], [114,95,49] )
8074d 262 0 CALL:  lists:append(_131582, [46|_131416], [95,49] )
8075d 282 0 FAIL RETRY:  lists:append(_131582, [46|_131416], [95,49] )
8076d 262 0 CALL:  lists:append(_131584, [46|_131416], [49] )
8077d 282 0 FAIL RETRY:  lists:append(_131584, [46|_131416], [49] )
8078d 262 0 CALL:  lists:append(_131586, [46|_131416], [] )
8079d 282 0 FAIL RETRY:  lists:append(_131586, [46|_131416], [] )
8080d 262 0 FAIL RETRY:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], opt(exist,true,[],error,txt,'','',first,false), _131414, _1048325 )
8081d 262 0 TRY_OR 
8082d 284 0 CALL:  prolog:get_abs_file_parameter(extensions, opt(exist,true,[],error,txt,'','',first,false), _1048299 )
8083d 284 0 CALL:  prolog:\=([], [] )
8085d 262 0 CALL:  prolog:get_abs_file_parameter(file_type, opt(exist,true,[],error,txt,'','',first,false), _131415 )
8086d 262 0 TRY_OR 
8087d 282 0 CALL:  prolog:==(txt, source )
8089d 262 0 CALL:  user:prolog_file_type(_1048304, txt )
8090d 262 0 FAIL RETRY:  prolog:$suffix([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], opt(exist,true,[],error,txt,'','',first,false), _131414, _1048325 )
8091d 218 0 CALL:  prolog:$absf_trace(' try no suffix', [], _131414, _1048325 )
8092d 262 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
8093d 262 0 FAIL RETRY:  prolog:$absf_trace(' try no suffix', [], _131414, _1048325 )
8094d 218 0 CALL:  prolog:$glob(opt(exist,true,[],error,txt,'','',first,false), _131414, [] )
8095d 253 0 CALL:  prolog:get_abs_file_parameter(glob, opt(exist,true,[],error,txt,'','',first,false), _131415 )
8096d 253 0 CALL:  prolog:\=('', '' )
8097d 253 0 FAIL RETRY:  prolog:$glob(opt(exist,true,[],error,txt,'','',first,false), _131414, [] )
8098d 218 0 CALL:  prolog:$absf_trace('  after name/library unfolding: ~w', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1'] )
8099d 251 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
8100d 251 0 FAIL RETRY:  prolog:$absf_trace('  after name/library unfolding: ~w', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1'] )
8101d 218 0 CALL:  prolog:$variable_expansion([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], opt(exist,true,[],error,txt,'','',first,false), _1048334 )
8102d 251 0 CALL:  prolog:get_abs_file_parameter(expand, opt(exist,true,[],error,txt,'','',first,false), true )
8103d 218 0 CALL:  prolog:$expand_file_name([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _1048334 )
8104d 218 0 CALL:  prolog:$absf_trace('   after environment variable expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49]] )
8105d 250 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
8106d 250 0 FAIL RETRY:  prolog:$absf_trace('   after environment variable expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49]] )
8107d 218 0 CALL:  prolog:$prefix([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], opt(exist,true,[],error,txt,'','',first,false), _1048336, [] )
8108d 250 0 CALL:  prolog:is_absolute_file_name([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8109d 218 0 CALL:  prolog:phrase([47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _1048336, [] )
8110d 218 0 CALL:  prolog:$phrase_list([104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131590, [] )
8111d 218 0 CALL:  prolog:$phrase_list([111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131592, [] )
8112d 218 0 CALL:  prolog:$phrase_list([109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131594, [] )
8113d 218 0 CALL:  prolog:$phrase_list([101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131596, [] )
8114d 218 0 CALL:  prolog:$phrase_list([47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131598, [] )
8115d 218 0 CALL:  prolog:$phrase_list([118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131600, [] )
8116d 218 0 CALL:  prolog:$phrase_list([115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131602, [] )
8117d 218 0 CALL:  prolog:$phrase_list([99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131604, [] )
8118d 218 0 CALL:  prolog:$phrase_list([47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131606, [] )
8119d 218 0 CALL:  prolog:$phrase_list([103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131608, [] )
8120d 218 0 CALL:  prolog:$phrase_list([105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131610, [] )
8121d 218 0 CALL:  prolog:$phrase_list([116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131612, [] )
8122d 218 0 CALL:  prolog:$phrase_list([104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131614, [] )
8123d 218 0 CALL:  prolog:$phrase_list([117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131616, [] )
8124d 218 0 CALL:  prolog:$phrase_list([98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131618, [] )
8125d 218 0 CALL:  prolog:$phrase_list([47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131620, [] )
8126d 218 0 CALL:  prolog:$phrase_list([121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131622, [] )
8127d 218 0 CALL:  prolog:$phrase_list([97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131624, [] )
8128d 218 0 CALL:  prolog:$phrase_list([112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131626, [] )
8129d 218 0 CALL:  prolog:$phrase_list([45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131628, [] )
8130d 218 0 CALL:  prolog:$phrase_list([54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131630, [] )
8131d 218 0 CALL:  prolog:$phrase_list([46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131632, [] )
8132d 218 0 CALL:  prolog:$phrase_list([51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131634, [] )
8133d 218 0 CALL:  prolog:$phrase_list([47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131636, [] )
8134d 218 0 CALL:  prolog:$phrase_list([112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131638, [] )
8135d 218 0 CALL:  prolog:$phrase_list([97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131640, [] )
8136d 218 0 CALL:  prolog:$phrase_list([99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131642, [] )
8137d 218 0 CALL:  prolog:$phrase_list([107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131644, [] )
8138d 218 0 CALL:  prolog:$phrase_list([97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131646, [] )
8139d 218 0 CALL:  prolog:$phrase_list([103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131648, [] )
8140d 218 0 CALL:  prolog:$phrase_list([101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131650, [] )
8141d 218 0 CALL:  prolog:$phrase_list([115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131652, [] )
8142d 218 0 CALL:  prolog:$phrase_list([47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131654, [] )
8143d 218 0 CALL:  prolog:$phrase_list([80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131656, [] )
8144d 218 0 CALL:  prolog:$phrase_list([114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131658, [] )
8145d 218 0 CALL:  prolog:$phrase_list([111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131660, [] )
8146d 218 0 CALL:  prolog:$phrase_list([98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131662, [] )
8147d 218 0 CALL:  prolog:$phrase_list([76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131664, [] )
8148d 218 0 CALL:  prolog:$phrase_list([111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131666, [] )
8149d 218 0 CALL:  prolog:$phrase_list([103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131668, [] )
8150d 218 0 CALL:  prolog:$phrase_list([47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131670, [] )
8151d 218 0 CALL:  prolog:$phrase_list([112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131672, [] )
8152d 218 0 CALL:  prolog:$phrase_list([114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131674, [] )
8153d 218 0 CALL:  prolog:$phrase_list([111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131676, [] )
8154d 218 0 CALL:  prolog:$phrase_list([98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131678, [] )
8155d 218 0 CALL:  prolog:$phrase_list([108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131680, [] )
8156d 218 0 CALL:  prolog:$phrase_list([111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131682, [] )
8157d 218 0 CALL:  prolog:$phrase_list([103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131684, [] )
8158d 218 0 CALL:  prolog:$phrase_list([95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131686, [] )
8159d 218 0 CALL:  prolog:$phrase_list([101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131688, [] )
8160d 218 0 CALL:  prolog:$phrase_list([120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131690, [] )
8161d 218 0 CALL:  prolog:$phrase_list([97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131692, [] )
8162d 218 0 CALL:  prolog:$phrase_list([109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131694, [] )
8163d 218 0 CALL:  prolog:$phrase_list([112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131696, [] )
8164d 218 0 CALL:  prolog:$phrase_list([108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131698, [] )
8165d 218 0 CALL:  prolog:$phrase_list([101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131700, [] )
8166d 218 0 CALL:  prolog:$phrase_list([115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131702, [] )
8167d 218 0 CALL:  prolog:$phrase_list([47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131704, [] )
8168d 218 0 CALL:  prolog:$phrase_list([111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131706, [] )
8169d 218 0 CALL:  prolog:$phrase_list([117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131708, [] )
8170d 218 0 CALL:  prolog:$phrase_list([116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131710, [] )
8171d 218 0 CALL:  prolog:$phrase_list([112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131712, [] )
8172d 218 0 CALL:  prolog:$phrase_list([117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131714, [] )
8173d 218 0 CALL:  prolog:$phrase_list([116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131716, [] )
8174d 218 0 CALL:  prolog:$phrase_list([47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131718, [] )
8175d 218 0 CALL:  prolog:$phrase_list([44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131720, [] )
8176d 218 0 CALL:  prolog:$phrase_list([95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131722, [] )
8177d 218 0 CALL:  prolog:$phrase_list([113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131724, [] )
8178d 218 0 CALL:  prolog:$phrase_list([117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131726, [] )
8179d 218 0 CALL:  prolog:$phrase_list([101,114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131728, [] )
8180d 218 0 CALL:  prolog:$phrase_list([114,121,95,49,95,99,108,117,115,116,101,114,95,49], _131730, [] )
8181d 218 0 CALL:  prolog:$phrase_list([121,95,49,95,99,108,117,115,116,101,114,95,49], _131732, [] )
8182d 218 0 CALL:  prolog:$phrase_list([95,49,95,99,108,117,115,116,101,114,95,49], _131734, [] )
8183d 218 0 CALL:  prolog:$phrase_list([49,95,99,108,117,115,116,101,114,95,49], _131736, [] )
8184d 218 0 CALL:  prolog:$phrase_list([95,99,108,117,115,116,101,114,95,49], _131738, [] )
8185d 218 0 CALL:  prolog:$phrase_list([99,108,117,115,116,101,114,95,49], _131740, [] )
8186d 218 0 CALL:  prolog:$phrase_list([108,117,115,116,101,114,95,49], _131742, [] )
8187d 218 0 CALL:  prolog:$phrase_list([117,115,116,101,114,95,49], _131744, [] )
8188d 218 0 CALL:  prolog:$phrase_list([115,116,101,114,95,49], _131746, [] )
8189d 218 0 CALL:  prolog:$phrase_list([116,101,114,95,49], _131748, [] )
8190d 218 0 CALL:  prolog:$phrase_list([101,114,95,49], _131750, [] )
8191d 218 0 CALL:  prolog:$phrase_list([114,95,49], _131752, [] )
8192d 218 0 CALL:  prolog:$phrase_list([95,49], _131754, [] )
8193d 218 0 CALL:  prolog:$phrase_list([49], _131756, [] )
8194d 218 0 CALL:  prolog:$phrase_list([], _131758, [] )
8195d 218 0 CALL:  prolog:$absf_trace('    after prefix expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49]] )
8196d 248 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
8197d 248 0 FAIL RETRY:  prolog:$absf_trace('    after prefix expansion: ~s', [[47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49]] )
8198d 218 0 CALL:  prolog:atom_codes(_1048339, [47,104,111,109,101,47,118,115,99,47,103,105,116,104,117,98,47,121,97,112,45,54,46,51,47,112,97,99,107,97,103,101,115,47,80,114,111,98,76,111,103,47,112,114,111,98,108,111,103,95,101,120,97,109,112,108,101,115,47,111,117,116,112,117,116,47,44,95,113,117,101,114,121,95,49,95,99,108,117,115,116,101,114,95,49] )
8199d 218 0 TRY_OR 
8200d 218 0 CALL:  prolog:expand_file_name('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', _1048338 )
8201d 218 0 CALL:  prolog:$absf_trace('     after shell globbing: ~w', [['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1']] )
8202d 246 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
8203d 246 0 FAIL RETRY:  prolog:$absf_trace('     after shell globbing: ~w', [['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1']] )
8204d 218 0 CALL:  lists:member(_1048340, ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1'] )
8205d 245 0 CALL:  prolog:real_path('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', _130994 )
8206d 245 0 CALL:  prolog:$absf_trace('      after canonical path name: ~a', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1'] )
8207d 254 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
8208d 254 0 FAIL RETRY:  prolog:$absf_trace('      after canonical path name: ~a', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1'] )
8209d 245 0 CALL:  prolog:$check_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', txt, exist )
8210d 255 0 FAIL RETRY:  prolog:$check_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', txt, exist )
8211d 255 0 FAIL RETRY:  prolog:$check_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', txt, exist )
8212d 255 0 CALL:  prolog:$access_file('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', exist )
8213d 255 0 CALL:  prolog:$absf_trace('       after testing ~a for ~a and ~a', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',txt,exist] )
8214d 264 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
8215d 264 0 FAIL RETRY:  prolog:$absf_trace('       after testing ~a for ~a and ~a', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',txt,exist] )
8216d 255 0 TRY_OR 
8217d 263 0 CALL:  prolog:==(first, first )
8218d 218 0 CALL:  prolog:$cleanup_on_exit(218, cleanup(true,_131025,'$absf_port'(_131025,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1','/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1',t(no),false,true,false,true,false,first,true),_131055,false,218) )
8219d 233 0 TRY_OR 
8220d 251 0 CALL:  prolog:==(first, first )
8221d 233 0 CALL:  prolog:set_prolog_flag(fileerrors, true )
8222d 233 0 CALL:  prolog:set_prolog_flag(open_expands_filename, false )
8223d 233 0 CALL:  prolog:set_prolog_flag(verbose_file_search, false )
8224d 233 0 CALL:  prolog:$absf_trace(' |------- found  ~a', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1'] )
8225d 242 0 CALL:  prolog:current_prolog_flag(verbose_file_search, true )
8226d 242 0 FAIL RETRY:  prolog:$absf_trace(' |------- found  ~a', ['/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1'] )
8227d 195 0 CALL:  os:file_to_codes('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', _1048367, [] )
8228d 195 0 CALL:  prolog:open('/home/vsc/github/yap-6.3/packages/ProbLog/problog_examples/output/,_query_1_cluster_1', read, _1048361 )
8229d 195 0 CALL:  os:get_codes('$stream'(3), _1048367, [] )
+s 0x5602af2dece0
 @0x7efdd88a31a8 0
+s 0x5602af2dde20
 @0x7efdd88a31a8 0
- 0x5602af2dece0
 @0x7efdd88a31a8 195
8230d 224 0 CALL:  prolog:get_code('$stream'(3), _131777 )
8231d 224 0 CALL:  prolog:\=(64, -1 )
8232d 195 0 CALL:  os:get_codes('$stream'(3), _131778, [] )
8233d 234 0 CALL:  prolog:get_code('$stream'(3), _131779 )
8234d 234 0 CALL:  prolog:\=(66, -1 )
8235d 195 0 CALL:  os:get_codes('$stream'(3), _131780, [] )
8236d 244 0 CALL:  prolog:get_code('$stream'(3), _131781 )
8237d 244 0 CALL:  prolog:\=(68, -1 )
8238d 195 0 CALL:  os:get_codes('$stream'(3), _131782, [] )
8239d 254 0 CALL:  prolog:get_code('$stream'(3), _131783 )
8240d 254 0 CALL:  prolog:\=(68, -1 )
8241d 195 0 CALL:  os:get_codes('$stream'(3), _131784, [] )
8242d 264 0 CALL:  prolog:get_code('$stream'(3), _131785 )
8243d 264 0 CALL:  prolog:\=(49, -1 )
8244d 195 0 CALL:  os:get_codes('$stream'(3), _131786, [] )
8245d 274 0 CALL:  prolog:get_code('$stream'(3), _131787 )
8246d 274 0 CALL:  prolog:\=(10, -1 )
8247d 195 0 CALL:  os:get_codes('$stream'(3), _131788, [] )
8248d 284 0 CALL:  prolog:get_code('$stream'(3), _131789 )
8249d 284 0 CALL:  prolog:\=(50, -1 )
8250d 195 0 CALL:  os:get_codes('$stream'(3), _131790, [] )
8251d 294 0 CALL:  prolog:get_code('$stream'(3), _131791 )
8252d 294 0 CALL:  prolog:\=(10, -1 )
8253d 195 0 CALL:  os:get_codes('$stream'(3), _131792, [] )
8254d 304 0 CALL:  prolog:get_code('$stream'(3), _131793 )
8255d 304 0 CALL:  prolog:\=(48, -1 )
8256d 195 0 CALL:  os:get_codes('$stream'(3), _131794, [] )
8257d 314 0 CALL:  prolog:get_code('$stream'(3), _131795 )
8258d 314 0 CALL:  prolog:\=(10, -1 )
8259d 195 0 CALL:  os:get_codes('$stream'(3), _131796, [] )
8260d 324 0 CALL:  prolog:get_code('$stream'(3), _131797 )
8261d 324 0 CALL:  prolog:\=(50, -1 )
8262d 195 0 CALL:  os:get_codes('$stream'(3), _131798, [] )
8263d 334 0 CALL:  prolog:get_code('$stream'(3), _131799 )
8264d 334 0 CALL:  prolog:\=(10, -1 )
8265d 195 0 CALL:  os:get_codes('$stream'(3), _131800, [] )
8266d 344 0 CALL:  prolog:get_code('$stream'(3), _131801 )
8267d 344 0 CALL:  prolog:\=(76, -1 )
8268d 195 0 CALL:  os:get_codes('$stream'(3), _131802, [] )
8269d 354 0 CALL:  prolog:get_code('$stream'(3), _131803 )
8270d 354 0 CALL:  prolog:\=(49, -1 )
8271d 195 0 CALL:  os:get_codes('$stream'(3), _131804, [] )
8272d 364 0 CALL:  prolog:get_code('$stream'(3), _131805 )
8273d 364 0 CALL:  prolog:\=(32, -1 )
8274d 195 0 CALL:  os:get_codes('$stream'(3), _131806, [] )
8275d 374 0 CALL:  prolog:get_code('$stream'(3), _131807 )
8276d 374 0 CALL:  prolog:\=(61, -1 )
8277d 195 0 CALL:  os:get_codes('$stream'(3), _131808, [] )
8278d 384 0 CALL:  prolog:get_code('$stream'(3), _131809 )
8279d 384 0 CALL:  prolog:\=(32, -1 )
8280d 195 0 CALL:  os:get_codes('$stream'(3), _131810, [] )
8281d 394 0 CALL:  prolog:get_code('$stream'(3), _131811 )
8282d 394 0 CALL:  prolog:\=(120, -1 )
8283d 195 0 CALL:  os:get_codes('$stream'(3), _131812, [] )
8284d 404 0 CALL:  prolog:get_code('$stream'(3), _131813 )
8285d 404 0 CALL:  prolog:\=(48, -1 )
8286d 195 0 CALL:  os:get_codes('$stream'(3), _131814, [] )
8287d 414 0 CALL:  prolog:get_code('$stream'(3), _131815 )
8288d 414 0 CALL:  prolog:\=(32, -1 )
8289d 195 0 CALL:  os:get_codes('$stream'(3), _131816, [] )
8290d 424 0 CALL:  prolog:get_code('$stream'(3), _131817 )
8291d 424 0 CALL:  prolog:\=(43, -1 )
8292d 195 0 CALL:  os:get_codes('$stream'(3), _131818, [] )
8293d 434 0 CALL:  prolog:get_code('$stream'(3), _131819 )
8294d 434 0 CALL:  prolog:\=(32, -1 )
8295d 195 0 CALL:  os:get_codes('$stream'(3), _131820, [] )
8296d 444 0 CALL:  prolog:get_code('$stream'(3), _131821 )
8297d 444 0 CALL:  prolog:\=(120, -1 )
8298d 195 0 CALL:  os:get_codes('$stream'(3), _131822, [] )
8299d 454 0 CALL:  prolog:get_code('$stream'(3), _131823 )
8300d 454 0 CALL:  prolog:\=(49, -1 )
8301d 195 0 CALL:  os:get_codes('$stream'(3), _131824, [] )
8302d 464 0 CALL:  prolog:get_code('$stream'(3), _131825 )
8303d 464 0 CALL:  prolog:\=(10, -1 )
8304d 195 0 CALL:  os:get_codes('$stream'(3), _131826, [] )
8305d 474 0 CALL:  prolog:get_code('$stream'(3), _131827 )
8306d 474 0 CALL:  prolog:\=(76, -1 )
8307d 195 0 CALL:  os:get_codes('$stream'(3), _131828, [] )
8308d 484 0 CALL:  prolog:get_code('$stream'(3), _131829 )
8309d 484 0 CALL:  prolog:\=(50, -1 )
8310d 195 0 CALL:  os:get_codes('$stream'(3), _131830, [] )
8311d 494 0 CALL:  prolog:get_code('$stream'(3), _131831 )
8312d 494 0 CALL:  prolog:\=(32, -1 )
8313d 195 0 CALL:  os:get_codes('$stream'(3), _131832, [] )
8314d 504 0 CALL:  prolog:get_code('$stream'(3), _131833 )
8315d 504 0 CALL:  prolog:\=(61, -1 )
8316d 195 0 CALL:  os:get_codes('$stream'(3), _131834, [] )
8317d 514 0 CALL:  prolog:get_code('$stream'(3), _131835 )
8318d 514 0 CALL:  prolog:\=(32, -1 )
8319d 195 0 CALL:  os:get_codes('$stream'(3), _131836, [] )
8320d 524 0 CALL:  prolog:get_code('$stream'(3), _131837 )
8321d 524 0 CALL:  prolog:\=(76, -1 )
8322d 195 0 CALL:  os:get_codes('$stream'(3), _131838, [] )
8323d 534 0 CALL:  prolog:get_code('$stream'(3), _131839 )
8324d 534 0 CALL:  prolog:\=(49, -1 )
8325d 195 0 CALL:  os:get_codes('$stream'(3), _131840, [] )
8326d 544 0 CALL:  prolog:get_code('$stream'(3), _131841 )
8327d 544 0 CALL:  prolog:\=(10, -1 )
8328d 195 0 CALL:  os:get_codes('$stream'(3), _131842, [] )
8329d 554 0 CALL:  prolog:get_code('$stream'(3), _131843 )
8330d 554 0 CALL:  prolog:\=(76, -1 )
8331d 195 0 CALL:  os:get_codes('$stream'(3), _131844, [] )
8332d 564 0 CALL:  prolog:get_code('$stream'(3), _131845 )
8333d 564 0 CALL:  prolog:\=(50, -1 )
8334d 195 0 CALL:  os:get_codes('$stream'(3), _131846, [] )
8335d 574 0 CALL:  prolog:get_code('$stream'(3), _131847 )
8336d 574 0 CALL:  prolog:\=(10, -1 )
8337d 195 0 CALL:  os:get_codes('$stream'(3), _131848, [] )
8338d 584 0 CALL:  prolog:get_code('$stream'(3), _131849 )
8339d 584 0 CALL:  prolog:\=(-1, -1 )
8340d 584 0 FAIL RETRY:  os:get_codes('$stream'(3), _131848, [] )
8341d 195 0 CALL:  prolog:close('$stream'(3) )
8342d 195 0 CALL:  operating_system_support:md5([64,66,68,68,49,10,50,10,48,10,50,10,76,49,32,61,32,120,48,32,43,32,120,49,10,76,50,32,61,32,76,49,10,76,50,10], _130966, [] )
8343d 195 0 CALL:  prolog:format('~s => ~s~n', os:[[64,66,68,68,49,10,50,10,48,10,50,10,76,49,32,61,32,120,48,32,43,32,120,49,10,76,50,32,61,32,76,49,10,76,50,10],[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102]] )
8344d 195 0 TRY_OR 
8345d 209 0 CALL:  prolog:==(195, 195 )
8346d 140 0 CALL:  problog_lfi:calc_all_md5([], _130962 )
8347d 140 0 CALL:  prolog:findall(a(_131921,_131922,_131923), problog_lfi: (bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933),nth1(1,_131933,a(_131921,_131922)),length(_131933,_131923)), _1048428 )
8348d 140 0 CALL:  prolog:must_be_of_type(list_or_partial_list, _1048428 )
8349d 176 0 FAIL RETRY:  prolog:must_be_of_type(list_or_partial_list, _1048428 )
8350d 140 0 TRY_OR 
8351d 183 0 CALL:  error:has_type(list_or_partial_list, _1048428 )
8352d 183 0 CALL:  error:is_list_or_partial_list(_1048428 )
8353d 183 0 CALL:  prolog:$skip_list(_131954, _1048428, _131955 )
8354d 140 0 CALL:  prolog:$findall(a(_131921,_131922,_131923), problog_lfi: (bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933),nth1(1,_131933,a(_131921,_131922)),length(_131933,_131923)), [], _131955 )
8355d 140 0 CALL:  nb:nb_queue(_1048408 )
8356d 140 0 TRY_OR 
8357d 177 0 CALL:  prolog:$execute(problog_lfi: (bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933),nth1(1,_131933,a(_131921,_131922)),length(_131933,_131923)) )
8358d 177 0 CALL:  prolog:$call(problog_lfi: (bagof(a(_130927,_130928),memxbber(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933),nth1(1,_131933,a(_131921,_131922)),length(_131933,_131923)), 177, problog_lfi: (bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933),nth1(1,_131933,a(_131921,_131922)),length(_131933,_131923)), user )
8359d 188 0 FAIL RETRY:  prolog:$call(problog_lfi: (bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933),nth1(1,_131933,a(_131921,_131922)),length(_131933,_131923)), 177, problog_lfi: (bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933),nth1(1,_131933,a(_131921,_131922)),length(_131933,_131923)), user )
8360d 177 0 CALL:  prolog:$call(bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933),nth1(1,_131933,a(_131921,_131922)),length(_131933,_131923), 177, problog_lfi: (bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933),nth1(1,_131933,a(_131921,_131922)),length(_131933,_131923)), problog_lfi )
8361d 177 0 CALL:  prolog:$call(bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933), 177, problog_lfi: (bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933),nth1(1,_131933,a(_131921,_131922)),length(_131933,_131923)), problog_lfi )
8362d 219 0 FAIL RETRY:  prolog:$call(bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933), 177, problog_lfi: (bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933),nth1(1,_131933,a(_131921,_131922)),length(_131933,_131923)), problog_lfi )
8363d 177 0 CALL:  prolog:$execute0(bagof(a(_130927,_130928),member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_131933), problog_lfi )
8364d 177 0 CALL:  prolog:bagof(a(_130927,_130928), member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _131933 )
8365d 177 0 CALL:  prolog:$is_list_or_partial_list(_131933 )
8366d 177 0 CALL:  prolog:$bagof(a(_130927,_130928), member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _131933 )
8367d 177 0 CALL:  prolog:$free_variables_in_term(a(_130927,_130928)^member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048359, _1048357 )
8368d 177 0 TRY_OR 
8369d 229 0 CALL:  prolog:\==($(_131940), $ )
8370d 177 0 CALL:  prolog:$findall_with_common_vars($(_131940)-a(_130927,_130928), member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048355 )
8371d 177 0 CALL:  nb:nb_queue(_1048348 )
8372d 177 0 TRY_OR 
8373d 237 0 CALL:  prolog:$execute(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]) )
+s 0x5602af2dda90
 @0x7efdd88a31a8 0
8374d 237 0 CALL:  prolog:$call(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), 237, member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user )
8375d 248 0 FAIL RETRY:  prolog:$call(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), 237, member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user )
8376d 237 0 CALL:  prolog:$execute0(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user )
8377d 237 0 CALL:  user:member(a(_130927,_130928,_131940), [a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])] )
8378d 237 0 CALL:  prolog:$undefp([user|member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])])], error )
8379d 237 0 CALL:  prolog:yap_flag(unknown, error, fail )
8380d 237 0 CALL:  prolog:$stop_creeping(_1048325 )
8381d 237 0 TRY_OR 
8382d 261 0 CALL:  prolog:$undefp_search(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140175:_140176 )
8383d 270 0 CALL:  prolog:$pred_exists(unknown_predicate_handler(_140178,_140179,_140180,_140181), user )
8384d 270 0 FAIL RETRY:  prolog:$undefp_search(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140175:_140176 )
8385d 261 0 CALL:  prolog:expand_goal(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140175:_140176 )
8386d 261 0 CALL:  prolog:$expand_meta_call(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), [], _140175:_140176 )
8387d 261 0 CALL:  prolog:source_module(_140177 )
8388d 261 0 CALL:  prolog:$yap_strip_module(user:user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048305, _140181 )
8389d 261 0 CALL:  prolog:$expand_goals(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048304, _1048306, user, user, user, []- (user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])])) )
8390d 285 0 FAIL RETRY:  prolog:$expand_goals(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048304, _1048306, user, user, user, []- (user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])])) )
8391d 285 0 FAIL RETRY:  prolog:$expand_goals(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048304, _1048306, user, user, user, []- (user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])])) )
8392d 285 0 FAIL RETRY:  prolog:$expand_goals(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048304, _1048306, user, user, user, []- (user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])])) )
8393d 261 0 CALL:  prolog:$yap_strip_module(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140188, _140189 )
8394d 261 0 CALL:  prolog:$expand_goal(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048304, _1048306, user, user, user, []- (user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])])) )
8395d 261 0 CALL:  prolog:$yap_strip_module(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140193, _140194 )
8396d 261 0 CALL:  prolog:$user_expansion(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140199:_140200 )
8397d 295 0 CALL:  prolog:_user_expand_goal(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140202:_140203 )
8400d 295 0 FAIL RETRY:  prolog:$user_expansion(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140199:_140200 )
8401d 261 0 CALL:  prolog:$import_expansion(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140202:_140203 )
8402d 294 0 CALL:  prolog:$imported_predicate(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, _140203, _140202 )
8403d 310 0 CALL:  prolog:$is_system_predicate(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), prolog )
8404d 310 0 FAIL RETRY:  prolog:$imported_predicate(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, _140203, _140202 )
8405d 294 0 CALL:  prolog:$undefined(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user )
8406d 294 0 CALL:  prolog:$get_undefined_predicates(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, _140203, _140202 )
8407d 317 0 CALL:  prolog:recorded('$import', '$import'(_140205,user,_140207,member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),_140209,_140210), _1048248 )
8408d 317 0 FAIL RETRY:  prolog:$get_undefined_predicates(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, _140203, _140202 )
8409d 317 0 CALL:  prolog:$pred_exists(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user )
8410d 317 0 FAIL RETRY:  prolog:$get_undefined_predicates(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, _140203, _140202 )
8411d 317 0 CALL:  prolog:recorded('$dialect', swi, _1048243 )
8412d 317 0 FAIL RETRY:  prolog:$get_undefined_predicates(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, _140203, _140202 )
8413d 294 0 CALL:  prolog:$parent_module(user, _1048261 )
8414d 294 0 FAIL RETRY:  prolog:$import_expansion(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140202:_140203 )
8415d 261 0 CALL:  prolog:$meta_expansion(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, [], _1048293 )
8416d 293 0 CALL:  prolog:$yap_strip_module(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140205, _1048272 )
8417d 293 0 CALL:  prolog:functor(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140208, _140209 )
8418d 293 0 CALL:  prolog:$meta_predicate(member, user, 2, _1048273 )
8419d 293 0 FAIL RETRY:  prolog:$meta_expansion(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, [], _1048293 )
8420d 261 0 CALL:  prolog:$yap_strip_module(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140205, _140206 )
8421d 261 0 CALL:  prolog:$yap_strip_module(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140207, _140208 )
8422d 261 0 CALL:  prolog:$end_goal_expansion(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048304, _1048306, user, user, user, user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]) )
8423d 261 0 CALL:  prolog:$match_mod(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, user, user, _1048304 )
8424d 261 0 CALL:  prolog:$is_system_predicate(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user )
8425d 261 0 TRY_OR 
8426d 299 0 CALL:  prolog:==(user, user )
8427d 299 0 CALL:  prolog:==(user, user )
8428d 261 0 CALL:  prolog:$c_built_in(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048295 )
8429d 292 0 CALL:  prolog:get_value('$c_arith', true )
8430d 261 0 CALL:  prolog:do_c_built_in(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048295 )
8431d 303 0 FAIL RETRY:  prolog:do_c_built_in(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048295 )
8432d 303 0 CALL:  prolog:$compop(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048257, _1048258, _1048260 )
8433d 303 0 FAIL RETRY:  prolog:do_c_built_in(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048295 )
8434d 303 0 CALL:  prolog:$yap_strip_module(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140212, _140213 )
8435d 303 0 CALL:  prolog:$match_mod(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, user, user, _1048306 )
8436d 303 0 CALL:  prolog:$is_system_predicate(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user )
8437d 303 0 TRY_OR 
8438d 319 0 CALL:  prolog:==(user, user )
8439d 319 0 CALL:  prolog:==(user, user )
8440d 303 0 CALL:  prolog:$yap_strip_module(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140175, _140176 )
8441d 303 0 TRY_OR 
8442d 311 0 CALL:  prolog:\==(user, user )
8444d 303 0 CALL:  prolog:\==(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]) )
8445d 303 0 FAIL RETRY:  prolog:do_c_built_in(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user, user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _1048295 )
8447d 237 0 CALL:  prolog:yap_flag(unknown, _1048329, error )
8448d 237 0 CALL:  prolog:$handle_error(error, member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), user )
8449d 237 0 CALL:  prolog:functor(member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]), _140172, _140173 )
8450d 237 0 CALL:  prolog:program_continuation(_140171, _140172, _140173 )
8451d 237 0 CALL:  prolog:clause_location(_140174, _140175 )
8452d 237 0 CALL:  prolog:strip_module(prolog:context(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4), _140203, _140204 )
8453d 237 0 CALL:  prolog:throw(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8454d 237 0 CALL:  prolog:$jump_env_and_store_ball(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130927,_130928,_131940),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
+s 0x5602aecefa50
 @0x7efdd88a31a8 0
8455d 78 0 FAIL RETRY:  prolog:$catch(prolog:once(user: (start_low_level_trace,do_learning(100))), _130911, user:'$Error'(_130911) )
8456d 63 0 CALL:  prolog:$get_exception(_130911 )
- 0x5602aecefa50
 @0x7efdd88a3078 63
8457d 63 0 CALL:  prolog:$run_catch(user:'$Error'(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]])), error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8458d 77 0 FAIL RETRY:  prolog:$run_catch(user:'$Error'(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]])), error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8459d 77 0 FAIL RETRY:  prolog:$run_catch(user:'$Error'(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]])), error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8460d 77 0 CALL:  prolog:functor(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), _131132, _131133 )
8461d 77 0 CALL:  prolog:$hidden_atom(error )
8462d 77 0 FAIL RETRY:  prolog:$run_catch(user:'$Error'(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]])), error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8463d 63 0 CALL:  prolog:call(user:'$Error'(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]])) )
8464d 63 0 CALL:  prolog:$execute(user:'$Error'(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]])) )
8465d 63 0 CALL:  prolog:$Error(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8466d 63 0 CALL:  prolog:$LoopError(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), top )
8467d 77 0 CALL:  prolog:flush_output(user_output )
@BDD1
2
0
2
L1 = x0 + x1
L2 = L1
L2
 => 82dd14d88adc9c3ef9bad8c3f905ecaf
8468d 77 0 CALL:  prolog:flush_output(user_error )
8469d 77 0 FAIL RETRY:  prolog:$LoopError(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), top )
8470d 63 0 CALL:  prolog:$process_error(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), top )
8471d 91 0 FAIL RETRY:  prolog:$process_error(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), top )
8472d 91 0 CALL:  prolog:functor(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), _131132, _131133 )
8473d 91 0 CALL:  prolog:print_message(error, error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8474d 105 0 TRY_OR 
8475d 121 0 CALL:  prolog:==(error, silent )
8477d 105 0 CALL:  prolog:$pred_exists(portray_message(_131132,_131133), user )
8478d 105 0 CALL:  user:portray_message(error, error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8479d 105 0 FAIL RETRY:  prolog:print_message(error, error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8480d 105 0 CALL:  prolog:current_prolog_flag(verbose_load, silent )
8481d 105 0 FAIL RETRY:  prolog:print_message(error, error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8482d 105 0 CALL:  prolog:current_prolog_flag(verbose, silent )
8483d 105 0 FAIL RETRY:  prolog:print_message(error, error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8484d 105 0 CALL:  prolog:__NB_getval__('$if_skip_mode', skip, fail )
8485d 105 0 FAIL RETRY:  prolog:print_message(error, error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8486d 105 0 FAIL RETRY:  prolog:print_message(error, error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8487d 105 0 CALL:  prolog:message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), _1048459, [end(_131134)] )
8488d 105 0 FAIL RETRY:  prolog:print_message(error, error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]) )
8489d 105 0 CALL:  $messages:translate_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, _1048459, [end(_131134)] )
8490d 128 0 CALL:  $messages:compose_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, _1048459, [end(_131134)] )
8491d 144 0 CALL:  prolog:C(_1048459, '   ~w:'-[error], _1048424 )
8492d 144 0 CALL:  prolog:message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), _131141, [end(_131134)] )
8493d 144 0 FAIL RETRY:  $messages:compose_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, _1048459, [end(_131134)] )
8494d 144 0 FAIL RETRY:  $messages:compose_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, _1048459, [end(_131134)] )
8495d 144 0 CALL:  prolog:$show_consult_level(_1048416 )
8496d 144 0 CALL:  $messages:location(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, 0, _1048459, _1048417 )
8497d 171 0 FAIL RETRY:  $messages:location(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, 0, _1048459, _1048417 )
8498d 171 0 FAIL RETRY:  $messages:location(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, 0, _1048459, _1048417 )
8499d 171 0 CALL:  prolog:source_location(_1048392, _1048393 )
8500d 171 0 CALL:  prolog:stream_property(_1048387, alias(loop_stream) )
8501d 144 0 CALL:  $messages:display_consulting(charsio, error, 0, _1048459, _1048391 )
8502d 197 0 CALL:  prolog:>(0, 0 )
8503d 197 0 FAIL RETRY:  $messages:display_consulting(charsio, error, 0, _1048459, _1048391 )
8504d 144 0 CALL:  lists:memberchk([p|p(_131142,_131143,_131144,_131145,_131146)], [[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8505d 193 0 FAIL RETRY:  lists:memberchk([p|p(_131142,_131143,_131144,_131145,_131146)], [[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8506d 144 0 CALL:  lists:memberchk([p|p(_131142,_131143,_131144,_131145,_131146)], [[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8507d 144 0 CALL:  prolog:C(_1048459, '~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3], _1048417 )
8508d 144 0 CALL:  $messages:main_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, 0, _131163, _1048418 )
8509d 169 0 FAIL RETRY:  $messages:main_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, 0, _131163, _1048418 )
8510d 169 0 FAIL RETRY:  $messages:main_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, 0, _131163, _1048418 )
8511d 169 0 FAIL RETRY:  $messages:main_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, 0, _131163, _1048418 )
8512d 169 0 FAIL RETRY:  $messages:main_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, 0, _131163, _1048418 )
8513d 169 0 FAIL RETRY:  $messages:main_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, 0, _131163, _1048418 )
8514d 169 0 FAIL RETRY:  $messages:main_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, 0, _131163, _1048418 )
8515d 169 0 FAIL RETRY:  $messages:main_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, 0, _131163, _1048418 )
8516d 169 0 FAIL RETRY:  $messages:main_message(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, 0, _131163, _1048418 )
8517d 144 0 CALL:  prolog:C(_131163, ' ~a:  ~q ~q could not be found,'-[error,procedure,member/2], _1048399 )
8518d 144 0 CALL:  prolog:C(_131174, nl, _1048418 )
8519d 144 0 CALL:  $messages:c_goal(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, _131176, _1048419 )
8520d 167 0 CALL:  lists:memberchk([c|c(_131180,_131181,_131182)], [[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8521d 188 0 FAIL RETRY:  lists:memberchk([c|c(_131180,_131181,_131182)], [[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8522d 167 0 CALL:  lists:memberchk([c|c(_131180,_131181,_131182)], [[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8523d 188 0 FAIL RETRY:  lists:memberchk([c|c(_131180,_131181,_131182)], [[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8524d 167 0 CALL:  lists:memberchk([c|c(_131180,_131181,_131182)], [[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8525d 188 0 FAIL RETRY:  lists:memberchk([c|c(_131180,_131181,_131182)], [[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8526d 167 0 CALL:  lists:memberchk([c|c(_131180,_131181,_131182)], [[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8527d 188 0 FAIL RETRY:  lists:memberchk([c|c(_131180,_131181,_131182)], [[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8528d 167 0 CALL:  lists:memberchk([c|c(_131180,_131181,_131182)], [] )
8529d 167 0 FAIL RETRY:  $messages:c_goal(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, _131176, _1048419 )
8530d 144 0 CALL:  $messages:caller(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, _131176, _1048422 )
8531d 166 0 CALL:  lists:memberchk([p|p(_131180,_131181,_131182,_131183,_131184)], [[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8532d 192 0 FAIL RETRY:  lists:memberchk([p|p(_131180,_131181,_131182,_131183,_131184)], [[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8533d 166 0 CALL:  lists:memberchk([p|p(_131180,_131181,_131182,_131183,_131184)], [[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8534d 166 0 CALL:  lists:memberchk([g|g(_131188)], [[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8535d 144 0 CALL:  prolog:C(_131176, '~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)], _1048395 )
8536d 144 0 CALL:  prolog:C(_131197, nl, _1048396 )
8537d 144 0 CALL:  prolog:C(_131199, '~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0], _1048402 )
8538d 144 0 CALL:  prolog:C(_131216, nl, _1048422 )
8539d 144 0 CALL:  $messages:extra_info(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, _131218, _1048423 )
8540d 163 0 CALL:  lists:memberchk([i|_131220], [[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8541d 181 0 FAIL RETRY:  lists:memberchk([i|_131220], [[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8542d 163 0 CALL:  lists:memberchk([i|_131220], [[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8543d 181 0 FAIL RETRY:  lists:memberchk([i|_131220], [[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8544d 163 0 CALL:  lists:memberchk([i|_131220], [[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8545d 181 0 FAIL RETRY:  lists:memberchk([i|_131220], [[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8546d 163 0 CALL:  lists:memberchk([i|_131220], [[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8547d 181 0 FAIL RETRY:  lists:memberchk([i|_131220], [[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]] )
8548d 163 0 CALL:  lists:memberchk([i|_131220], [] )
8549d 163 0 FAIL RETRY:  $messages:extra_info(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, _131218, _1048423 )
8550d 128 0 CALL:  prolog:C(_131218, nl, _1048424 )
8551d 128 0 CALL:  prolog:C(_131220, nl, [end(_131134)] )
8552d 105 0 TRY_OR 
8553d 123 0 CALL:  user:message_hook(error(existence_error(procedure,member/2),[[g|g(prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4))],[p|p(prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0)],[e|p(problog_lfi,create_training_query_cluster_list,1,'/home/vsc/github/yap-6.3/packages/ProbLog/problog_lfi.yap',708)],[h|g('$handle_error'(error,member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),user))]]), error, [begin(error,_131134),'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)] )
8555d 105 0 CALL:  $messages:prefix(error, _1048463 )
8556d 105 0 CALL:  prolog:print_message_lines(user_error, '~N'-[], [begin(error,_131134),'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)] )
8557d 105 0 TRY_OR 
8558d 129 0 CALL:  prolog:string('~N'-[] )
8560d 105 0 TRY_OR 
8562d 105 0 CALL:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8563d 122 0 CALL:  prolog:C(['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048443 )
8564d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8565d 122 0 CALL:  prolog:C(['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], flush, _1048443 )
8566d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8567d 122 0 CALL:  prolog:C(['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131237), [] )
8568d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8569d 122 0 CALL:  prolog:C(['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], at_same_line, _1048446 )
8570d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8571d 122 0 CALL:  prolog:C(['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048446 )
8572d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8573d 122 0 CALL:  prolog:C(['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], flush, _1048446 )
8574d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8575d 122 0 CALL:  prolog:C(['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131237), _1048446 )
8576d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8577d 122 0 CALL:  prolog:C(['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], begin(_131237,_131238), _1048442 )
8578d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8579d 122 0 CALL:  prolog:C(['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], prefix(_131239-_131240), _1048446 )
8580d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8581d 122 0 CALL:  prolog:C(['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], prefix(_131237), _1048446 )
8582d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8583d 122 0 CALL:  prolog:C(['~N'-[],'~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], _131237-_131238, _1048446 )
8584d 105 0 CALL:  prolog:format(user_error, '~N', '$messages':[] )
8585d 105 0 CALL:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8586d 122 0 CALL:  prolog:C(['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048443 )
8587d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8588d 122 0 CALL:  prolog:C(['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], flush, _1048443 )
8589d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8590d 122 0 CALL:  prolog:C(['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131243), [] )
8591d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8592d 122 0 CALL:  prolog:C(['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], at_same_line, _1048446 )
8593d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8594d 122 0 CALL:  prolog:C(['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048446 )
8595d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8596d 122 0 CALL:  prolog:C(['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], flush, _1048446 )
8597d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8598d 122 0 CALL:  prolog:C(['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131243), _1048446 )
8599d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8600d 122 0 CALL:  prolog:C(['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], begin(_131243,_131244), _1048442 )
8601d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8602d 122 0 CALL:  prolog:C(['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], prefix(_131245-_131246), _1048446 )
8603d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8604d 122 0 CALL:  prolog:C(['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], prefix(_131243), _1048446 )
8605d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8606d 122 0 CALL:  prolog:C(['~a:~d:0 ~a in ~a:~q/~d:'-[charsio,1,error,prolog,'$handle_error',3],' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], _131243-_131244, _1048446 )
8607d 105 0 CALL:  prolog:format(user_error, '~a:~d:0 ~a in ~a:~q/~d:', '$messages':[charsio,1,error,prolog,'$handle_error',3] )
charsio:1:0 error in prolog:'$handle_error'/3:8608d 105 0 CALL:  $messages:print_lines(user_error, ['~N'-[]], _131134, [' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8609d 122 0 CALL:  prolog:C([' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048443 )
8610d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8611d 122 0 CALL:  prolog:C([' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], flush, _1048443 )
8612d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8613d 122 0 CALL:  prolog:C([' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131253), [] )
8614d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8615d 122 0 CALL:  prolog:C([' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], at_same_line, _1048446 )
8616d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8617d 122 0 CALL:  prolog:C([' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048446 )
8618d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8619d 122 0 CALL:  prolog:C([' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], flush, _1048446 )
8620d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8621d 122 0 CALL:  prolog:C([' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131253), _1048446 )
8622d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8623d 122 0 CALL:  prolog:C([' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], begin(_131253,_131254), _1048442 )
8624d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8625d 122 0 CALL:  prolog:C([' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], prefix(_131255-_131256), _1048446 )
8626d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8627d 122 0 CALL:  prolog:C([' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], prefix(_131253), _1048446 )
8628d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8629d 122 0 CALL:  prolog:C([' ~a:  ~q ~q could not be found,'-[error,procedure,member/2],nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], _131253-_131254, _1048446 )
8630d 105 0 CALL:  prolog:format(user_error, ' ~a:  ~q ~q could not be found,', '$messages':[error,procedure,member/2] )
 error:  procedure member/2 could not be found,8631d 105 0 CALL:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8632d 122 0 CALL:  prolog:C([nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048443 )
8633d 122 0 CALL:  prolog:C(['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131262), [] )
8634d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8635d 122 0 CALL:  prolog:C([nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], flush, _1048443 )
8636d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8637d 122 0 CALL:  prolog:C([nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131262), [] )
8638d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8639d 122 0 CALL:  prolog:C([nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], at_same_line, _1048446 )
8640d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8641d 122 0 CALL:  prolog:C([nl,'~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048446 )
8642d 105 0 CALL:  prolog:nl(user_error )

8643d 105 0 CALL:  prolog:format(user_error, '~N', '$messages':[] )
8644d 105 0 TRY_OR 
8645d 142 0 CALL:  prolog:==([], [] )
8646d 105 0 CALL:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8647d 122 0 CALL:  prolog:C(['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048443 )
8648d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8649d 122 0 CALL:  prolog:C(['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], flush, _1048443 )
8650d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8651d 122 0 CALL:  prolog:C(['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131266), [] )
8652d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8653d 122 0 CALL:  prolog:C(['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], at_same_line, _1048446 )
8654d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8655d 122 0 CALL:  prolog:C(['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048446 )
8656d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8657d 122 0 CALL:  prolog:C(['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], flush, _1048446 )
8658d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8659d 122 0 CALL:  prolog:C(['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131266), _1048446 )
8660d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8661d 122 0 CALL:  prolog:C(['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], begin(_131266,_131267), _1048442 )
8662d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8663d 122 0 CALL:  prolog:C(['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], prefix(_131268-_131269), _1048446 )
8664d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8665d 122 0 CALL:  prolog:C(['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], prefix(_131266), _1048446 )
8666d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8667d 122 0 CALL:  prolog:C(['~*|goal was ~q'-[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)],nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], _131266-_131267, _1048446 )
8668d 105 0 CALL:  prolog:format(user_error, '~*|goal was ~q', '$messages':[10,prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)] )
          goal was prolog:context(user:member(a(_130945,_130946,_130947),[a(1,1,[56,50,100,100,49,52,100,56,56,97,100,99,57,99,51,101,102,57,98,97,100,56,99,51,102,57,48,53,101,99,97,102])]),prolog:'$call'/4)8669d 105 0 CALL:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8670d 122 0 CALL:  prolog:C([nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048443 )
8671d 122 0 CALL:  prolog:C(['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131273), [] )
8672d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8673d 122 0 CALL:  prolog:C([nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], flush, _1048443 )
8674d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8675d 122 0 CALL:  prolog:C([nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131273), [] )
8676d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8677d 122 0 CALL:  prolog:C([nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], at_same_line, _1048446 )
8678d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8679d 122 0 CALL:  prolog:C([nl,'~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048446 )
8680d 105 0 CALL:  prolog:nl(user_error )

8681d 105 0 CALL:  prolog:format(user_error, '~N', '$messages':[] )
8682d 105 0 TRY_OR 
8683d 142 0 CALL:  prolog:==([], [] )
8684d 105 0 CALL:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8685d 122 0 CALL:  prolog:C(['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048443 )
8686d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8687d 122 0 CALL:  prolog:C(['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], flush, _1048443 )
8688d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8689d 122 0 CALL:  prolog:C(['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131277), [] )
8690d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8691d 122 0 CALL:  prolog:C(['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], at_same_line, _1048446 )
8692d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8693d 122 0 CALL:  prolog:C(['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], nl, _1048446 )
8694d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8695d 122 0 CALL:  prolog:C(['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], flush, _1048446 )
8696d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8697d 122 0 CALL:  prolog:C(['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], end(_131277), _1048446 )
8698d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8699d 122 0 CALL:  prolog:C(['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], begin(_131277,_131278), _1048442 )
8700d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8701d 122 0 CALL:  prolog:C(['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], prefix(_131279-_131280), _1048446 )
8702d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8703d 122 0 CALL:  prolog:C(['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], prefix(_131277), _1048446 )
8704d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, ['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], [] )
8705d 122 0 CALL:  prolog:C(['~*|exception raised from ~a:~q:~d, ~a:~d:0: '-[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0],nl,nl,nl,end(_131134)], _131277-_131278, _1048446 )
8706d 105 0 CALL:  prolog:format(user_error, '~*|exception raised from ~a:~q:~d, ~a:~d:0: ', '$messages':[10,prolog,'$handle_error',3,'/home/vsc/github/yap-6.3/pl/undefined.yap',0] )
          exception raised from prolog:'$handle_error':3, /home/vsc/github/yap-6.3/pl/undefined.yap:0:0: 8707d 105 0 CALL:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,nl,nl,end(_131134)], [] )
8708d 122 0 CALL:  prolog:C([nl,nl,nl,end(_131134)], nl, _1048443 )
8709d 122 0 CALL:  prolog:C([nl,nl,end(_131134)], end(_131286), [] )
8710d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,nl,nl,end(_131134)], [] )
8711d 122 0 CALL:  prolog:C([nl,nl,nl,end(_131134)], flush, _1048443 )
8712d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,nl,nl,end(_131134)], [] )
8713d 122 0 CALL:  prolog:C([nl,nl,nl,end(_131134)], end(_131286), [] )
8714d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,nl,nl,end(_131134)], [] )
8715d 122 0 CALL:  prolog:C([nl,nl,nl,end(_131134)], at_same_line, _1048446 )
8716d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,nl,nl,end(_131134)], [] )
8717d 122 0 CALL:  prolog:C([nl,nl,nl,end(_131134)], nl, _1048446 )
8718d 105 0 CALL:  prolog:nl(user_error )

8719d 105 0 CALL:  prolog:format(user_error, '~N', '$messages':[] )
8720d 105 0 TRY_OR 
8721d 142 0 CALL:  prolog:==([], [] )
8722d 105 0 CALL:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,nl,end(_131134)], [] )
8723d 122 0 CALL:  prolog:C([nl,nl,end(_131134)], nl, _1048443 )
8724d 122 0 CALL:  prolog:C([nl,end(_131134)], end(_131290), [] )
8725d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,nl,end(_131134)], [] )
8726d 122 0 CALL:  prolog:C([nl,nl,end(_131134)], flush, _1048443 )
8727d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,nl,end(_131134)], [] )
8728d 122 0 CALL:  prolog:C([nl,nl,end(_131134)], end(_131290), [] )
8729d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,nl,end(_131134)], [] )
8730d 122 0 CALL:  prolog:C([nl,nl,end(_131134)], at_same_line, _1048446 )
8731d 122 0 FAIL RETRY:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,nl,end(_131134)], [] )
8732d 122 0 CALL:  prolog:C([nl,nl,end(_131134)], nl, _1048446 )
8733d 105 0 CALL:  prolog:nl(user_error )

8734d 105 0 CALL:  prolog:format(user_error, '~N', '$messages':[] )
8735d 105 0 TRY_OR 
8736d 142 0 CALL:  prolog:==([], [] )
8737d 105 0 CALL:  $messages:print_lines(user_error, ['~N'-[]], _131134, [nl,end(_131134)], [] )
8738d 122 0 CALL:  prolog:C([nl,end(_131134)], nl, _1048443 )
8739d 122 0 CALL:  prolog:C([end(_131134)], end(_131294), [] )
8740d 122 0 CALL:  prolog:==(_131134, _131134 )
8741d 105 0 CALL:  prolog:nl(user_error )

8742d 105 0 CALL:  prolog:flush_output(user_error )
8743d 63 0 FAIL RETRY:  prolog:$startup_goals
8744d 63 0 CALL:  prolog:recorded('$restore_flag', goal(_130901:_130902), _1048505 )
8745d 63 0 FAIL RETRY:  prolog:$startup_goals
8746d 63 0 CALL:  prolog:get_value('$myddas_goal', _130898 )
8747d 63 0 CALL:  prolog:\=([], [] )
8748d 63 0 FAIL RETRY:  prolog:$startup_goals
8749d 50 0 FAIL RETRY:  prolog:$init_from_saved_state_and_args
8750d 50 0 CALL:  prolog:recorded('$restore_goal', _1048518, _1048517 )
+s 0x5602af2e83e0
 @0x7efdd88a3078 0
8751d 50 0 FAIL RETRY:  prolog:$init_from_saved_state_and_args
8752d 37 0 FAIL RETRY:  prolog:$do_init_state
8753d 37 0 CALL:  prolog:stream_property(user_input, tty(true) )
8754d 37 0 CALL:  prolog:set_prolog_flag(readline, true )
8755d 37 0 CALL:  prolog:$db_clean_queues(0 )
8756d 37 0 CALL:  prolog:set_input(user_input )
8757d 37 0 CALL:  prolog:set_output(user_output )
8758d 37 0 CALL:  prolog:$init_or_threads
+s 0x5602af267ca0
 @0x7efdd88a3078 0
+s 0x5602af2fc750
 @0x7efdd88a3078 0
- 0x5602af267ca0
 @0x7efdd88a3078 37
8759d 45 0 CALL:  prolog:$c_yapor_workers(_130900 )
8760d 45 0 FAIL RETRY:  prolog:$init_or_threads
8761d 37 0 CALL:  prolog:$run_at_thread_start
+s 0x5602af267ca0
 @0x7efdd88a3078 0
+s 0x5602af1e08d0
 @0x7efdd88a3078 0
- 0x5602af267ca0
 @0x7efdd88a3078 37
8762d 45 0 CALL:  prolog:recorded('$thread_initialization', _130901:_130902, _1048522 )
8763d 45 0 FAIL RETRY:  prolog:$run_at_thread_start
8764d 37 0 FAIL RETRY:  prolog:$do_init_state
8765d 24 0 CALL:  prolog:$db_clean_queues(0 )
8766d 24 0 CALL:  prolog:set_input(user_input )
8767d 24 0 CALL:  prolog:set_output(user_output )
8768d 24 0 CALL:  prolog:$init_or_threads
8769d 37 0 CALL:  prolog:$c_yapor_workers(_130898 )
8770d 37 0 FAIL RETRY:  prolog:$init_or_threads
8771d 24 0 CALL:  prolog:$run_at_thread_start
8772d 32 0 CALL:  prolog:recorded('$thread_initialization', _130899:_130900, _1048535 )
8773d 32 0 FAIL RETRY:  prolog:$run_at_thread_start
8776d 24 0 CALL:  prolog:$live
8777d 24 0 TRY_OR 
8778d 38 0 CALL:  prolog:$current_module(_1048545 )
8779d 38 0 TRY_OR 
8780d 46 0 CALL:  prolog:==(user, user )
8781d 38 0 CALL:  prolog:$system_catch('$enter_top_level', user, _130898, '$Error'(_130898) )
8782d 38 0 CALL:  prolog:$catch(user:'$enter_top_level', _130898, '$Error'(_130898) )
8783d 48 0 CALL:  prolog:$execute(user:'$enter_top_level' )
8784d 48 0 CALL:  prolog:$enter_top_level
+s 0x5602af000ee0
 @0x7efdd88a3028 0
+s 0x5602af314c50
 @0x7efdd88a3028 0
- 0x5602af000ee0
 @0x7efdd88a3028 48
8785d 62 0 CALL:  prolog:$alarm(0, 0, _130904, _130905 )
8786d 62 0 FAIL RETRY:  prolog:$enter_top_level
8787d 62 0 CALL:  prolog:$clean_up_dead_clauses
8788d 62 0 FAIL RETRY:  prolog:$enter_top_level
8789d 62 0 CALL:  prolog:get_value('$top_level_goal', _130904 )
8790d 62 0 CALL:  prolog:\=([], [] )
8791d 62 0 FAIL RETRY:  prolog:$enter_top_level
8792d 48 0 CALL:  prolog:flush_output
8793d 48 0 CALL:  prolog:$run_toplevel_hooks
+s 0x5602af267ca0
 @0x7efdd88a3028 0
+s 0x5602af000ee0
 @0x7efdd88a3028 0
- 0x5602af267ca0
 @0x7efdd88a3028 48
8794d 72 0 CALL:  prolog:current_prolog_flag(break_level, 0 )
8795d 72 0 CALL:  prolog:recorded('$toplevel_hooks', _1048496, _1048495 )
+s 0x5602aeb59920
 @0x7efdd88a3028 0
8796d 72 0 FAIL RETRY:  prolog:$run_toplevel_hooks
8797d 48 0 CALL:  prolog:prompt1(' ?- ' )
8798d 48 0 CALL:  prolog:$read_toplevel(_1048511, _1048512, _1048513 )
8799d 48 0 CALL:  prolog:$prompt
8800d 48 0 CALL:  prolog:current_prolog_flag(break_level, _1048490 )
8801d 48 0 TRY_OR 
8802d 93 0 CALL:  prolog:==(0, 0 )
8803d 48 0 CALL:  prolog:current_prolog_flag(debug, _1048491 )
8804d 48 0 TRY_OR 
8805d 92 0 CALL:  prolog:$trace_on
8806d 92 0 CALL:  prolog:__NB_getval__('$trace', on, fail )
8808d 92 0 CALL:  prolog:==(false, true )
8810d 48 0 CALL:  prolog:yap_flag(toplevel_prompt, _130905 )
8811d 48 0 CALL:  prolog:atomic_concat(['?- '], _1048497 )
8812d 48 0 CALL:  prolog:prompt1('?- ' )
8813d 48 0 CALL:  prolog:prompt(_130907, ' |   ' )
8814d 48 0 CALL:  prolog:$ensure_prompting
8815d 48 0 CALL:  prolog:catch(read_term(user_input,_130910,[variable_names(_130915),syntax_errors(dec10),term_position(_130923)]), _130924, '$handle_toplevel_error'(_130924) )
8816d 48 0 CALL:  prolog:$catch(read_term(user_input,_130910,[variable_names(_130915),syntax_errors(dec10),term_position(_130923)]), _130924, '$handle_toplevel_error'(_130924) )
8817d 74 0 CALL:  prolog:$execute(read_term(user_input,_130910,[variable_names(_130915),syntax_errors(dec10),term_position(_130923)]) )
8818d 74 0 CALL:  prolog:read_term(user_input, _130910, [variable_names(_130915),syntax_errors(dec10),term_position(_130923)] )
8819d 74 0 CALL:  prolog:read_term(user_input, _130910, [variable_names(_130915),syntax_errors(dec10),term_position(_130923)] )
8820d 74 0 TRY_OR 
8821d 88 0 CALL:  prolog:==(74, 74 )
8822d 48 0 CALL:  prolog:nb_setval('$spy_gn', 1 )
+s 0x5602aebff300
 @0x7efdd88a3038 0
8823d 48 0 CALL:  prolog:nb_setval('$debug_run', off )
+s 0x5602aebfeb80
 @0x7efdd88a3038 0
8824d 48 0 CALL:  prolog:nb_setval('$debug_jump', off )
+s 0x5602aec01760
 @0x7efdd88a3038 0
8825d 48 0 CALL:  prolog:$command(end_of_file, [], '$stream_position'(0,1,0,0), top )
8826d 72 0 CALL:  prolog:current_prolog_flag(strict_iso, true )
8827d 72 0 FAIL RETRY:  prolog:$command(end_of_file, [], '$stream_position'(0,1,0,0), top )
8828d 48 0 TRY_OR 
8829d 83 0 TRY_OR 
8830d 48 0 CALL:  prolog:$yap_strip_module(end_of_file, _1048503, _1048502 )
8831d 48 0 CALL:  prolog:$execute_command(end_of_file, user, [], '$stream_position'(0,1,0,0), top, end_of_file )
8832d 87 0 FAIL RETRY:  prolog:$execute_command(end_of_file, user, [], '$stream_position'(0,1,0,0), top, end_of_file )
8833d 48 0 CALL:  prolog:current_prolog_flag(break_level, _1048514 )
8834d 48 0 TRY_OR 
8835d 69 0 CALL:  prolog:\=(0, 0 )
8837d 69 0 CALL:  prolog:$pred_exists(halt(_130950), user )
8838d 48 0 CALL:  prolog:halt(0 )
+s 0x5602af3189d0
 @0x7efdd88a3038 0
+s 0x5602af1cb240
 @0x7efdd88a3038 0
- 0x5602af3189d0
 @0x7efdd88a3038 48
8839d 62 0 CALL:  prolog:recorded('$halt', _1048507, _1048506 )
+s 0x5602aeb599d0
 @0x7efdd88a3038 0
8840d 62 0 FAIL RETRY:  prolog:halt(0 )
8841d 48 0 CALL:  prolog:$sync_mmapped_arrays
8842d 48 0 CALL:  prolog:set_value('$live', '$false' )
+s 0x5602af337e20
 @0x7efdd88a3038 0
8843d 48 0 CALL:  prolog:$halt(0 )
- 0x5602af1062c0
 @0x7efdd88a3038 48
- 0x5602af11b460
 @0x7efdd88a3038 48
- 0x5602aef13000
 @0x7efdd88a3038 48
- 0x5602aebf0ae0
 @0x7efdd88a3038 48
- 0x5602aec40450
 @0x7efdd88a3038 48
- 0x5602aee7c620
 @0x7efdd88a3038 48
- 0x5602aee75c30
 @0x7efdd88a3038 48
- 0x5602aebd1b10
 @0x7efdd88a3038 48
